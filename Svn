#! /bin/bash


function fn_usage()
{
    echo "
        ----------- Usage --------------
        a       find ! -name '.' -a -name '*' | xargs -I{} svn add --force {}  | cat -n
        i       [path]                  : svn info .
        in                              : svn relocate ip to HOSTNAME
        c|cc    [filepath]              : svn ci [files...]
        zc                              : tar ../bk.tgz list
        cf                              : show conflict resolving steps
        D       {?|M|.o}
        d       [-r9527] [filepath]     : equal diff -r BASE:WORKING
        do      [.o path]               : del *.o
        dp      [filepath]              : equal diff -r PREV:COMMITTED
        dc      r9527 [filepath]        : equal diff -r r9526:r9527
        dh                              : horizontal-split-diff
        dl      [filepath]              : equal [Svn S clang]
        h                               : svn help cmd
        l       {5|5 filelist}          : svn log -v [-r REV] [-l LIMIT]
        ps      [filelist]              : svn ps svn:executable on FILE == chmod +x
        q                               : svn -q status
        r       [filelist]              : revert -R {file|dir}
        s       status
        tar     filelist                : tar -zcvf a.tgz filelist
        S       status | grep PAT
        u       update
        U       Svn l 20 | Svn U zhangj : svn --user zhangj
        cd                              : cd a /branch path
        vi                              : vi a /barnch file

        svn cleanup __should__ in TOP dir
        svn relocate svn://sub.someaddress.com.tr/project
        svn help _____more.info_____
    "
}

function fn_main()
{
    filelist="${@:2}"
    case $1 in
   vi)
        dir=${PWD##*/}
        if ! grep ${dir} <<< "$filelist"; then
            echo "not a SVN path"; exit
        fi

        file=${filelist##*${dir}}

        if [ ! -e "${PWD}${file}" ]; then
            echo "${PWD}${file} not exist"; exit
        fi
        vi -R "${PWD}${file}"       # \cd to CD PATH
        ;;
    a)  [ -f "${2}" ] && { svn add --force ${filelist} | cat -n ;}
        svn stat | awk '{print $2}' | xargs -I{} svn add --force {}  | cat -n                       ;;
    A)  /usr/bin/find ! -name '.' -a -name '*' | xargs -I{} svn add --force {}  | cat -n            ;;
    c)  svn ci $filelist                            && svn up                                       ;;
   cc)  fl=`Svn Sc | awk '{print $NF}'` ;svn ci $fl && svn up                                       ;;
   zc)  fl=`Svn Sc | awk '{print $NF}'` ;tar -zcvf ../z.tgz $fl                                     ;;
    l)  [ -f "${2}" ] && filelist="5 ${@:2}"; svn log -v -l${filelist:-5}                           ;;
   ll)  [ -f "${2}" ] && filelist="5 ${@:2}"; svn log -v -l${filelist:-5} > .log; vi -R .log        ;;
    i)  svn info ${2:-.} | grep 'URL:' | sed -e 's/URL: /&\n/g'                                     ;;
   in)  svn info ${2:-.} | awk '/URL:/{print $2}' | \
                           sed -e 's/^/svn relocate /g' -e 's/192.168.2.250/jabsco-svn/'            ;;
    U)  for U in ${filelist:-zhangj}; do regex="-e '/${U}/,/--$/p' ${regex}"; done
        eval "sed -n ${regex} < /dev/stdin"
        ;;
  tar)  echo -e "\ntar...\n"
        tar -zcvf a.tgz ${filelist}
        ;;
    cf|conflict)
        echo "
        1 svn update {df|edit|resolved}
          type:
              base                      .r5533
              working                   >>>>>>>>>
              mine-conflict
              theirs-conflict
              mine-full                 .mine
              theirs-full               .r5537
        2 svn resolve --accept=<type>   danale_scan_mp4.c
          svn resolve --accept=working  file_old.c
        3 vim 
        4 svn resolved PATHl            # 被[resolve --accept]替代
        5 svn revert                    # 万不得以
        "
        ;;
    D)
        case $2 in
       .o)  echo "del *.o"; find -name '*.o' | xargs rm -f ;;
    '?'|*)  {
            echo "Deleting: ${filelist}"
            [ -f "${filelist}" ] && rm -f ${filelist} && return
            exclude="INSTALL|cscope|.make\>"
            svn status | grep -v -E "${exclude}" | grep "^${filelist:-?}" | tee /dev/stderr |\
                awk '{print $2}' | xargs -I{} rm -rf {}
            } 2>&1 | sed 's/^/\t/g'
            ;;
        esac
        ;;
    d)  svn diff $filelist ;;
    do) find ${2} -type f -name '*.o' | xargs rm -f ;;
    dc) svn diff -c${filelist} ;;
    dl) svn diff `Svn sc | awk '/^M/{print $2}'`    ;;
    dh) HORI=-o \
        svn diff $filelist ;;
    el) vim -p `Svn sc | awk '/^M/{print $2}'`      ;;
    f)  ln -sf ~/.flowchar/main.i .flowchar.i       ;;
    dp) svn diff -r 'PREV' $filelist                ;;
    r)
        [ -z "$filelist" ] && echo "Error: file... must be dedicated" && exit
        svn --depth=infinity revert $filelist
        ;;
 st|s)  svn status $filelist                                            ;;
 sc|Sc) svn status | grep -i --color -E '(\.c$|\.h$|\.cpp$)'            ;;
    S)  for i in ${filelist}; do svn stat | grep -i --color "$i"; done  ;;
    ps) svn ps svn:executable on $filelist; ls -l --color $filelist     ;;
    q)  svn -q status                                                   ;;
    u)  svn up $filelist                                                ;;
-?|h|?) fn_usage                                                        ;;
    *)  svn status | sed 's/^/\t/g'                                     ;;
    esac
}

fn_main $@
