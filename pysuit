#! /usr/bin/python3

import sys
import datetime as dt

def src_install_python35(argv):
    print("""
    cd /opt/src/test/
    wget https://www.python.org/ftp/python/3.5.0/Python-3.5.0.tgz
    apt-get install libssl-dev || yum install libssl-dev
    tar xzvf Python-3.5.0.tgz && cd Python-3.5.0 && ./configure --enable-optimizations && make && make install
    """)

def apt_install_python3(argv):
    print("""
    用源码安装是最快件的。
    [在 Ubuntu 14.04.3 上安装 Python 3.5](https://plumz.me/archives/2333/)
    apt-get install python3
    """)

def sit_getsitepackages(argv):
    import site
    print('\n',site.getsitepackages(),'\n')

def pip_usage(argv):
    print("""
    # pip 配置文件
    %APPDATA%\pip\pip.ini

    # self-upgrade
    pip3 install --upgrade pip

    # 安装 & 升级
    pip3 install pandas
    pip3 install --upgrade pandas

    # 安装指定版本
    pip3 install -Iv setuptools==31.0.0

    # 升级到指定版本
    pip3 install --upgrade bokeh==0.12.7

    # 卸载
    pip3 uninstall pandas

    # 查看已安装
    pip3 list --format=columns

    # 常用package
    pip install numpy
    pip install matplotlib
    pip install pymysql
    pip install lxml
    pip install requests
    pip install bs4
    pip install pandas
    pip install tushare
    pip install bokeh
    """)

def pip_freeze(argv):
    print("""
    导出安装模块的文档
    pip freeze > list

    在另一个环境下，安装该文档里的模块
    pip install -r list
    """)

def os_shutil(argv):
    print("""
    os.mkdir()
    os.makedirs(dir, 0o755, exist_ok=True)  # 
    os.path.islink(fname)                   # link exist
    os.path.isfile(fname)                   # file exist
    os.remove()                             # will remove a file.
    os.rmdir()                              # will remove an empty directory.
    shutil.rmtree()                         # will delete a directory and all its contents.
    """)

def dt_daysago(ymd, N):
    return (dt.datetime.strptime(ymd,'%Y-%m-%d') - dt.timedelta(days=N)).date()

def dt_daysago_str(ymd, N):
    return (dt.datetime.strptime(ymd,'%Y-%m-%d') - dt.timedelta(days=N)).strftime('%Y-%m-%d')

def dt_seconds(ymd):
    pass

def selenium_chrome():
    print("""
    1. 下载安装 Chrome，并查看版本
    2. Google `Selenium Chrome chromedriver compatible`
    3. https://stackoverflow.com/questions/41133391/which-chromedriver-version-is-compatible-with-which-chrome-browser-version
    4. 下载对应版本
    """)
usage="""\
Usage:
  pysuit id [argv1, argv2, ...]
"""

def main(argv):
    cmdlist=(
    src_install_python35, "src_install_python35         # 源码安装 python3.5"               ,
    apt_install_python3 , "apt_install_python3          # apt-get安装 python3.5"            ,
    sit_getsitepackages , "sit_getsitepackages          # 包安装路径，类似 C /usr/include"  ,
    pip_usage           , "pip_usage                    # "                                 ,
    pip_freeze          , "pip_freeze                   # 使用freeze命令迁移模块"           ,
    os_shutil           , "os_shutil                    # os.file.binutils 常用系统命令"    ,
    dt_daysago          , "dt_daysago(ymd, N)           # __builtin__"                      ,
    dt_seconds          , "dt_seconds(ymd)              # __builtin__"                      ,
    selenium_chrome     , "selenium_chrome              # selenium and chromedriver"        ,
    )
    try:
        if (len(argv) > 1):
            i = int(argv[1])
    except Exception as ex:
        i = 300
        #print("got non-digital %s" % ex)

    if (len(argv) == 1 or i >= len(cmdlist)/2):
        print(usage)
        for i in range(0, len(cmdlist), 2):
            print("  %-4d%s" % (i/2, cmdlist[i+1]))
        print()
        return

    if cmdlist[i*2+1].find('__builtin__') >= 0:
        print("\n  __builtin__ function, [vim pysuit] to view realization\n")
        return

    cmdlist[i*2](argv[2:])

if __name__ == "__main__":
    main(sys.argv)
