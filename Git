#! /bin/bash

function fn_main()
{
    filelist=${@:2}

    case $1 in
    '?'|h*)
        echo "
        ----------- Usage --------------
        A   commit  [all changed] and conflict to [commit -a]
        a   commit  like [Git A] without push
        c   commit  [ci . to local]
        d   diff    [file] 
        dp  dprev   file 'PREV'
        ds  .swp    [del .swp] 
        i   info    URL of repository
        l   log     log -p file
        ls          ls-files
        p   pull    [origin master]
        P   push    [origin master]
        r   revert  [file or directory]
        s   status
        "
        ;;

  a|A*|All)
        # git add -A 递归添加当前目录的变更，要提交所有变更，请切换到项目顶层目录
        git status | grep -v delete | grep --color "\.swp$" && 
        { echo "error: .swp files exist!!!";exit ;}

        # skip .soptter.chao
        # git status | grep -q 'modified.*.soptter.chao' && 
        # { git status | awk '/modified.*.soptter.chao/{print $3}' | xargs Git r ;}

        read -p "Please input comment: "

        # git comment -a  =  [add -A + comment]
        git add -A
        git commit -m "$REPLY"

        [ "${1}" != 'a' ] && git push origin master
        ;;

    c*)
        # add commit push 指定文件到本地
        local i=
        for i in ${filelist}; do
            [ ! -f "$i" ] && { echo "Error: $i not exist"; exit ;}
        done

        read -p "Please input comment: "

        git add ${filelist:=.}
        git commit -m "$REPLY" ${filelist}
        ;;

    dl) list=`git status | awk '/modified:/{print $3}'`
        [ -z "${list}" ] && echo "no modified" && return
        git diff ${list}
        ;;
    d)  git difftool ${filelist}                    ;;
    ls) git ls-files ${filelist}                    ;;
 log|l) git log -p ${filelist}                      ;;
    dp) git diff HEAD^ HEAD ${filelist}             ;;
    ds) find -name '*.sw[op]' -exec rm -f {} \;     ;;

    p*|pull)
        # 解决自动merge
        # git config branch.master.remote origin
        # git config branch.master.merge refs/heads/master
        git pull origin master
        ;;

    P*|Push)
        # Your branch is ahead of 'origin/master' by 4 commits.
        git push origin master
        ;;

    r|revert)
        [ -z "$filelist" ] && echo "Usage: Git r file..." && exit
        git checkout -- ${filelist%%/}
        ;;
    etc)
        ~/bin/bell
        cp /etc/crontab \
           /etc/mysql/my.cnf    ~/bin/.etc/
        ;;
    i|info)
        echo git remote -v
        git remote -v
        git config --get remote.origin.url | sed -e 's#:#/#' -e 's#git@#https://#'    
        ;;
    s*|*)
        git status
        ;;
    esac
}

fn_main $@
