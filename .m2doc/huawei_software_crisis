# 软件危机

# 产生背景(百度百科)

软件危机（software crisis），20 世纪60年代以前，计算机刚刚投入实际使用，软件设计往往只是为了一个特定的应用而在指定的计算机上设计和编制，采用密切依赖于计算机的机器代码或汇编语言，软件的规模比较小，文档资料通常也不存在，很少使用系统化的开发方法，设计软件往往等同于编制程序，基本上是个人设计、个人使用、个人操作、自给自足的私人化的软件生产方式。

60年代中期，大容量、高速度计算机的出现，使计算机的应用范围迅速扩大，软件开发急剧增长。高级语言开始出现；操作系统的发展引起了计算机应用方式的变化；大量数据处理导致第一代数据库管理系统的诞生。**软件系统的规模越来越大，复杂程度越来越高**，软件可靠性问题也越来越突出。原来的个人设计、个人使用的方式不再能满足要求，迫切需要改变软件生产方式，提高软件生产率，软件危机开始爆发 。

1968年，北大西洋公约组织（NATO）在联邦德国的国际学术会议创造软件危机（Software crisis）一词。而1960年代中期开始爆发众所周知的软件危机，为了解决问题，在1968、1969年连续召开两次著名的NATO会议，并同时提出**软件工程**的概念。

# 主因分析

| lvl     | name            |         |
| :------ | :------         | :------ |
|         |                 |         |
| 3       | APP             |         |
| 2       | OS              |         |
| 1       | HAL(硬件抽象层) |         |
| 0       | HARDWARE        |         |

软件的本质，是对真实世界的抽象。
软件即指令，就像是一个帝国的**官僚制度/户籍制度**一般。
产品的本质，是一种全身心为客户着想的**服务**，只有对客户全身心投入，才能获得回报。

最大的问题，是规模及复杂度提升后的**断层**。

# 成功的案例

500米口径球面射电望远镜（Five-hundred-meter Aperture Spherical radio Telescope），简称FAST

# 解决方案(软件工程)

敏捷开发
人月神话

