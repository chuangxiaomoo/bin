# fish之所以是fish

*0.执行力*

上士闻道，勤而行之；中士闻道，若存若亡；下士闻道，大笑之，不笑不足以为道。
真正能改变自己的，不是学了多少知识，而是付出了多少行动。

*1.远见*

未曾见过

*2.自制力*

减肥为什么这么难？

*3.unobservant*

Too often people are unobservant because they are too absorbed in themselves(their own thoughts and feelings.)
过度关注自己，而忽略听众。或者是自负。
zhiming 验兵(成功|失败) (请假|离职)验兵，

| 决策树      | 公司收益 | 个人收益 |
| :------     | :------  | :------  |
| 请假 + 成功 | 失员工   | OK转身   |
| 请假 + 失败 | OK员工   | OK工作   |
| 离职 + 成功 | 失员工   | OK转身   |
| 离职 + 失败 | 失员工   | 失工作   |

公司批假，保持收益的概率 50%，不批假则 0%
个人请假，100%的无缝转换。

即使如此计算后，zhiming 同样会选择离职，后面的结果也是如此。

*4.忽视游戏规则*

2017-06-22 受耻日
4月绩效不足3k，总收入达到一个低点。这是一记棒呵，让我重新审视游戏规则。
4月有一周没有加班，但是有ircut切换算法成果输出。*不让雷锋吃亏*是有条件的。
3月刚到公司也有一次绩效非常低，之后是老板亲自出面才将绩效提上来。
当然要按时下班，凡事不可做得太满，要留有被老大感知空间。
[Uboot](fatls mmc 0)当然是要奏请zhao出马，而不是私下里沟通。

*5.以自我为中心(鸵鸟心理)*

当问题得不到解决之时，以加班的方式来麻痹自己，以期心安理得。
站在boss的角度思考解决方案。
高效的人生 = 决策 + 干
低效的人生 = 犹豫 + 徘徊

# 我的烦恼

Zhangjian-usage-manual
新进员工的烦恼

陈浩：懂需求之人
如何解决问题？
netcat的udhcpc.hook回调法
  GET 需要回调
  PUT 不需要回调
学习算法[algirthm](sort+search)

# 提点心法 -- 诘问法 vs 说教

how to ask question?
how to do task?
how to test?

tianj说：整天叽叽歪歪，像苍蝇一样。
xiaom说：到底是苍蝇脏，还是人心里脏？
zhaoz默：会心一笑。

# 转身(职场如战场)？

我最想让你们学到什么？

0 角色扮演, kill the boy, let the man born.
1 学校与公司的区别？<是可以作弊的>
2 企业与军队的比较？
3 犯错的成本

# 梦想 and share

一条建议：知道自己要做什么？你如何证明你已经完成？
复利成长：一次只做一件事，并把之做好。<把经历总结成套路>
终极目标：侦察兵、多面手、[全栈工程师](开发、测试、需求、设计、项目管理、grep.产品经理.更多惊喜)

# 看代码的心法？

生成一棵决策树，不看异常

# 写代码的心法

1 忽略异常，先固化，再优化。
2 使用芒格的心法`INVERT`，使用goto语句先处理异常。而后水到渠成。

# 做测试的心法

1 先冒烟测试：常用功能及正常操作流程
2 再回归测试：重点测试各种场景及异常情况

# 做Task的心法 -- 可工作的作品

两个工程假设：

1. 资源无限
2. 时间无限

两个假设在现实中不可能满足，因此，不能单纯地使用“深度优先”或“广度优先”，而应该是一种**权衡**，做最重要的事并产出。更好的方法是：

0. 选出最重要的事
1. 先固化，再优化
2. 迭代新功能，再进入第一步

案例: 小米一块钢板的旅行 vs. 公司的生产模式

[全新SD卡使用过程](plug-in mount format read write unmount plug-out)

# 成为高手(dynamic debug)

一条命令足矣: ccli toggle -act set

# 品格 and 修养

印象里有那么一次，闲暇谈笑间，hus and chenk 怼了 cheby，当时我心底里便感到一丝的寒意。没有想到，2018-07-16 Monday，zhangh and luosd 一起怼了我，这心都凉了。

事情的原委是这样的：

因为 cuiwx 修改 MD 算法，致太多的打印，加上原有 ENC 的 3s 定时打印，让从鱼眼过来的我很不习惯。于是我增加了一套日志开关：

> #define _io_enc     (g_toggle.logen & _LOG_ENC)
> #define _io_stream  (g_toggle.logen & _LOG_STREAM)

因为 logen 默认关闭所有日志，导致 ENC 原有的定时打印被禁用，同时，我忘记了上传 lzbox，从而遭到他们(*zhangh & luosd*)的不满。

1 从 grain, jzzz to mstar，这一套东西都用这么用的，怎么就影响效率了？
2 luosd 指着终端说，你看这打印多吗？

争吵的过程中，tianj 在一旁偷笑。

在他们的要求下，我把开关全部打开(.logen = 0xffffffff)，进而，导致 search 的广播消息满屏飞，zhangh 更是扬言要回退我的代码，出于他们是 mstar 主场的原因，我重新修改代码`.logen = _LOG_ENC`，最后平息了这场争论。

最后，我提供了 g_toggle_load_logen() 在启动后初始化 g_toggle.logen，问题彻底解决。

1. zhangh 存在即道理，但只有变化才是永恒不变的，如果都只知守旧，何来改进，必遭淘汰。
2. luosd  要看启动时的打印：完全可以手动重新编译来打开，只是你站在自己方便的立场，屁股决定了脑袋。
3. zhangj 不是自己的主场，完全不顾忌现实的需求。
4. 难道就不能想一个两全其美的方法，当然有: load_tmp_logen()

当行业趋于稳定，跳槽不再成为嘉兴的主要筹码，大家就要开始学会合作，只有这样整个系统才能生存下来，不能够出现断层。在这次危机的背后，我只看到了自私和狭隘，说好了的**谦虚、包容、互助和持续改进**消失无踪。

程序员的**荣耀与尊严**都去哪儿了？

没有**持续改进**的文化，在当下剧变的环境中，抱死固守，结局只有一个：灰飞烟灭。

充分地暴露了: 团队在面临问题时，毫无**规则**可言，一种普遍意义上的方法论缺失。

这种危机同样会爆发于成长中的家庭成员之间，晚辈与长辈之间。

因为个人受恩于几位恩师，才有了今天的我。再反观这些过往的同事，**聪明的、只顾自己一时任务的人(tangpc,dongzh,wangaz,guoxg)**，都已经在外面逍遥地拿着高薪了。团队允许这样的人存在，但这不应该成为文化的主旋律。

# 解决方案

对于个人而言，更好的解决方案是：
1 公司层面：需要**更大格局**的代码权威，建立规则并形成文化。
2 个人而言：**与自己仰慕的人一起工作**，而不是被公司困在永恒的当下。

[海底捞正在变成富士康](http://sh.qihoo.com/pc/9528e437c0d6b3466)

[海底捞“传销式”师徒制，也许才是它最大的商业机密！](http://wemedia.ifeng.com/65849078/wemedia.shtml)

上市之后的海底捞，大概率是资金重点关注的对象，“`双手改变命运，师徒制(抱团小组)，与人为善，自下而上裂变增长，根据具备店长储备等因素合理估算开店能力`”，或许这就是海底捞的秘密。

一家公司不单纯追求商业扩张，能在金钱面前保持冷静，根据合格店长的数量来确定新店的扩张速度。当然，这也可能是过去**小肥羊**的例子摆在眼前，让后来人知道品质管理才是品牌的基石。

虽然不能加盟，但现在可以通过资本市场投票了，海底捞的 20 倍市盈率意味着 20 年回本，每个人都有自己的估值评价，你愿意为这锅海底捞付多少钱？

*本质上来说:*
多人格共处，把身体打造成一个具备`良性反馈机制`的系统，**团队建设**也是如此。
个体的觉醒: 把自己置于一个`有效反馈`的环境中。
团体的觉醒: 意识到我们是一个命运共同体，并把团队置于一个`有效反馈`、自组织、自进化的环境中。

