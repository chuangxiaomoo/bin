# 2018-11-08 项目团队成员间抱怨争吵太多

计划：项目时间压力太大太赶工、质量太差，项目成就感/价值感/荣誉感/自豪感
      没计划没规划/变更太多、谁也能指手画脚干涉项目计划/项目范围、计划执行不严

协作：项目团队成员间抱怨争吵太多、岗位之间有歧视轻视
      协作态度/速度/质量太差、协作推动太难

对策：明确对项目经理的这些绩效维度进行考核
      没奖励、奖罚不鲜明、庸人也能偷偷糊弄存活。小圈子评奖不公平不透明、瞎奖罚
      0 遵循敏捷的原则
        重承诺
      1 推行对结果负责，Point2Point垂直整合能力，才能真正的做到: 每一个发出包都能够完整的自测。
        即: **高内聚低耦合**
        才能减少外部发包的数量，不胡乱消耗测试资源
      2 明确验收标准: 按时、按质、按量

2018-11-10 经过与测试员、产品经理的沟通，测试部发布正式版的产出，一周顶多只有两个正式包，
所以，达成以下共识:
1 所有人员的工作分为两个阶段: `研发阶段:RnD`(1周) + `交付阶段Dlv`(1周)
2 必须要经过研发阶段，才可进入交付阶段，产品经理从源头对研发阶段及交付阶段的项目数量进行把控，
  RnD 2~4个，Dlv顶多两个，需要提前做好计划。
3 同步好所有人员的节奏，这可能高效开发。

# system

金一南 军事观察 美军总在move之中 以流水不腐。
中军职员在一位置上可以30年不动 系统性腐败 然有产者方有恒心。

[美军关于打伞金一南：美军为什么禁止当面赞颂领导、禁止打伞？](http://www.lanlve.net/lishi/217306/)

金一南将军的这篇文章，曾得到任正非的极力吹捧和推荐。任正非签发“总裁办电邮”，要求内部传阅，并亲自写了一段按语。

按语大意是，“**军人的责任是胜利，牺牲只是一种精神**。华为的员工不只是拥有奋斗精神，更要把这种奉献，落实到脚踏实地的学习与技能提升上，在实际工作中体现出效率与效益来”。“这篇文章所提到的美军纪律及精神对华为员工是有教育意义的”

# 反馈+响应

系统的第一原则是{反馈+响应}，因此，才需要通过大拿extend_data的远程调试，**越关注反馈，影响力越大**

1 win7 bat Escape char ^^201 是通过2008年数据测试出来的。

2 产品的质量决定首次推广难度，但出货量**反射决定**产品的质量。
  这个世界上有捡钱的事吗？没有。要挣容易钱，你怎么这么**天真**呢？
  小医院能治大病吗？大医院治大病，是大量样本的牺牲换来的。

3 决定摇头机卡片机当前质量，看其**出货量**就可以了。不知道出货量，你对产品状态就没有一点概念。

4 钱给得少，活多，还挨屌，你哪来的那么自信呢？

# Dalio.原则.量化数据库

周一例会推行以来，最大的诟病：猪八戒踩西瓜皮，滑到哪里算哪里。
对于产品经理来说，技术经理给你一个**预期完成时间**，其中包含两个**假设**：
1 不被打断
2 不被测试部严格测试

另外，只有对**历史特性与当前特性的差异**有足够的了解，才能真正能把握时间。

# team

**论证此问题不是问题**之后，才是如何解决问题：

[problem_solving]()
[problem_Formula]()

# **以包为本，本固邦宁** 小月非非.2017-11-28

鉴于近期消费类开发小组工作进行了移交，现重新对工作进行一次梳理。开发工作暂重新分配如下：

1. 张健        全景、卡片机、图传及协调工作
2. 王爱中      热点枪、协议相关支援
3. 邹毅        摇头机、图像调试

**发包延迟原因**

| 原因         | 解决方案                                             |
| :------      | :------------------                                  |
| 临时需求变动 | asset后锁定需求，需求变动后要主动更新列表并通知组员  |
| 客户体验     | 善意拖延，抓主观体验如ST的配置接口，花钱买**被尊重** |
| 自测不到位   | 注明用APP验证，培养开发人员对最终产品负责的习惯      |
|              |                                                      |
|              |                                                      |

**发包流程**
1
2
3

# Problem FAQ 问题

**0.0 标准：不要让客户思考**
  一切要客户思考，动手的设计都是不合格的设计。
  ssid为空时，不只是提示，而是直接重新重启及 airlink_match。

**1.0 目标不明确无轻重缓急**
  焦点模糊，无功能验收标准
  无时间节点观念，无排期概念(试产要先在工厂排期)
  计划、开发、测试混乱，无章法
  [解决方案](每周一进行任务及测试任务的优先级排序)

**1.1 目标任务无时效性**
  一个功能从发现到解决，花了两个星期，中间还引入新的问题。
  测试反馈不能*及时、全面、权威*，流程与实际运行脱节，减少返工率，安全是最大的节约。
  案例：摇头机WiFi对码后passwd不正确无提示音，过程引入“仅eth0时danale服务器连接失败”
  [解决方案1](下发任务，主动问taker要完成时间；培养taker主动索要deadline的习惯)
  [解决方案2](统合综效：关联开发与测试任务，提供Bug的发现时间、预估处理时间、解决时间、过程事件)

**2.0 问题本质无概念**
  问题是目标与现状的*差距*，自动横向、纵向、时间上的立体比较。
  案例：卡片机CPU使用过高达60%，鱼眼40%。经过一个周后，测试反馈zhaoz发包已经验证完毕。
  [解决方案](回到起点，改变即是问题的所在)

  问题来源：
  1 新Task: 来自客户期望需求
  2 Bug: 来自客户对现状的不满意

**3.0 开发人员没有端到端的交付意识**
  a.过于乐观，
    没有等待测试结果，就以为可以一个测试包搞定，交付了。
    现实是：测试方法不一样，视角不一样，过程会来来回回。
    265模组开发小组承诺客户的10工作日，实际搞了20个工作日都没有搞定。
    WiFi热点枪延时达到2秒，不仅仅是点亮设备。
    计划外应对不足，客户图像。
  b.无效推进，
    **问题闭环**无意识，论而不结，人形识别，还有诸多问题，领导以为已经可以商用了。
    权力已经下放，我更希望你给我选择题，而不是主观题。带着解决方案来讨论问题。

**3.1 问题复杂度及全局意识不足**
  3 个点之间有 3 条线；4 个点之间有 6 条线；5 个点之间有 10 条线；
  因为问题不能及时闭环，复杂度会越来越高。

**4.0 不重视积累即：知识管理能力弱**
  软件能力在于积累，市场扩张产生的乘数效应。
  软件本身的增长没有粘性，不像外贸的客户积累效应。

**5.0 无成本意识即：升级包反复出现纰漏**
  沟通成本提高致效率低下，直接影响到工厂批量试产进度。现将研发流程再做一次梳理：

  1 每周一，产品经理提供两周内的需求，包括新特性和生产计划，**必须明确合理的时间节点**。
  2 研发人员根据需求，提供开发**计划节点**及冒烟测试用例，先用例，再测试。
  3 测试人员，根据研发人员冒烟测试用例，与研发人员确定正式测试用例，测试经理、产品经理、开发经理要对测试用例适时提出意见，提前发现缺陷，提升效率。
  4 发包前，研发人员**必需自测**
  5 正式测试包，
    新增功能测试包，集中测试新增功能，同一功能，**发包次数超过3次**，测试人员要及时向开发经理反馈投诉。
    生产测试包，因为要对相关产品全系统进行测试，一般需要在**时间节点前3天提供**，对关键功能优先测试，并及时反馈开发人员。

  相关流程，欢迎各位再提供宝贵意见，持续改进
  以上工作，张健会**每周一以EXCEL文档**的形式提供出来，测试人员每周五下班前提供**一周的问题跟踪报告**。

# Solving FAQ 方法论

## Leader manual

**0.0 在双重标准间安全游走**

1 ST 开发已经两天了还没有交付，开发效率有点低。
2 ccli 已经开放了。
3 telnet root passwd 一定不能开放给别人，没有一点安全意识。

**1.0 垂直分发任务**，结果为导向，抓大放小，方有条理

**2.0 防反向塑造.驯化.管理2013**
人能改变的只有自己，保持不被反向塑造，已属不易。
越是弱小者，越是有情绪，驯化自已（对待他人的态度，就是对待自已的态度）
[case记录](/root/bin/.m1doc/case_72_那些失败的TASK)

**3.0 不过大脑的求助**
找基线，找同向同类对比。
案例：2017-12-13 wangaz 8188FTV 打印太多。答：可以找 8188EUS 的代码进行对比。

## Staff manual 

**2.1 方法论.先固化再优化**
  先固化再优化。*完美主义必定无法开始*
  案例：跨日录像计划内部先用static数组实现
  [解决方案1](用Bugfree缺陷跟踪系统，可以用每日EXCEL进行替代。内容比形式更重要。)
  [解决方案2](MVP: 最小价值产品或最小可视化产品)

**2.2 方法论.单一变量原则**
  在时间线上，在空间上找差异，确定*基线*版本
  案例：卡片机CPU使用率过高，只因底包使用的是鱼眼底包，且默认夜视模式。从发现到现在用了1个星期。
  [解决方案1](找最根本的差异，使用标准的流程装机，不只是裸板、无镜头、无id)
  [解决方案2](让开发人中员评估时间，在结束时让其感知与预期的差异，而不是zouy的习惯性找理由)

**2.3 方法论.差别化处理**
  To improve is to change.
  抽象与分解，环境与应用。
  案例：移动侦测误报。根据环境选择应用。理解环境，光线的变动用手机闪光灯来模拟。
  [解决方案1](思考差异，人的直立行走，进行量化，而得MD的解决方案)
  [解决方案2](思考方向+力量，day or night? 光线变化有方向的，反向的即过滤掉)


# 招募.interview

**2017-05-08 回头看当这篇 2013 team 总结**，在没有人士任免权的位置上谈管理，是多么的滑稽。

**2013-12-26 整合效率之特种兵**

《纪效新书》特别重视选兵，开篇第一句话就是“兵之贵选。选兵“其法惟在精”（《柬
伍篇》）”。对于选兵的具体标准，认为“丰伟”、“武艺”、“力大”、“伶俐”四条既不可
废，亦不可专恃，“惟素负有胆之气，使其再加力大，丰伟伶俐，而复习以武艺，此为
锦上添花。”（《束伍篇》）然而这样的人不易选到，相比之下，最主要的条件是“
**必精神力貌兼收**”，因为武艺差可以教习。对于选来的士卒，要根据各自不同的特点发给
他们兵器，“皆当因其材力而授习不同”，“如藤牌宜于少壮便健，狼筅长牌宜于健大雄伟，
长枪短兵宜于精敏有杀气之人。”（《束伍篇》）
                                                        ---- Master Du

管理的本质在于资源的高效整合。精锐之师，将大家的本能拉在同一线上，教习很
重要。单兵作战水平提高以提高整合效率。

进公司1年多，基本测试平台还没有，而yins连最基本的测试环境搭建也还没有，
每次必以人辅之。

没达到水平不让干活，达到水平加工资。

**2017-12-08 面试只要两三个问题就够了?**
1 行走江湖，你有什么作品&手艺？
2 人生至今，你遇到的最大困难是什么？又是如何克服的？
3 有没有生过大病，或是慢性疾病？是如何克服的？

# 老板在场的沟通

**为下属赋能**
在客户面前称总，已经不是当年一起路边吃汤饭的小锣锣了。

**为老板赋能**
不要与在下属面前对领导的决策有冲突，有意见可以在人后讨论。
少说话，多点头。让下属看到中层的执行力。


矛盾在`2014-04-01`：工作激情消退。8.2 of RDM
过了`2014-04-25`的矛盾期，迎来了团队的新春天。

1. 网页瓶颈（快速开发）

2. 网络编程（stream，3次握手）

3. 副手（统筹工作：潜移默化的管理工作）

突破对细节的执着。（发现问题，先记下来，让subordinate执行）

4. 系统设计

所有的系统都是事件处理系统。

# BOSS.Wu的提问.2013-12-25

WU，自2007年执掌研发至今，给公司留下了什么？
* 人才
* 技术沉甸
* 市场


为什么只做趋势的跟进，而非趋势的引领者？

* 智能若是已成大势，芯片厂商必将其集成为SOC。
* 若未有成大势，则人力财力上自称量，不及也。发展规划（核心10人团队，总100人队）

技术人员多些`R&D`以外的思考？考虑下自已的价值（如此的生活条件及高度）？

* Golf
* 成本意识（以利润产出为导向）
* 信息层次

大民的反思？

* 老板在大民来之前说了，只是跟随
* 大民上来便谈引领，值得我等好生思考，谈话的背景到底是如何？
* 安防芯片(DM)与手机芯片(OMap)的市场容量根本就不在一个层次。
* 1年规划，3年规划。(不谋万世者，不足谋一时；不谋全局者，不足谋一域。)

渠道与集成商之争？
*
*

# 证明忠诚的唯一解

罗胖陪伴的第 1826 天

1 话说当年，有国民党政府的人去找当时武汉大学校长王星拱，说你们别教俄语了行不行？因为教俄语，在当时有点通共的意思。王星拱回答说，教俄语是赤化，那教日语岂不成了汉奸？

2 在宋代，甚至有这么个例子，有个出使辽国的大臣，因为擅自学辽国话，直接被免官。你会说这不是不讲理吗？为了办好外交，学点外语怎么了？但是宋代的皇帝不这么想啊，你有里通外国的能力和有里通外国的意愿，可能是一回事啊。

3 你看，很多事一旦涉及到忠诚的问题，**通常只有一个办法可以证明你的忠诚，就是你丧失了某种能力**。太监就是这样啊。

4 再比如，一个传统公司里面最容易得到信任的人，往往就是没有能力在外面找到工作的人。

所以，轻易不要结成某种忠诚关系，因为，失去某种能力的代价我们往往负担不起。社会即丛林，只有处理好一个个复杂关系，才有资格安全生活其中。

# ________________________________________________________________________

# 01_员工对什么不满意

员工对什么不满意
[](http://blog.csdn.net/david_lv/article/details/26572719)


一、薪资福利环境
薪资/股权/福利不咋样
办公环境不好、没啥团建活动团队太沉闷


解决方法：
定期的部门建设务虚会，进行建议收集、向上汇报、改进行动落地
把这方面的员工不满，加入到对部门经理的绩效考核


二、制度要求
HR制度要求、财务制度要求、项目制度要求、风控制度要求、质量保证制度要求、文档
保证制度要求、流程保证制度要求、部门制度要求太不合理


解决方法：
定期的部门建设务虚会，进行建议收集、向上汇报、改进行动落地
把这方面的员工不满，加入到对部门经理的绩效考核


三、文化导向有问题/导向执行有问题
官民有别不平等
经理有喜好任人
信息不透明
从上到下执行/不让讨论不让建议不让尝试


解决方法：
打平经理人和员工在财务制度/人事制度/行政制度/办公环境上的差异


经理对骨干岗位骨干人的职责任务调整，需要有上级同意；员工可以跨级申诉沟通。对
经理是否有喜好任人，进行HR调查访谈和绩效甚至开除。减少经理喜好任人


开定期的战略讨论会、回顾会、部门建议务虚会，加强透明性，加强民主性


四、学习成长
一入职就被野蛮进入项目
公司项目没学习成长没挑战
一直忙项目，也没有时间学习
也不鼓励支持参加外部培训
升到头了，遇到晋升天花板了

解决方法：
新人学习：新人训练营、试用期师傅制、Leader晚会问答制
项目学习：项目规划期的业务/产品/技术学习考核；交底确认机制；项目复盘总结会、
代码重构分析会、BUG分析会
外部培训：邀请外部讲师进行内部演讲、鼓励参加外部专业大会
晋升通道：导师制、决策委员会、转岗

# 02_tobe_狼or狐狸or老鼠

[成为小米](http://blog.csdn.net/david_lv/article/details/26355021)

一、经营

能不能成大事就看四样东西：

1、决定能不能做的大势；站在风口上、

2、决定你能不能做的积累（资本人脉、技术人脉、产品人脉、品牌人脉、销售渠道人脉
）；拿出了靠谱产品（服务）、

3、决定你能不能做好的天赋；老大足够牛逼

4、决定你能不能做成的际遇。关键节点融到了钱。

有这四样，不管你是喜欢老板或憎恨老板，不管你是喜欢公司还是憎恨公司，它都一样
能成功。你诅咒、看衰也没有用。


二、管理


豺狼型公司：无价值观和企业文化（有也是摆设或者挂羊头卖狗肉），纯业绩或KPI导向
，员工就是来挣钱的，老板找员工就是来干活兑现的，员工对企业无忠诚度，缺乏组织
和团队的配合度

麻雀型公司：倡导亲情文化，缺乏制度规则和激励淘汰，员工贪图安逸，慢慢有了依赖
性，长期下来呢也就和企业寄生为一体

仓鼠型公司：有制度规则但权责不清，资源分配失衡不科学，员工缺乏晋升通道，再加
上对企业和业务缺乏认同感甚至心生怨气，导致普遍没士气没动力，当和尚撞钟

狼性公司：

1、产品是普遍人日常使用品（包括程序员们自己也频繁使用），而且产品本身具备的娱
乐性很强

2、员工们对产品和方向可以普遍参与（兴趣；热情；认同；投入）

3、扁平化组织，尽力减少非直接生产人员。无权威管理，都是专业人直接做生产带领

4、成就感（得到市场用户和行业同行的认可和赞美）、满足感（升职加薪；股票期权；
业务增长；公司市值）

在此之上，员工个体拥有很高的自发驱动性、主观能动性、众智贡献度、自我要求的创
造力、包容协作的向心力、默契配合度

