# 什么是[收益函数][1]？

收益函数（也称为利润函数或者成本函数，因为利润的反面可以理解为成本）。是指每个参与人在参与博弈时，依据其所属类型和选择的行动可获得的收益。

可通俗地理解成“`投入产出比`”。

## 领导的烦恼

很多人读过[《技术领导之路》](https://book.douban.com/subject/4187478/)之后跟我说：“我觉得这本书写得很好，我也承认作者说的很有道理。但是，这和中国的现实不搭配。我努力去激励了(Motivation)、去组织了(Organization)、去创新(Innovation)了，却好像对牛弹琴，我领导的人似乎无动于衷。还不如安心当个包工头省心省力”。是的，我承认现实中确实有这样那样的困境，但我也认为这不是安心放弃成为优秀的技术领导的理由，因为有个重点书里没有写到，那就是想要打造好的技术团队，**必须对招进来的人有足够高的要求**。实际上，在《极客与团队》之类讲述技术团队管理的书籍里都强调了这一点：如果期望打造有战斗力的团队，必须保证大家形成一致的工作习惯和价值观；对这种工作习惯和价值观持续产生负面影响的“害群之马”，是应当坚决予以淘汰和替换的。

员工必须有在意的东西，否则你是无法激励的。想象一下，去激励一个佛系程序员的场景。

通常，招人的时候，只招吃过亏的。因为只有`吃过亏`，才会珍惜机会，才懂得合作与分享。比如激励新人:

1. 身教胜于言传
2. 授人以鱼不如授人以渔
3. 传播正能量

## 为什么要研究收益函数？

```txt
……不久，诸葛亮遣使求战，司马懿不谈军事，
问使者：“诸葛公起居何如，食可几米？”
使者说：“三四升。”
然后对问政事，使者说：“二十罚已上皆自省览。”
经过一番不经意的询问，司马懿对人说：“诸葛孔明其能久乎”
```

经典的案例有:

* 立木为信
* 烽火戏诸候
* 汉德公式(Burden＜PL)，潜在的工作到底由谁来做？降低内部成本为原则。
* 和尚分粥
* 莱茵河治理委员会

公司设置什么样的收益函数，员工就会最大化它，即自我驱动。最大化节约人力资源：

* 解放像孔明一样，事无巨细，没有休息时间的领导。(忙碌不等于效率)
* 解放像政委一样，喜欢对员工进行思想教育的领导。(你无法教授一个人**责任心**)
* 扁平化机构层次，引进`跨全流程`的系统工程师。

**不可能三角(中心化，效率(时间)，信息安全)**不可能同时达到。要追求最终的利益最大化，关键在如何设计可靠的收益函数。

## 如何执行收益函数？

> 信任机制 = 不可篡改的数据库 + 有限次重复博弈

规则，来自于教训。因此，挫折教育是最高效的教育方式。因为挫折将行为的`反馈传达率`提升到了极致。

1. 确定导向(价值观)
2. [量化输出](+/以包为本，本固邦宁 ~/gitee/team/Principles/README.md)
3. 积累不可篡改的`收益函数`数据库，以价值观的符合程度，定奖罚
4. 定期公示(有效传达)
5. 迭代优化(价值观)

我训过产品经理:

> chensk, 你回头看一下你的有效输出。表格全是我整理的，你输出了什么，又更新了什么？

## TDD任务优先级

1. 解决核心问题: 及早解决关键路径上的Bug，关注可工作的系统，而非等到deadline定版时才反馈有问题。
2. 加入时间因素，一级功能24h之内要解决
3. 变化动作分类，无非{add,del,update}
4. 资源消耗分类: 过早优化(产品经理，客户没有提需求，你急着改啥呢)

## 工程实践(PDCA.2019-09-05)

公司目标: Money
团队目标: 成为 Money 赚取的`手段`

团队现状: 当前无人知晓
现状量化: 认识自己，来自于与外界的碰撞，`反馈`是最本质的途径。每个产品收集一张问题表，标明当前的工作重心。(回收Testing放弃的`定价权`)

验收工具: 每周二或周四节奏出包，`连接`目标与现状
每日例会: 保证方向的正确性，进行`目标对齐`

经理职责: 经划分边界，理联通组装。一开一合之道也。
共享文档: 计划与执行分离(专门以区别与计划的管理者分离)

<a name="greed"/>**管理者无知的贪婪与恐惧**

> 研发发布的包，如4G，测试可能要过一周才开始测试。
> 经过测试的包，如FISHEYE-3，工厂并不一定使用。
> 一个周末不在，总监就有论调：你们的人员工作不饱满。

这些现象，即组织活动不协调的表现。

[1]: ~/bin/.m2doc/ss_018

