# howto_frame

1953年，在致斯威泽(J. E. Switzer)的信中，爱因斯坦谈到科学的起源：“西方科学的发展是以两个伟大的成就为基础的：希腊哲学家（在欧几里得几何学中）发明了**形式逻辑体系**，以及（在文艺复兴时期）发现通过系统的实验有可能找出**因果关系**。在我看来，人们不必对中国圣贤没能做出这些进步感到惊讶。若是这些发现在中国全都做出来了才是令人惊奇的。”

| NO. | 层次       | 研究方向                                               |
| :-- | :------    | :------                                                |
| 1   | 逻辑学     |                                                        |
| 2   | 哲学、数学 |                                                        |
| 3   | 自然科学   |                                                        |
| 4   | 社会科学   | 关于社会事物的本质及其规律的科学。四大约束及政策制定   |
| 5   | 技术       | 各种专业、各种套路(**离散小应用**)、杠铃法则、二八法则 |

万物皆系统，或大或小，而“框架”就是对**系统构成元素**以及元素间有机联系的简化体现(压缩)。

所谓认知心理，是指感官输入被转化、简化、加工、贮存、恢复和使用的所有过程。[](+/认知心理学：理解精神过程 book_the_psychology_of_finance)

# 几何原本

欧几里得《几何原本》，建立空间秩序最久远，最权威的逻辑推测语系。

公理是**脱离概念的纯操作方法**，`至善至恶`使用起来是一样的:

| No. | 公理                     | 逻辑       | 普通方法论                  | 几何 |
| :-- | :------                  | :------    | :------                     | :--- |
| 1   | 等于同量的量彼此相等     | True/False | 模仿是最有效/最快的方法     | 点   |
| 2   | 等量加等量，其和仍相等   | or         | 多则去之                    | 线   |
| 3   | 等量减等量，其差仍相等   | and        | 少则加之                    | 线   |
| 4   | 彼此能重合的物体是全等的 | True/False | 分解(向下降级)              | 面   |
| 5   | 整体大于部分(熵增定律)   | not        | 组合(向上升级).*递归｜嵌套* | 体   |

**倒推法**之所以是一种极为深刻的思维方法，本质上是因为它充分利用了题目中一个最不易被觉察到的信息——结论。[](+/结论往往蕴含着丰富的条件 book_dt_暗时间)

a 组合: 同级延展
b 嵌套: 引入新概念(data)及相应方法(method)。
c 分层: layering

# 架构与分层

网络协议分层，和计算机领域的其他分层，比如三层架构的分层，在本质上是一样的。甚至非计算机领域比如**政治统治架构的分层**。本质上都是一样的。

分层的本质是**通过分离关注点而让问题简单化**。当一个系统足够复杂时，通过聚合分为不同层次或不同模块，每层或模块都是内聚的，对外屏蔽复杂性。那么宏观上看去，管理和问题定位很容易到具体层次和模块。然后层层递进，很容易定位问题。


分层式结构究竟其优势何在？Martin Fowler在《Patterns of Enterprise Application Architecture》一书中给出了答案：

| NO. | Advantage                                  | e.g.                                                                 |
| :-- | :------                                    | :------                                                              |
| 1   | 开发人员可以只关注整个结构中的其中某一层； | 网民无需向下编程，程序员只与其上司而非CTO讨论公司发展方向            |
| 2   | 可以容易地用新的实现来替换原有层次的实现； | 更换芯片、OS、DB、底层库(live555,libev)                              |
| 3   | 可以降低层与层之间的依赖；                 | 终端用户(click->open,close,prev,next)，Coder: socket,send,recv,close |
| 4   | 有利于标准化；                             | 推广                                                                 |
| 5   | 利于各层逻辑的复用。                       | Ethernet, Wifi, 练拳不练功，到头一场空                               |

# 如何解题

[Howto.怎么逼自己成为一个上进的人.知识就是力量](人生一切难题，知识给你答案)

| NO. | 抽象方法           | 具体:成为一个上进的人  | 武学/羽毛球/商业                                                    |
| :-- | :------            | :------------          | :------                                                             |
| 0   | 找到`至善至恶`     | 游戏(名声最坏)         | 争夺our注意力: 贩毒犯法，精神毒品(游戏、影视)合法，反手是下手的反面 |
| 0   | 研究/正向/反向设计 | 模仿                   | 同样是`让人上瘾`，方法本质上一样，但是有点邪恶                      |
| 1   | 物理上接近         | 设计你的环境(孟母三迁) | 夕阳产业聪明人已跑、觉己傻瓜指数、优秀新朋友指数                    |
| 2   | 融合群体           | 引入外部监督(绑架)     | 做品牌的目的，是降低监督成本，而不敢干坏事，向约束我们的力量致敬    |
| 3   | 反馈/校正          | 寻求不确定反馈         | `不全是正反馈`:朋友圏发一张自拍照/创业者/杠铃策略(场内+场外)/中庸   |
| 4   | 情意绵绵/生生不息  | `技能挑战比`细分职业   | 所有高手: 当行当里的远大目标切分成阶梯，每一步都能看到的阶梯        |

[^两种职业(厨师+医生):即时、细碎、绵密]

# 如何构建(解构)一种框架

除了数学与逻辑这样的纯思维活动之外，其余的知识都可以是**对行为的指导**，而这些指导都有一个关系名词作为核心概念(本质)，根据这个核心，依照某个，或多个维度进行分类，就成了一个知识体系。

Why, What, How

# 如何读一本书

# 如何读一本历史书

# 如何看一场辩论赛

# 如何看一场电视剧

# 如何看一部电影

# 如何听演讲

