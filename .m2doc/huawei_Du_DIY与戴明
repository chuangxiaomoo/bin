# Du_DIY与戴明

## DIY精神

  我感觉，多了解一些知识，并且不仅限于了解，而是多一些DIY精神，亲自动手去做
  ，这对于技术能力的提高是很有帮助的。否则永远都是纸上谈兵，而这一点，正是中
  国大多数程序员不如西方程序员的地方。可以调查一下，现在xx这么多程序员，有几
  个能把gcc编译过程说清楚，有几个知道O1\O2\O3优化具体都做些什么工作？有几个
  明白一个可执行程序从存储固件加载到运行是怎么实现的呢？有几个能清晰地大声讲
  出进程和线程是怎么创建和被调度的？知识面的缺乏导致了我们有很多人在定位一些
  很简单的编码问题的时候“基本靠猜”。我想，这无论如何都不是个好现象。xx发展了
  这么多年，按说，我们的编码能力也应稳步提升，但事实上，目前除了编码风格被统
  一，编码水平仍然层次不齐。并且有一些人虽然读代码能力很强，但独立写代码就有
  点乱，这就是知识面不够，动手太少的原因。我推崇80：20原则，也就是说，xx鼓励
  80%的人掌握20%较深入的知识。知识永远不会嫌多，考虑到知识是可以相互印证的，
  我们了解的面越宽，我们实际能力就会呈级数增长。

## 一次把事情做对

  事实上，这句话源自现代质量管理之父--戴明博士的“企业管理十四要点”。完整的原
  话是：“停止靠检验来提高质量，一次就把事情做好。”戴明的主要著作有两部，是他
  一生的思考结晶。戴明于1982年出版了《质量、生产力和竞争地位》一书，这是他早
  期管理思想的精粹。“一次把事情做对”正是他针对当时美国企业界的“恶疾”提出来的
  。

  当时有很多美国企业管理者盲目地依赖检验制度来保证质量，甚至普遍流行这样一句
  话：“质量与生产是互不相容的，你不能两个都要”。通常当某个企业管理者发现产品
  的质量问题变得突出的时候，就会采用增加检验人员或者增加检验流程的方法来试图
  纠正。也有一些企业借助信息革命的东风，花一笔钱，购买最新的自动化检验工具来
  代替手工操做，但往往收获甚微。就在美国人被质量问题折磨的束手无措的时候，戴
  明敏锐地指出：“你们的力量用错了地方，质量是贯穿于整个生产过程的，而不是仅
  仅靠最后的检验来保证。”

  “要想解决问题，就必须抓住问题的主要矛盾。”就像试图优化PC性能，本来软件运行
  缓慢是因为内存容量太小，可是我们却不停地换更高主频的CPU，虽然能收到一点点
  效果，但肯定达不到我们预期的目标。

  应该这样理解：
  1. 质量是整个生产流程都必须关注的问题，而不仅仅是检验部门的责任，每个人都对
     质量负责；
  2. 要保证质量，就必须“找对地方”和“花最少的成本”。

  我们设置的expert本应该是“守门员”，但此时却不得不加入“救火队”。结合我在前面
  对“一次把事情做对”的分析，可以推断：

  性能问题是质量问题的一种，性能问题从代码诞生的那一刻开始就贯穿于整个软件生
  命周期，这说明性能问题是系统问题，必须在软件完整生命周期的各个环节重视。只
  有所有相关的人都这样去做，我们才可以认为我们一次把事情做对了，也就是说，一
  次把事情做对是一个系统的概念，而不是仅针对具体某个点。而我们通常以为的“一
  次把事情做对就是追求完美”，不过是一个理解上的偏差。就每个人的具体工作来说
  ，我个人还是倡议应在力所能及的范围内去追求完美的。因为《理想国》是西方阅读
  量仅次于《圣经》的哲学文章之一，对西方的政治、经济、科技发展战略影响颇深，
  其意义相当于孔孟之道在中国的地位。柏拉图在该文中阐述一个观点：理想国是完美
  的，我们应孜孜以求方能进步，虽然理想国也许永不可达，但这不妨碍我们追求真善
  美的坚定信念。只要我们坚持朝这个方向前进，我们才会做的更好。

  2. 要保证质量，就必须“找对地方”和“花最少的成本”。

  这点是有典故的，美国在70年代的时候老板们热衷于目标管理，热衷于流程控制，于
  是发现产品质量下滑，就会下大力气提高检验队伍的人数或者采用更严格的质量控制
  手段，结果成本提升了，质量却继续下滑。

  戴明的十四点
  大部分只有前半部分：“停止靠检验来提高质量”。在《戴明论质量管理》的正文中，
  是这样说的：“停止靠检验来提高质量。第一次就把产品做好，不再依赖大量的检验
  。”

