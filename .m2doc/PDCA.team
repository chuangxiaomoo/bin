# PDCA.人员配备(战斗值估算)

1 产品经理(概要设计+硬件+投资委员会沟通)

2 系统工程师(层次设计.详细设计.验收标准) `起始轻重:当前jco的缺失`
  开发工程师s

3 测试经理
  测试工程师s

# 起点.基线 **以作品为第一原则**

Demo基线是最难量化的部分，存在大量的不确定性。

1 一个好的设计师，应该看到那些看不到的东西：以在更长的时间内，更大的范围内，对人的性情，产生的影响。
2 协调资源(盗)，`知起(对标)始、知轻重`

# 数据量化

模块  功能  详细说明  优先级  责任人  状态  Bug等级 验收标准  预计完成时间  前置条件  操作步骤  测试备注(必现？)

1. sum(优先级×count(责任人)) = 个人的权重 = **个人贡献值**
2. 解决核心问题: 及早解决关键路径上的Bug，关注可工作的系统，而非等到deadline定版时才反馈有问题。
3. 加入时间因素，一级功能24h之内要解决
4. 变化动作分类，无非{add,del,update}
5. 资源消耗分类: 过早优化(产品经理，客户没有提需求，你急着改啥呢)

# 降低内部交易成本

1 体现组织牵引，配备跨全流程的系统工程师.(华为系统工程师任职资格管理制度)
  汉德公式(Burden＜PL)
  潜在的工作到底由谁来做?
2 忙碌不等于效率
3 不能老是打断别人，打断别人只说明一点，*你没有任何计划性，团队没有协调性*
4 **不可能三角**：中心化，效率(时间)，信息安全，不可能同时达到。

# 需要经过市场的检验

FISHEYE-3 每次发的包，工厂并不一定使用。如此，则是在对研发资源进行空转。一个项目必然需要**时间和空间**上的约束，及时进行崭断，以降低复杂度。

公司如同医院，由外部足够多的病人主动找上门而被动进化的。

而后，经过 economic scale(发挥规模经济的优势)壮大。

文档记录和传承，那是之后的事情了。

