# bonding

[bridge vs. bonding](http://www.connectify.me/blog/bridging-vs-bonding-explained/)

In short, when you see bonding think of the word _combine.aggregation_ like how Speedify can combine multiple Internet connections into one super-fast connection. And when you see bridging, think of the word _link_ – similar to how Connectify Hotspot acts as a link between the shared network and devices on your Hotspot.

# Linux 双网卡绑定一个IP原理及实现

这里介绍的Linux双网卡绑定实现就是使用两块网卡<虚拟>成为一块网卡，这个聚合起来的设备看起来是一个单独的以太网接口设备，通俗点讲就是两块网卡具有相同的IP地址而并行链接聚合成一个逻辑链路工作。其实这项技术在Sun和Cisco中早已存在，被称为Trunking和Etherchannel技术，在Linux的2.4.x的内核中也采用这这种技术，被称为bonding。

bonding技术的最早应用是在集群--beowulf上，为了提高集群节点间的数据传输而设计的。下面我们讨论一下bonding 的原理,什么是bonding需要从网卡的<混杂(promisc)模式>说起。我们知道，在正常情况下，网卡只接收目的硬件地址(MAC Address)是自身Mac的以太网帧，对于别的数据帧都滤掉，以减轻驱动程序的负担。但是网卡也支持另外一种被称为混杂promisc的模式，可以接收网络上所有的帧，比如说tcpdump，就是运行在这个模式下。bonding也运行在这个模式下，而且修改了驱动程序中的mac地址，将两块网卡的Mac地址改成相同，可以接收特定mac的数据帧。然后把相应的数据帧传送给bond驱动程序处理。

<服务器>基本上都是有两个网卡，不用浪费了，呵呵！！！

接下来是创建步骤：

1.新建/etc/sysconfig/network-scripts/ifcfg-bond0文件
DEVICE=bond0
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.0.23
NETMASK=255.255.255.224
GATEWAY=192.168.128.233
USERCTL=no

2.更改/etc/sysconfig/network-scripts/ifcfg-eth0网卡属性
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=none
MASTER=bond0
USERCTL=no

3.更改/etc/sysconfig/network-scripts/ifcfg-eth1网卡的属性
DEVICE=eth1
ONBOOT=yes
BOOTPROTO=none
MASTER=bond0
USERCTL=no

4.编辑/etc/modprobe.conf文件,加入以下内容
alias bond0 bonding
options bond0 miimon=100 mode=0

5.加入/etc/rc.d/rc.local启动项
ifenslave bond0 eth0 eth1

6.启动网卡
ifconfig bond0 192.168.128.225 up
ifenslave bond0 eth0 eth1

7.最好重启下机器

可以用测试时可以通过 nload 或者 iftop 工具进行观察效果；很清晰！！！

说明：miimon是用来进行链路监测的。 比如:miimon=100，那么系统每100ms监测一次链路连接状态，如果有一条线路不通就转入另一条线路；mode的值表示工作模式，他共有0，1,2,3四种模式，常用的为0,1两种
。
mode=0表示load balancing (round-robin)为负载均衡方式，两块网卡都工作。
mode=1表示fault-tolerance (active-backup)提供冗余功能，工作方式是主备的工作方式,也就是说默认情况下只有一块网卡工作,另一块做备份.

http://www.diybl.com/course/6_system/li ... 50083.html

