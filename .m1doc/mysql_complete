
Mysql使用大全-从基础到存储过程
-- http://www.cnblogs.com/logoove/archive/2012/05/17/2505415.html

#登录数据库
mysql -h localhost -uroot -p;
#修改密码
mysqladmin -uroot -p old password new;

#插入数据
insert into test (id,email,ip,state) values(2,'qq@qq.com','127.0.0.1','0');
#删除数据
delete from test where id = 1;
#修改数据
update test set id='1',email='q@qq.com' where id=1;
#查数据
select * from test;  #取所有数据
select * from test limit 0,2;  #取前两条数据
select * from test email like '%qq%' #查含有qq字符 _表示一个 %表示多个
select * from test order by id asc;#降序desc
select * from test id not in('2','3');#id不含2,3或者去掉not表示含有
select * from test timer between 1 and 10;#数据在1,10之间

#---------------------------表连接知识------------------------------
#等值连接又叫内链接 inner join 只返回两个表中连接字段相等的行
select * from A inner join B on A.id = B.id; #写法1
select * from A,B where A.id = B.id; #写法2
select a.id,a.title from A a inner join B b on a.id=b.id and a.id=1;#写法3 表的临时名称
select a.id as ID,a.title as 标题 from A inner join B on A.id=B.id;#添加as字句

#左连接又叫外连接 left join 返回左表中所有记录和右表中连接字段相等的记录
select * from A left join B on A.id = B.id;

select * from A left join (B,C,D) on (B.i1=A.i1 and C.i2=A.i2 and D.i3 = A.i3);#复杂连接

#右连接又叫外连接 right join 返回右表中所有记录和左表中连接字段相等的记录
select * from A right join B on A.id = B.id;

#完整外部链接 full join 返回左右表中所有数据
select * from A full join B on A.id = B.id;

#交叉连接 没有where字句 返回卡迪尔积
select * from A cross join B;

# -------------------------表连接结束---------------------------------------
# -----------------索引创建------------------------------------------------

show index from A #查看索引
alter table A add primary key(id) #主键索引
alter table A add unique(name) #唯一索引
alter table A add index name(name) #普通索引
alter table A add fulltext(name) #全文索引
alter table A add index name(id,name) #多列索引

数据库优化
1.开启缓存，尽量使用php函数而不是mysql
2. explain select 语句可以知道性能
3.一行数据使用 limit 1；
4.为搜索字段重建索引 比如关键字 标签
5.表连接join保证字段类型相同并且有其索引
6.随机查询使用php $r = mysql_query("SELECT count(*) FROM user");
                    $d = mysql_fetch_row($r);
                    $rand = mt_rand(0,$d[0] - 1);
                    $r = mysql_query("SELECT username FROM user LIMIT $rand, 1");
7.避免使用select * 应该使用具体字段
8.每张表都是用id主键，并且是unsigned int
9.对于取值有限而固定使用enum类型，如性别 国家 名族 部门 状态
10.尽可能使用not null ip存储使用int(4),使用ip 转化函数ip2long()相互long2ip()
11.delete和insert语句会锁表，所以可以采用分拆语句操作
    while(1){操作语句;usleep(2000);}
12.选择正确的存储引擎；MyISAM适合大量查询 写操作多用InnoDB支持事务

#存储过程
#存储程序
delimiter #定义存储程序
create procedure getversion(out params varchar(20)) #params是传出参数 in传进 out传出 inout传回
begin
select version() into params; #版本信息赋值params
end
call getversion(@a); #调用存储过程
select @a;
delimiter #定义存储函数
create function display(w varchar(20)) returns varchar(20)
begin
return concat('hello',w);
end
select display('world');

drop procedure if exists spName; #删除一个存储过程
alter function spName [];#修改一个存储过程
show create procedure spName;#显示存储过程信息
declare varName type default value;#声明局部变量
#if语句
if 条件 then 语句
elseif 条件 then 语句
else 语句
end if
#case语句
case 条件
when 条件 then 语句
when 条件 then 语句
else 语句
end case
#loop语句
fn:loop
语句
end loop fn;
leave fn #退出循环
#while语句
fn：while 条件 do
语句
end while fn


#mysql使用帮助资料
? contents; #列出帮助类型
? data types;#列出数据类型
？ int;#列出具体类型
? show;#show语句
? create table;#
#常见表的比较
                    Myisam   BDB    Memory    InnoDB    Archive
存储限制        no           no      yes                64T        no
事物安全                      支持                         支持
锁机制         表锁           页锁    表锁             行锁          行锁
全文索引       支持
外键支持                                                        支持
myisam  frm存储表定义 MYD存储数据 MYI存储索引
InnoDB 用于事务处理
char 和 varchar保存和索引都不相同
浮点数float(10,2) 定点数decimal(10,2)
长度一定下，浮点数表示更大数据范围，缺点是引起精度丢失，货币等使用定点数存储
        索引适合于where字句或者连接字句列
        对于唯一值使用唯一索引

添加新用户 grant select,insert,update,delete on *.* to Yoby@localhost identified by 'mysql';
# *.* 数据库名.表名，限制登录某一个数据库 test.* 
# localhost是本地主机 网络可以使用 '%'代替所有主机 
# 'mysql'是密码 Yoby是用户名  所有权限可以用 all代替
查看用户权限 show grants for 'root'@'localhost';
移除权限  revoke all on *.* from root@localhost;
group by id 分组
having 限制字句
select1 union select2 联合查询有重复去掉保留一行
select2 union all select2 所有行合并到结果集中去

这是一份最完整的mysql笔记，需要的可以复制保存了！
