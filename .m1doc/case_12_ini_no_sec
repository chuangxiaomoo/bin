/* 12_ini_no_sec */

1. 真正原因
    /* True causes */
    一行中如果出现多个换行符'\r'，将引起终端显示的混乱
    注：Ubt cat gbk-file 时会是乱码，将编码改为 utf8 后可以正常显示

2. 问题描述
    /* from R&D or Tester */
    cat config_user.ini 时，文件的 sec 没有了
    ┌─────────────────────────────────────────────────────────────────────┐
    │ ;********************** 用户名/密码属性 *************************   │
    │ [comm_attr]                                                         │
    │ ; 管理员组，最大权限                                                │
    │ admin                          = admin                              │
    │                                                                     │
    │ ; 操作员组，可以操作ptz，但不能保存设置                             │
    │ operator                       = operator                           │
    │                                                                     │
    │ ; 普通用户组，只能观看视频                                          │
    │ user                           = user                               │
    │                                                                     │
    │ [file]                                                              │
    └─────────────────────────────────────────────────────────────────────┘

3. 现象分析
    /* log or details */
    cat显示是失败，但从WEB登陆是正常的。
    是 JCOUserAuth() // auth check
        SysConfUserPasswdCfg() 取了默认值 admin ？还是... ？ 

    这里我没有进行严格分析，一心想，一定是一个bug。
    "从问题定义的角度，我在这里犯了个大错。"

    从功能上讲，其本身就是完整的。(user passwd 这等数据是不可能用默认的。)
    因此从用户的角度看，这本身就不是一个bug。


4. 原因分析
    /* 原因猜想，process to true causes */

    (1) 从函数设置的起点，不断分解并"试错"：

        SysConfRestore();
        dictionary_unset(ini, key);
        void SysConfSaveCheck();
        iniparser_dump_ini(pIniDict[index], pf);
        iniparser_save_comment(d, f, CNOSK);

            #if 1
            fprintf(f, "[%s]\r\n", secname);
            #else                
            fprintf(f, "[%-48s\n", secname);
            fseek(f, 0-(49-strlen(secname)), SEEK_CUR);
            fprintf(f, "%c", ']');
            fseek(f, 0, SEEK_END);
            #endif
    

    (2) 最终确认，是多了个 '\r'
        fprintf(f, "[%s]\r\n", secname);

    ┌─────────────────────────────────────────────────────────────────────┐
      ;********************** 用户名/密码属性 *************************
      [comm_attr]
      [admin]; 管理员组，最大权限
      admin                          = admin
      
      [operator]; 操作员组，可以操作ptz，但不能保存设置
      operator                       = operator
      
      [user]; 普通用户组，只能观看视频
      user                           = user
      
      [file]
    └─────────────────────────────────────────────────────────────────────┘

5. 解决方案
    /* 包括对未来的防御 */
    (1) fprintf(f, "[%s]\n", secname);      // 去掉 '\r'

    (2) 明确 '\r' '\n' 在终端上的行为。

    (3) 大胆猜想：多了一个回车 '\r'
        如果用vim-diff 或是 BC 比对，马上可以得出：注释前移了。


6. Thinking

    (1) 整个问题过程花费的时间

        chenxiang * 4 + zhangjian *4

    (2) 问题引入、发现、解决

        解决引入                2012-06-00
        解决日期                2012-04-15
        总结日期                2013-04-16 11:50:07

    (3) 新人培养如同学琴

        二胡老师对我严格要求，每次课后都有作业，并在下次课前验收。
        没过的话，回家再练，直到过为止。

        一项技能，开始的正确，比什么都重要。改错比"从0开始"需要更多的工夫、耐心。
        老师有时心情不好，因为有些学生顶撞老师、惹老师生气了，做学生的一定要虚心。

        chenxiang 上来就说：
            不是Bug，并没有问题，我认为是可以的。
            因为在Windows上用Editplus打开是OK的。

        换种虚心的说法：
            cat确实是有问题，但很奇怪，用Editplus打开，所有的字符都存在，没有少，
            这是为什么呢？


