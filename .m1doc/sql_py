# tables

DROP TABLE IF EXISTS bias;
CREATE TABLE bias (
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    date        date NOT NULL, 
    setl        DECIMAL(6,2)  NOT NULL,
    open        DECIMAL(6,2)  NOT NULL,
    close       DECIMAL(6,2)  NOT NULL,
    high        DECIMAL(6,2)  NOT NULL,
    low         DECIMAL(6,2)  NOT NULL,
    volume      DECIMAL(15,1) NOT NULL DEFAULT 0,
    amount      DECIMAL(15,1) NOT NULL DEFAULT 0,
    INDEX(code),
    INDEX(code,date)
);

ALTER TABLE d1 ADD x3 DECIMAL(6,2) NOT NULL DEFAULT 0 AFTER vw;
ALTER TABLE d1 CHANGE v5_20 x5    DECIMAL(6,2)  NOT NULL DEFAULT 0;
ALTER TABLE d1 CHANGE vd_30 x10   DECIMAL(6,2)  NOT NULL DEFAULT 0;
ALTER TABLE d1 CHANGE vt_60 x20   DECIMAL(6,2)  NOT NULL DEFAULT 0;

DROP TABLE IF EXISTS f30;
CREATE TABLE f30 (
    date        date NOT NULL, 
    c           TINYINT         NOT NULL DEFAULT 0, # CZSC买卖点类别
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    o1          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h1          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l1          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c1          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o2          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h2          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l2          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c2          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o3          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h3          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l3          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c3          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o4          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h4          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l4          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c4          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o5          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h5          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l5          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c5          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o6          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h6          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l6          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c6          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o7          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h7          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l7          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    c7          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    o8          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    h8          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    l8          DECIMAL(6,2)    NOT NULL DEFAULT 0,
    e           DECIMAL(6,1)    NOT NULL DEFAULT 0, # 自然常数3/8
    INDEX(date,code,c)
);

DROP TABLE IF EXISTS avg;
CREATE TABLE avg (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    volume      DECIMAL(12,2) NOT NULL DEFAULT 0,
    avg         DECIMAL(6,2) NOT NULL DEFAULT 0,
    INDEX(code)
);
LOAD DATA LOCAL INFILE '/pycharm/data/td2.100' INTO TABLE avg;
UPDATE d1 d, avg v SET d.avg=v.avg WHERE d.date=v.date && d.code=v.code;

CREATE TABLE nmcap (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    name        CHAR(16),
    setl        DECIMAL(6,2) NOT NULL,
    open        DECIMAL(6,2) NOT NULL,
    high        DECIMAL(6,2) NOT NULL,
    low         DECIMAL(6,2) NOT NULL,
    close       DECIMAL(6,2) NOT NULL,
    p_change    DECIMAL(6,2) NOT NULL,
    volume      DECIMAL(12,2) NOT NULL,
    turnover    DECIMAL(12,2) NOT NULL,

    amount      DECIMAL(12,2) NOT NULL,
    pe          DECIMAL(12,2) NOT NULL,
    pb          DECIMAL(12,2) NOT NULL,
    cap         DECIMAL(12,2) NOT NULL,
    nmc         DECIMAL(12,2) NOT NULL,

    INDEX(code,date)
);


DROP TABLE IF EXISTS udate;
CREATE TABLE udate (
    udate       date NOT NULL, 
    utime       time NOT NULL, 
    mdate       date NOT NULL, 
    mtime       time NOT NULL
);

DROP TABLE IF EXISTS top10;
CREATE TABLE IF NOT EXISTS top10(
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    top10       DECIMAL(6,2) NOT NULL,
    INDEX(code)
);
LOAD DATA LOCAL INFILE '/root/cdo/top10' INTO TABLE top10;

DROP TABLE IF EXISTS uni;
CREATE TABLE IF NOT EXISTS uni(
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    close       DECIMAL(6,2)  NOT NULL,
    ma5         DECIMAL(6,2)  NOT NULL DEFAULT 0,
    ma10        DECIMAL(6,2)  NOT NULL DEFAULT 0,
    ma20        DECIMAL(6,2)  NOT NULL DEFAULT 0,
    top10       DECIMAL(6,2)  NOT NULL,
    p_change    DECIMAL(6,2)  NOT NULL,
    tov         DECIMAL(12,2) NOT NULL DEFAULT 0,
    hsl20       DECIMAL(12,2) NOT NULL DEFAULT 0, 
    vr1_2       DECIMAL(12,2) NOT NULL DEFAULT 0, 
    vr3_10      DECIMAL(12,2) NOT NULL DEFAULT 0,  
    vr5_20      DECIMAL(12,2) NOT NULL DEFAULT 0, 
    vrd_30      DECIMAL(12,2) NOT NULL DEFAULT 0,
    vrt_60      DECIMAL(12,2) NOT NULL DEFAULT 0,
    amount      DECIMAL(12,2) NOT NULL,
    nmc         DECIMAL(12,2) NOT NULL,
    INDEX(code)
);

DROP TABLE IF EXISTS zmd;
CREATE TABLE IF NOT EXISTS zmd(
    date   date            NOT NULL DEFAULT 0,
    code   INT(6) ZEROFILL NOT NULL DEFAULT 0,

    lo3    DECIMAL(6, 2)   NOT NULL DEFAULT 0,
    n3     TINYINT         NOT NULL DEFAULT 0,
    lo2    DECIMAL(6, 2)   NOT NULL DEFAULT 0,  # 中枢下线
    n2     TINYINT         NOT NULL DEFAULT 0,  # count(顶)
    hi1    DECIMAL(6, 2)   NOT NULL DEFAULT 0,
    lo1    DECIMAL(6, 2)   NOT NULL DEFAULT 0,
    n      TINYINT         NOT NULL DEFAULT 0,

    top0   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  # bi0是上升笔时剔除，最新高点
    top1   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  #                    次新高点
    top2   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  #
    topx   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  # 中枢内最高点
    cvg3   DECIMAL(6, 2)   NOT NULL DEFAULT 0,
    bot0   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  # bi0是上升笔时剔除，最新低点
    bot1   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  #                    次新低点
    botx   DECIMAL(6, 2)   NOT NULL DEFAULT 0,  # 中枢内最低点

    hi0    DECIMAL(6,2)    NOT NULL DEFAULT 0,  # 当日high
    lo0    DECIMAL(6,2)    NOT NULL DEFAULT 0,  # 当日low

    INDEX(date, code)
);

DROP TABLE IF EXISTS maxp;
CREATE TABLE maxp (
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    date        date NOT NULL, 
    high        DECIMAL(6,2) NOT NULL,
    volume      DECIMAL(12,2) NOT NULL DEFAULT 0,
    INDEX(code,date)
);

DROP TABLE IF EXISTS mvp;
CREATE TABLE mvp (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,     # | cnt  | note       |
    high        DECIMAL(6,2) NOT NULL,                  # | :--- | :------    |
    xvol        DECIMAL(12,2) NOT NULL DEFAULT 0,       # | -1   | 量新高     |
    cnt         TINYINT NOT NULL DEFAULT 0,             # |  0   | 量价齐新高 |
    INDEX(code,date)                                    # |  n   | 价新高     |
);

DROP TABLE IF EXISTS HH34;
CREATE TABLE HH34 (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    high        DECIMAL(6,2) NOT NULL,                  # HH(34)
    cnt         TINYINT NOT NULL DEFAULT 0,             # mvp.cnt
    lightgo     TINYINT NOT NULL DEFAULT 0,             # count(mvp.cnt>0)
    INDEX(code,date)
);

LOAD DATA LOCAL INFILE '/tmp/balance.txt' INTO TABLE balance;
SELECT * FROM (SELECT code,name, sum(sell*price*vol) as bala FROM balance GROUP by code) as t  ORDER by bala DESC ;

DROP TABLE IF EXISTS stamp;
CREATE TABLE stamp (
    name        CHAR(16) PRIMARY KEY,   # PRIMARY KEY is compulsive
    date        date NOT NULL, 
    INDEX(name)
);       
INSERT INTO stamp (name,date) VALUES ('god', '2014-08-08') ON DUPLICATE KEY UPDATE date=VALUES(date);

DROP TABLE IF EXISTS q5;
CREATE TABLE q5 (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    p_change    DECIMAL(6,2)  NOT NULL DEFAULT 0,
    v5          DECIMAL(12,2) NOT NULL DEFAULT 0,
    v4          DECIMAL(12,2) NOT NULL DEFAULT 0,
    v3          DECIMAL(12,2) NOT NULL DEFAULT 0,
    v2          DECIMAL(12,2) NOT NULL DEFAULT 0,
    v1          DECIMAL(12,2) NOT NULL DEFAULT 0,
    q5          TINYINT       NOT NULL DEFAULT 0,
    rock        TINYINT       NOT NULL DEFAULT 0,   # p1>p2 or p1>p3 Diamond-Bottom-Price(rock bottom prices)
    INDEX(date,code)
);

CREATE TABLE i5_old (                               # 数据由 k.sh fn_i5() 集成
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,

    tov         DECIMAL(6,2) NOT NULL DEFAULT 0,
    hsl20       DECIMAL(6,2) NOT NULL DEFAULT 0,
    vd_30       DECIMAL(6,2) NOT NULL DEFAULT 0,
    vt_60       DECIMAL(6,2) NOT NULL DEFAULT 0,

    x30         DECIMAL(6,2) NOT NULL DEFAULT 0,    # 最近4日内，min(vd_30)，      __使用4日，是因为预测时用的是昨天的数据
    x60         DECIMAL(6,2) NOT NULL DEFAULT 0,
    hi          DECIMAL(6,2) NOT NULL DEFAULT 0,    # 最近4日内，min(high)
    lo          DECIMAL(6,2) NOT NULL DEFAULT 0,    #

    lo8         DECIMAL(6,2) NOT NULL DEFAULT 0,    # 最近9日内，min(t8.low)
    avg         DECIMAL(6,2) NOT NULL DEFAULT 0,    # <新版>不再使用avg，因为avg太过于精确复杂，复杂的东西不易传播
    avg8        DECIMAL(6,2) NOT NULL DEFAULT 0,    # 最近9日内，min(8,avg)

    close       DECIMAL(6,2) NOT NULL DEFAULT 0,    # 辅助次日开盘30min的e加权

    NB          TINYINT      NOT NULL DEFAULT 0,    # 寻底不成笔，id of max_high(curr=0)
    down        DECIMAL(6,2) NOT NULL DEFAULT 0,    # 下降幅度
    SB          TINYINT      NOT NULL DEFAULT 0,
    rise        DECIMAL(6,1) NOT NULL DEFAULT 0,    # cnt_haier_B<4，取13日涨幅，or取8日涨幅
    INDEX(date,code)
);

DROP TABLE IF EXISTS f5;
CREATE TABLE f5 (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    setl        DECIMAL(6,2) NOT NULL DEFAULT 0,
    dive        DECIMAL(6,2) NOT NULL DEFAULT 0,
    dash        DECIMAL(6,2) NOT NULL DEFAULT 0,
    intv        TINYINT      NOT NULL DEFAULT 0,
    p_chng      DECIMAL(6,2) NOT NULL DEFAULT 0,
    INDEX(code)
);
    
CREATE TEMPORARY TABLE iB LIKE i5;

ALTER TABLE i5 ADD close DECIMAL(6,2) AFTER avg;
UPDATE d1,i5 SET i5.close=d1.close WHERE d1.date=i5.date and d1.code=i5.code;

CREATE TEMPORARY TABLE j5 (
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    i           TINYINT      NOT NULL DEFAULT 0, 
    INDEX(code)
);

DROP TABLE IF EXISTS vbot;
CREATE TABLE vbot (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    L0          DECIMAL(6,2) NOT NULL DEFAULT 0,
    H0          DECIMAL(6,2) NOT NULL DEFAULT 0,
    L1          DECIMAL(6,2) NOT NULL DEFAULT 0,
    H1          DECIMAL(6,2) NOT NULL DEFAULT 0,
    L2          DECIMAL(6,2) NOT NULL DEFAULT 0,
    H2          DECIMAL(6,2) NOT NULL DEFAULT 0,
    L3          DECIMAL(6,2) NOT NULL DEFAULT 0,
    H3          DECIMAL(6,2) NOT NULL DEFAULT 0,
    flag        TINYINT      NOT NULL DEFAULT 0,
    INDEX(date,code)
);

DROP TABLE IF EXISTS ma180;
CREATE TABLE ma180 (
    date        date NOT NULL, 
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    ma180       DECIMAL(6,2) NOT NULL DEFAULT 0,
    INDEX(date,code)
);

DROP TABLE IF EXISTS shebao;    # 社保
CREATE TABLE shebao (
    code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
    pct         DECIMAL(6,2) NOT NULL DEFAULT 0,
    INDEX(code)
);

DROP TABLE IF EXISTS dd0;
CREATE TABLE dd0 (
    iend    SMALLINT        NOT NULL DEFAULT 0,
    code    INT(6) ZEROFILL NOT NULL DEFAULT 0,
    high    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    close   DECIMAL(6,2)    NOT NULL DEFAULT 0,
    INDEX(code)
);

DROP TABLE IF EXISTS ddn; CREATE TABLE ddn LIKE dd0;

CREATE TABLE IF NOT EXISTS dqq_h LIKE d1;
CREATE TABLE IF NOT EXISTS dqq_l LIKE d1;

# 1. cnt = 0，一律可选，只在 dd0 中存在
# 1. i1st = 0，在最后进行一次 update，在 dd0 与 ddn 同时存在
DROP TABLE IF EXISTS ddx;
CREATE TABLE ddx (
    i1st    SMALLINT        NOT NULL DEFAULT 0,     # 第一次新高, 0代表今天
    cnt     SMALLINT        NOT NULL DEFAULT 0,
    code    INT(6) ZEROFILL NOT NULL DEFAULT 0,
    cmin    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    hmin    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    close   DECIMAL(6,2)    NOT NULL DEFAULT 0,
    high    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    cmax    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    hmax    DECIMAL(6,2)    NOT NULL DEFAULT 0,
    INDEX(code)
);

# vpeak hhv 的数据都是昨天的，会更好进行数据处理
DROP TABLE IF EXISTS vpeak;
CREATE TABLE vpeak(
    date    date NOT NULL, 
    code    INT(6) ZEROFILL NOT NULL DEFAULT 0,
    a200    DECIMAL(12,2)   NOT NULL DEFAULT 0,     # hhv(amo, 200)
    p200    DECIMAL(6,2)    NOT NULL DEFAULT 0,     # hhv(C, 200)
    amox    DECIMAL(12,2)   NOT NULL DEFAULT 0,     # hhv(amo, 55)
    prix    DECIMAL(6,2)    NOT NULL DEFAULT 0,     # hhv(C, 55)
    r_a     DECIMAL(6,2)    NOT NULL DEFAULT 0,     # d.amo/vpeak.amox
    r_p     DECIMAL(6,2)    NOT NULL DEFAULT 0,     # 100*(d.close-vpeak55.prix) /vpeak55.prix
    INDEX(date),
    INDEX(date, code)
);

# 创最低价 LL.ma20

DROP TABLE IF EXISTS dualtrade;
CREATE TABLE IF NOT EXISTS dualtrade (
    date    date NOT NULL, 
    code    INT(6) ZEROFILL NOT NULL DEFAULT 0,
    setl18  DECIMAL(6,2)    NOT NULL DEFAULT 0,
    close18 DECIMAL(6,2)    NOT NULL DEFAULT 0,
    ma20    DECIMAL(6,2)    NOT NULL DEFAULT 0, # 今天 ma20
    close_x DECIMAL(6,2)    NOT NULL DEFAULT 0,           
    ma20_x  DECIMAL(6,2)    NOT NULL DEFAULT 0, # 明天-ma20
    oc_ma20 DECIMAL(6,2)    NOT NULL DEFAULT 0, # 34天-ma20，用来确认创 34 日转折点
    yr_ma20 DECIMAL(6,2)    NOT NULL DEFAULT 0, #   年-ma20, 联合 yr_mx20 确定年涨幅，共同富裕是主题
    yr_mx20 DECIMAL(6,2)    NOT NULL DEFAULT 0, #   年-ma20
    INDEX(date),
    INDEX(date,code)
);

+--------+-------+-------+-------+-------+-------+--------+
| code   | setl  | close | m0    | curr  | x     | llma20 |
+--------+-------+-------+-------+-------+-------+--------+
| 000010 |  3.82 |  3.79 |  3.81 |  3.84 |  3.82 |   3.81 |
| 002539 | 13.08 | 13.34 | 12.72 | 13.06 | 12.73 |  12.72 |
| 002583 |  5.38 |  5.28 |  5.41 |  5.44 |  5.42 |   5.41 |
| 300097 |  8.66 |  8.67 |  8.64 |  9.15 |  8.67 |   8.64 |
| 300258 | 13.96 | 13.84 | 13.61 | 14.74 | 13.64 |  13.61 |
| 300400 | 22.71 | 23.21 | 22.50 | 24.91 | 22.61 |  22.50 |
| 300710 | 57.27 | 55.82 | 58.34 | 58.68 | 58.35 |  58.34 |
| 600538 |  6.06 |  6.04 |  6.05 |  6.04 |  6.06 |   6.05 |
| 600901 |  5.13 |  5.09 |  5.10 |  5.20 |  5.11 |   5.10 |
| 600919 |  6.03 |  6.00 |  5.89 |  6.20 |  5.90 |   5.89 |
| 601229 |  7.21 |  7.18 |  7.16 |  7.27 |  7.17 |   7.16 |
| 688683 | 24.26 | 23.49 | 23.88 | 24.88 | 23.90 |  23.88 |
+--------+-------+-------+-------+-------+-------+--------+
