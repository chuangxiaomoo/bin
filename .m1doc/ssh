# sshd

[2小时超时](/etc/ssh/sshd_config)
ClientAliveInterval 7200
ClientAliveCountMax 5

## install

  apt-get install openssh-server

## 通过 <(some command) 可以把某命令当成一个文件。

  示例：比较一个本地文件和远程文件 /etc/crontab

    diff /etc/crontab <(ssh somehost cat /etc/crontab)

## ubuntu scp fails
  ───────────────────────────────────────────────────────────────────────
  root@Moo:~# scp -rp jco_server 192.168.2.126:/root
  root@192.168.2.126's password':

  -- source /etc/bash.bashrc --
  root@Moo:/winc/svn3/trunk/ipcApps/server# echo $?
  1
  ───────────────────────────────────────────────────────────────────────
  Ok, I figured out the problem: my .bashrc produced output,
  even in non-interactive sessions, and this output confused scp...
  ───────────────────────────────────────────────────────────────────────

## ssh in while

    while read ip; do
        ssh $ip ${cmd_you_want}
    done< input_file

  ───────────────────────────────────────────────────────────────────────
  重定向会 confused ssh，请使用 选项 -n

    ssh -n $ip ${cmd_you_want}
  ───────────────────────────────────────────────────────────────────────

## ssh login slowly

    "/etc/ssh/sshd_config"
    UseDNS no                 # set /etc/hosts
    PrintLastLog no

  有时，我们不仅是重启服务sshd，必要时还要重启系统，如在华为时日本问题

    # disable motd: -d "/etc/update-motd.d" && run-parts
    cd /etc/update-motd.d/
    chmod 600 *

## Permission denied
  ───────────────────────────────────────────────────────────────────────
  WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!

    ssh-keygen -R server

    root@192.168.2.126's password:
    Permission denied, please try again.
    root@192.168.2.126's password:
    Permission denied, please try again.

  最后解决方法是：
      更换IP
      重启PC机是否也是一个好办法

# SSH免密码登录

A为本地主机(即用于控制其他主机的机器) ;
B为远程主机(即被控制的机器Server), 假如ip为172.24.253.2 ;
A和B的系统都是Linux

在A上的命令:

    # ssh-keygen -t rsa (连续三次回车,即在本地生成了公钥和私钥,不设置密码)
    # ssh root@172.24.253.2 "mkdir .ssh;chmod 0700 .ssh" (需要输入密码， 注:必须将.ssh的权限设为700)
    # scp ~/.ssh/id_rsa.pub root@172.24.253.2:.ssh/id_rsa.pub (需要输入密码)

在B上的命令:

    # touch /root/.ssh/authorized_keys (如果已经存在这个文件, 跳过这条)
    # chmod 600 ~/.ssh/authorized_keys (# 注意： 必须将~/.ssh/authorized_keys的权限改为600, 该文件用于保存ssh客户端生成的公钥，
                                          可以修改服务器的ssh服务端配置文件/etc/ssh/sshd_config来指定其他文件名）
    # cat /root/.ssh/id_rsa.pub  >> /root/.ssh/authorized_keys (将id_rsa.pub的内容追加到 authorized_keys 中)

回到A机器:

    # ssh root@172.24.253.2 (不需要密码, 登录成功)
