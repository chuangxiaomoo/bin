# proc

# 立即释放cache（sync后才有效）

  /proc/sys/vm/drop_caches
  sync; echo 3 > /proc/sys/vm/drop_caches

# /proc/sys/debug/alignment

  https://www.kernel.org/doc/Documentation/arm/mem_alignment

  To change the alignment trap behavior, simply echo a number into
  /proc/cpu/alignment.  The number is made up from various bits:

  bit     behavior when set
  ---     -----------------

  0       A user process performing an unaligned memory access
          will cause the kernel to print a message indicating
          process name, pid, pc, instruction, address, and the
          fault code.

  1       The kernel will attempt to fix up the user process
          performing the unaligned access.  This is of course
          slow (think about the floating point emulator) and
          not recommended for production use.

  2       The kernel will send a SIGBUS signal to the user process
          performing the unaligned access.

  Note that not all combinations are supported - only values 0 through 5.
  (6 and 7 don't make sense).

  For example, the following will turn on the warnings, but without
  fixing up or sending SIGBUS signals:

      echo 1 > /proc/sys/debug/alignment

# dirty页缓存回写

  [page cache](http://backend.blog.163.com/blog/static/2022941262013111781643200/)
  [pdflush进程详解](http://www.2cto.com/os/201304/206490.html)
  [diff dirty_ratio&bg_dirty](http://blog.sina.com.cn/s/blog_448574810101k1va.html)
  /proc/sys/vm/dirty_background_ratio
  /proc/sys/vm/dirty_writeback_centisecs
  /proc/sys/vm/dirty_ratio                      # 会阻塞write() 
  /proc/sys/vm/dirty_background_ratio           # 通常是dirty_ratio的1/2

# 

  A buffer is something that has yet to be "written" to disk. 
  A cache is something that has been "read" from the disk and stored for later use.

