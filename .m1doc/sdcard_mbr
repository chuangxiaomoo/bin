# cid & serial

6f0303434241445310aa0006e101643f
6f0303434241445310aa00030301643f
6f0303434241445310aa00021601643f

root@grain-media:~# cat /sys/block/mmcblk0/device/cid

8903034e43617264101930291201653f    //
8903034e4361726410193029120165a3    // 黑卡
fe343253443136472000000b4501689f    // MJ 点序 64G
6f0303434241445310aa0005a70164e1    // MJ 32G

fe343253443136472000001cde0169f9

05000c6173646667220000001201883f    // jinsudun 祥富同学

# 例子 035344534336344780616e1248012c3f    // SanDisc 64G

| Name Field            | Width | BCD  | CID-slice     | e.g.       |
| Manufacturer ID       | MID   | 0:2  | 8  [^127:120] | 03         | SanDisc
| OEM/Application ID    | OID   | 2:4  | 16 [^119:104] | 5344       | SD
| Product name          | PNM   | 6:10 | 40 [^103:64]  | 5343363447 | SC64G
| Product revision      | PRV   | 16:2 | 8  [^63:56]   | 80         |
| Product serial number | PSN   | 18:8 | 32 [^55:24]   | 616e1248   | 1,634,603,592
| reserved              | --    | 26:1 | 4  [^23:20]   | 0          |
| Manufacturing date    | MDT   | 27:3 | 12 [^19:8]    | 12c        | 2018 Dec
| CRC7 checksum         | CRC   | 30:2 | 7  [^7:1]     | 3f         |
| not used, always 1    | -     |      | 1  [^0:0]     |            |

root@grain-media:~# cat /sys/block/mmcblk0/device/serial
0x00000703

[SD Association Physical Layer Simplified Specification](https://www.sdcard.org/downloads/pls/index.html)
[32字节cid详细意义](http://www.cameramemoryspeed.com/sd-memory-card-faq/reading-sd-card-cid-serial-psn-internal-numbers/)

https://www.cameramemoryspeed.com/sd-memory-card-faq/reading-sd-card-cid-serial-psn-internal-numbers

serial是cid的一部分。

# MBR分区结构

MBR磁盘分区是一种使用最为广泛的分区结构，它也被称为DOS分区结构，但它并不仅仅应用于Windows系统平台，
也应用于Linux，基于X86的UNIX等系统平台。它位于磁盘的_0号扇区_（一扇区等于512字节），是一个重要的扇区（简称MBR扇区）。

MBR扇区由以下四部分组成：
引导代码：引导代码占MBR分区的前_440字节_，负责整个系统启动。如果引导代码被破坏，系统将无法启动。
Windows磁盘签名：占引导代码后面的_4字节_，是Windows初始化磁盘写入的磁盘标签，如果此标签被破坏，则系统会提示“初始化磁盘”。
MBR分区表：占Windows磁盘标签后面的_64个字节_，是整个硬盘的分区表。
MBR结束标志：占MBR扇区最后_2个字节_，一直为“55 AA”。

440 + 4 + 64 + 2 = 510
还有[2个字节](0x1BC 0x1BD)可自己写

[结构.1](http://www.writeblocked.org/resources/MBR_GPT_cheatsheet.pdf)
[结构.2](http://thestarman.pcministry.com/asm/mbr/STDMBR.htm)

# 读写文件系统类型

head -c16 /dev/mmcblk0p1 | grep fat

# 读写MBR

dd if=/dev/mmcblk0 bs=512 count=1 | hexdump

# C读写MBR

`( mbr_reserv.c
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

# define RESERVE_COL    0x1B0
# define RESERVE_ROW1   0xC
# define RESERVE_ROW2   0xD

int main(int argc, char *argv[])
{
    char buf[32] = {0};
    FILE *f = NULL;

    f = fopen("myfile", "r+");

    if (NULL == f) {
        printf(
                "fopen fail\n"
                "dd if=/dev/mmcblk0 bs=512 count=1 | hexdump\n"
                "Usage: %s sdcard_path\n", argv[1]);
        return -1;
    }

    printf("open.pos is %ld\n", ftell(f));
    printf("pos go 0x%x\n", RESERVE_COL);

    fseek(f, RESERVE_COL, SEEK_CUR);
    printf("pos is 0x%lx\n", ftell(f));

    fread(buf, 0x10, 1, f);
    buf[RESERVE_ROW1] = 0x10;
    buf[RESERVE_ROW2] = 0x80;
    fseek(f, -0x10, SEEK_CUR);
    fwrite(buf, 1, 0x10, f);

    fclose(f);
    sync();

    return 0;
}
)`

