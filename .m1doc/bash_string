#! /bin/bash
# http://my.oschina.net/aiguozhe/blog/41557

[b1] Bash Shell字符串操作小结

1. 取长度
    str="abcd"
    expr length $str   # 4
    echo ${#str}       # 4 好像一般使用这种
    expr "$str" : ".*" # 4

2. 查找子串的位置

    str="abc"
    expr index $str "a"  # 1

3. 选取子串

    str="abcdef"
    expr substr "$str" 1 3  # 从第一个位置开始取3个字符， abc
    echo ${str:1}           # 从第二个位置开始提取字符串， bcdef
    echo ${str:1:3}         # 从第二个位置开始提取3个字符, bcd
    echo ${str:(-4):3}      # 从倒数第二个位置向左提取6个字符, cde

4. 截取子串 

    str="abbc,def,ghi,abcjkl"
    echo ${str#a*c}     # 输出,def,ghi,abcjkl  一个井号(#) 表示从左边截取掉最短的匹配 (这里把abbc字串去掉）
    echo ${str##a*c}    # 输出jkl，             两个井号(##) 表示从左边截取掉最长的匹配 (这里把abbc,def,ghi,abc字串去掉)

    echo ${str%a*l}     # abbc,def,ghi  一个百分号(%)表示从右边截取最短的匹配
    echo ${str%%b*l}    # a             两个百分号表示(%%)表示从右边截取最长的匹配

5. 字符串替换 

    str="apple, tree, apple tree"
    echo ${str/apple/APPLE}   # 替换第一次出现的apple
    echo ${str//apple/APPLE}  # 替换所有apple

    echo ${str/#apple/APPLE}  # 如果字符串str以apple开头，则用APPLE替换它
    echo ${str/%apple/APPLE}  # 如果字符串str以apple结尾，则用APPLE替换它

6. 比较

    [[ "a.txt" == a* ]]        # 逻辑真 (pattern matching)
    [[ "a.txt" =~ .*\.txt ]]   # 逻辑真 (regex matching)
    [[ "abc" == "abc" ]]       # 逻辑真 (string comparision)
    [[ "11" < "2" ]]           # 逻辑真 (string comparision), 按ascii值比较

7. 连接 

    s1="hello"
    s2="world"
    echo ${s1}${s2}   # 当然这样写 $s1$s2 也行，但最好加上大括号

8. 翻转

    tr
