# bc base

先设置ibase的话，后边的obase赋值中的值是按ibase进行的

这个是习惯问题了，我们习惯上用的是十进制的，没有跟着ibase的思路转化成16进制，如果要分开赋值的话，可以这样

ibase=16
obase=A

     echo 'ibase=obase=16;180000+16*10000' | bc -l


# set the bc variable such as scale permanently 

     [root@xm src]# echo scale=10 > ~/.bc

# 使能scale

    echo 'scale=2; (2.777 - 1.4744)/1' | bc 
    1.30

# -l, --mathlib 

    scale 自动被设置为 20，scale(3/2) = 20
    % 在 -l参数下不能正常工作 

    bc -l

    + - * /         
    ^               幂次
    sqrt()          square root
    l(expression)   指定 expression 的自然对数。
    e(expression)   指定 expression 的幂。
    e(l(2)/3)       2开3次方 1.259921049 -> 不同于计算器的多次方根

# google or baidu 'e' 可以得到一个网页版的计算器

    计算多次方根
    2^(1/3) 即是2的立方根

# 用  【Alt+小键盘】输入ascii 
    alt+97 -> a
    178² 179³ 
    √ 41420 gb2312
    √ 8730  unicode

```bash
#! /bin/bash
echo $((2#100)) # 2#100的意思就是说，#左边的数说明是“2进制”，右边的数是二进制数“100”
echo "obase=13;6*9"|bc|figlet
```
