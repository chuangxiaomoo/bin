# hexdump

# 前言
  我使用过的Linux命令之hexdump
  http://codingstandards.iteye.com/blog/805778

  三个命令都可以像UltraEdit那样以16进制的方式查看文件

  hexdump的输入格式最灵活，因为它有专门的参数指定格式
  xxd还可以通过-r选项把16进制表示的反转换为正常的文件
  od -x 和不带选项的xxd差不多，暂只研究上面两种。

  xxd默认表示方式和UltraEdit最像：以位移开头，然后每两字节一组，行后有相应字符显示

# counterfeit SD card, 找到Cap/2

root@moo:~#  8G x1024M  8192
root@moo:~# 16G x1024M 16384
root@moo:~# 32G x1024M 32768
root@moo:~# 64G x1024M 65536

dd if=/dev/zero of=/dev/mmcblk0p1 bs=1M  count=1 seek=32768   #// seek=bs的个数，改变这个，即是实际大小

hexdump -s 2048m -n 16 /dev/mmcblk0p1 >& /tmp/cde;

hexdump -s 2048m -n 16 /dev/mmcblk0p1
hexdump: number 2048m is not in 0..2147483647 range           #// 坏卡

echo -e -n '\x55\xff\xaa' > /tmp/raw
dd if=/dev/zero of=/dev/mmcblk0 seek=16384M bs=16M count=1
hexdump -s 16384m -n 16 /dev/mmcblk0
dd if=/tmp/raw of=/dev/mmcblk0 seek=16384M bs=16M count=1
hexdump -s 16384m -n 16 /dev/mmcblk0

# hexdump
   -n length
      Interpret only length bytes of input.
   -s offset
      Skip offset bytes from the beginning of the input.

  hexdump -C       == 单字节十六进制和ASCII码显示(Canonical hex+ASCII)
  hexdump -x       == 双字节十六进制显示
  hexdump -d       == 双字节十进制显示
  hexdump -b       == 单字节八进制显示

# hexdump -e 定制    

  man手册里有很多，此处，我只想实现一个功能，分行显示ascii。

  root@Moo:~/txt# cat text 
  123
  1234
  12345
  root@Moo:~/txt# hexdump -v -e '/1 "%02X "' text | sed  's/0A /\n/g'
  31 32 33 
  31 32 33 34 
  31 32 33 34 35 

    function hdline() 
    {
        [ ! -f "$1" ] && echo "Usage: hdline file" && exit
        hexdump -v -e '/1 "%02X "' $1 | sed  's/0A /\n/g'
    }

# xxd

  root@Moo:~/txt# xxd text 
  0000000: 3132 330a 3132 3334 0a31 3233 3435 0a    123.1234.12345.

# xxd插入一段二进制   

 1. root@Moo64:~/txt# echo -n 123456 > input

 2. root@Moo64:~/txt# echo -n 123456 | xxd -i
      0x31, 0x32, 0x33, 0x34, 0x35, 0x36


 3. root@Moo64:~/txt# xxd -i input 
    unsigned char input[] = {
      0x31, 0x32, 0x33, 0x34, 0x35, 0x36
    };
    unsigned int input_len = 6;

    再用c语言write()写入文件，就好了。
