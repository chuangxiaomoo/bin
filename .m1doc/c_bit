/* c_bit */
总诀：位是从第0位开始数起，位操作 & | ~

. 对7、3、2位置1

    DATA = (1<7) | (1< 3) | (1< 2)

. 某一位置位

    (DATA) |= 1<<n;

. 某一位清零

    (DATA) &= ~(1<<n);

. 获得某一位的值

    (DATA>>n) & 0x01;

. 获得两位的值，n必须是2的倍数

    (DATA>>n) & 0x03;

. 将单字节中两位位置（n, 2的倍数）处，设置数值（m, 0 1 2 3）

    (DATA) |= m<<n;

. 任意一个数与任意一个给定的值连续异或两次，而值不变。

    void swap(int &x , int &y)  {  *x ^= *y; *y ^= *x; *x ^= *y;  }

