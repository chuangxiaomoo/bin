#! /bin/bash

# 这是一个好网站 -- Linux大棚 -- http://roclinux.cn/?p=1347

    Linux命令五分钟系列
    《tr命令-优化版》-linux命令五分钟系列之二十五

    tr translate，亦即翻译，它不翻译句子'字串'，只能翻译'单个字符'，处理字串。

. 1 tr的工作原理是什么?

    先记住一点，'tr命令不接受指定的文件参数，而只是对标准输入进行翻译'。好了，记
    住这点后，我们继续。

    tr的命令格式是tr SET1 SET2，凡是在SET1中的字符，都会被替换为SET2中相应位置
    上的字符，简单吧!

. 2 举个例子 # 通过重定向

    tr的例子其实都大同小异，看一个最简单的例子：

    [rocrocket@rocrocket programming]$ cat height.txt
    1.79 1.83
    1.65 1.59

    [rocrocket@rocrocket programming]$ tr 1 2 < height.txt      
    2.79 2.83
    2.65 2.59

. 3 我们可以用tr来修改文件中的间隔符么？

    当使用cut的时候，通常会被间隔符问题所困扰，我们这个时候可以考虑到tr这个命令
    还是以height.txt文件为例，其中的间隔符是空格，我们把它修改为制表符吧！

    [rocrocket@rocrocket programming]$ tr ' ' '\t' < height.txt
    1.79	1.83
    1.65	1.59

    制表符的八进制形式是11，回车是15，换行是12。 tr ' ' '\011' < height.txt

    [rocrocket@rocrocket programming]$ tr ' ' '\11' < height.txt |sed -n l
    1.79\t1.83$
    1.65\t1.59$


. 4 小写都转换成大写么？

    [rocrocket@rocrocket programming]$ cat word.txt
    AbcdE
    [rocrocket@rocrocket programming]$ tr 'a-z' 'A-Z' < word.txt
    ABCDE

. 5 [CHAR*]怎么用？

    这是 'SET2' 专用的设定，功能是重复指定的字符到与 SET1 相同长度为止

    [rocrocket@rocrocket programming]$ cat number.txt
    1234567890
    [rocrocket@rocrocket programming]$ tr '1-5' '[A*]' < number.txt
    AAAAA67890

. 6 [CHAR*REPEAT]怎么用？

    也是 'SET2' 专用的设定，功能是将CHAR重复REPEAT次数。其中REPEAT次数可以用八进
    制数表示，但记得要以0开头表示八进制数。

    [rocrocket@rocrocket programming]$ tr '1-9' '[A*5]BCDE' < number.txt
    AAAAABCDE0

. 7 在tr中还有哪些表示集合的符号呢?

    [:alnum:] ：所有字母字符与数字
    [:alpha:] ：所有字母字符
    [:blank:] ：所有水平空格
    [:cntrl:] ：所有控制字符
    [:digit:] ：所有数字
    [:graph:] ：所有可打印的字符(不包含空格符)
    [:lower:] ：所有小写字母
    [:print:] ：所有可打印的字符(包含空格符)
    [:punct:] ：所有标点字符
    [:space:] ：所有水平与垂直空格符
    [:upper:] ：所有大写字母
    [:xdigit:] ：所有 16 进位制的数字

    将所有的数字都转换为字符x。

    [rocrocket@rocrocket programming]$ tr '[:alnum:]' '[x*]' < number.txt
    xxxxxxxxxx

. 8 两个集合的大小不同时

    tr里面包含SET1和SET2，那如果出现两个集合的大小不同的情况，tr如何处理呢？
    这个问题，最好的解决办法就是做实验啊。

    第一种情况是SET1>SET2：
    结论一下子就出来了，SET1中多出来的字符都会和SET2中最后一个字符相对应。

    [rocrocket@rocrocket programming]$ tr 1-5 AB < number.txt
    ABBBB67890

    第二种情况SET1<SET2：
    很明了，SET2中多余的部分将被抛弃。

    [rocrocket@rocrocket programming]$ tr 1-3 ABCDE < number.txt
    ABC4567890

. 9 讲一讲tr命令的-s选项吧！

    这个-s选项，是专门针对SET1起作用的，意思是如果发现有连续的SET1里的字符，就
    把它们缩减为1个。

    --一个很经典的应用就是把不规律的多个空格缩减为一个空格或是'\t'：

    [rocrocket@rocrocket programming]$ cat spaces.txt
    How   are               you?
    Fine! Thank    you!
    [rocrocket@rocrocket programming]$ tr -s ' ' ' ' < spaces.txt
    How are you?
    Fine! Thank you!

    效果很明显，用户很满意。恩！

. 0 -d选项咋用？

    -d选项是用来删除字符用的。格式是这样的：tr -d charset

    [rocrocket@rocrocket programming]$ tr -d ' ' < spaces.txt
    Howareyou?
    Fine!Thankyou!

    看，该有的空格都没了…这就是-d的作用，把空格都删除了!

. 1 -c是取补集的意思

    $ cat rt
    isojdf 11110.0
    oooooooffffff 3.3
    ooo 3.4

    $ cat rt | tr -cs '[a-z]' '[\n*]'
    isojdf
    oooooooffffff
    ooo

    '\n*'怎么解释呢？如果长度一样，貌似\n应该有好多个


  • Google C++编程规范 – 第二条 -《请用ASCII字符》
  • Google C++编程规范 – 第一条 -《有关行长度》
  • 大棚读书-《卓越程序员密码》-下篇
  • 《神探tcpdump第七招》-linux命令五分钟系列之四十一
  • 计算机网络协议包头赏析-UDP

