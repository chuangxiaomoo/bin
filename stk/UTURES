#! /bin/bash
. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_get_udate()
{
    # Usage: fn_get_date offset size
    local sta=${1:-0}
    if [ "${sta}" -eq 0 ]; then
        mysql -N kts <<<"SELECT max(date) FROM ${uTBL:-futures_f5}"
        return
    fi 

    let sta--           #sta=offset-1 保证 futures_ls 是最新的
    sqls="
    SELECT DISTINCT date from ${uTBL:-futures_f5} ORDER by date DESC LIMIT ${sta},${2:-1}"
    #echo ${sqls}; exit
    mysql -N kts <<< "${sqls}"
}

function fn_set_uEND()
{
    uEND=`mysql -N kts <<<"SELECT max(date) FROM ${TBL:-futures_ls}"`
    uEND=`fn_get_udate ${iEND:-1}`
    let iPREV=${iEND:-1}+1
    uPREV=`fn_get_udate ${iPREV}`
}

function fn_up_ls_0()
{
    sed -e "s/tag0/${1:0:1}/" \
        -e "s/tag1/${1:1:1}/" \
        -e "s/tag2/${1:2:1}/" .src/futures_ls.q > /10jqka/xRD.q
    xt_ret $? "" || return $?

    fn_bell xRD
    timeout 8 nc -l 2911 > /dev/null    # Dont echo   _xRD_done_
    xt_ret $? "xRD@${1} fail!" || return $?
}

function fn_d1_0()
{
    sed -e "s/tag0/${1:0:1}/" \
        -e "s/tag1/${1:1:1}/" \
        -e "s/tag2/${1:2:1}/" \
        -e "s/tag3/${1:3:1}/" \
        -e "s/tag4/${1:4:1}/" .src/xRD.q > /10jqka/xRD.q
    xt_ret $? "" || return $?

    if [ "${#1}" -eq 6 ]; then
        sed -i "s/tag5/${1:5:1}/" /10jqka/xRD.q
    else
        sed -i "/tag5/d" /10jqka/xRD.q
    fi
    
    > /Export/Table.txt
    fn_bell xRD
    timeout 8 nc -l 2911 > /dev/null    # Dont echo   _xRD_done_
    xt_ret $? "xRD@${1} fail!"  # Dont return _but_ try again below

    if [ `wc -l< /Export/Table.txt` -lt 125 ]; then
        fn_echo_fail "try $1 again"
        sed -i 's/266/1066/' /10jqka/xRD.q
        fn_bell xRD
        timeout 8 nc -l 2911 > /dev/null    # Dont echo   _xRD_done_
        xt_ret $? "xRD@${1} fail!" || return $?
    fi

    # iconv & add yesc
    iconv -f cp936 -t utf8 /Export/Table.txt    |
    tail -124                                   |
    sed -e '/时间/d'                            \
        -e 's/[,一二三四五]//g'                 \
        -e 's/  */\t/g'                         \
        -e 's/\t\t/\t/g'                        \
        -e 's///g'                            \
        -e '/^$/d'                              |
    awk -v code=$1 '{
        printf "%s\t%s\t%d\t%d\t%d\t%d\t%d\t%.2f\t%.2f\t%.2f\t%.2f\n",
        code,$1, yesc,$2,$3,$4,$5,$6,$7, $8/10000,$9/10000;
        yesc=$5
    }' |
    sed '1d' > ${fchao}

    echo "
--  DROP TABLE IF EXISTS futures_d1;
    CREATE TABLE IF NOT EXISTS futures_d1 (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    CHAR(8),
        date    DATE,
        yesc    INT(6),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        rise    DECIMAL(12,2) DEFAULT 0,
        chng    DECIMAL(12,2) DEFAULT 0,
        shou    DECIMAL(12,2) DEFAULT 0,
        amount  DECIMAL(12,2) DEFAULT 0,
        INDEX(code,date)
    );
    LOAD DATA LOCAL INFILE '${fchao}' INTO TABLE futures_d1(code,date,yesc,open,high,low,close,rise,chng,shou,amount);
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "update db@${1} succ!"
}

function fn_q5_0()
{
    f5_list=
    for (( i=$_ij; i<${pages}+${peg:-0}; i+=1 )); do
        sed -e "s/tag0/${1:0:1}/" \
            -e "s/tag1/${1:1:1}/" \
            -e "s/tag2/${1:2:1}/" \
            -e "s/tag3/${1:3:1}/" \
            -e "s/tag4/${1:4:1}/" .src/futures_f5.q > /10jqka/xRD.q
        xt_ret $? "" || return $?

        if [ "${#1}" -eq 6 ]; then
            sed -i "s/tag5/${1:5:1}/" /10jqka/xRD.q
        else
            sed -i "/tag5/d" /10jqka/xRD.q
        fi
        for (( j=$_ij; j<$i; j+=1 )); do
            sed -i -e '/RightClick/i\
                KeyPress "PageUp", 1\
                Delay 200' /10jqka/xRD.q
        done
        fn_bell xRD
        timeout 12 nc -l 2911 > /dev/null   # Dont echo   _xRD_done_
        xt_ret $? "xRD@${1} fail!"          # Dont return _but_ try again below
        cp /Export/Table.txt ${chao}.f5.${i}
        f5_list="${chao}.f5.${i} ${f5_list}"
    done

    # iconv & add yesc
    cat ${f5_list} > ${chao}.f5
    fn_issqltrue "`wc -l<${chao}.f5`>=30*($i-${_ij})"    #
    xt_ret $? "up $1@$i fail: ${f5_list}" || return $?

    iconv -f cp936 -t utf8 ${chao}.f5           |
    sed -e '/时间/d'                            \
        -e 's/[,一二三四五]//g'                 \
        -e 's/  */\t/g'                         \
        -e 's/\t\t/\t/g'                        \
        -e 's///g'                            \
        -e '/^$/d'                              |
    awk -v code=$1 '{
        if (prev!=$1) {
            i=1
        } else {
            i++
        }
        prev=$1
        printf "%s\t%s\t%d\t%d\t%d\t%d\t%d\t%.2f\t%.2f\t%.2f\t%.2f\n",
        code,$1, i,$2,$3,$4,$5,$6,$7, $8/10000,$9/10000;
    }' > ${fchao}

    echo "
--  DROP TABLE IF EXISTS futures_q5;
    CREATE TABLE IF NOT EXISTS futures_q5 (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    CHAR(8),
        date    DATE,
        time    INT(4),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        rise    DECIMAL(12,2) DEFAULT 0,
        chng    DECIMAL(12,2) DEFAULT 0,
        shou    DECIMAL(12,2) DEFAULT 0,
        amount  DECIMAL(12,2) DEFAULT 0,
        INDEX(code,date)
    );
    DELETE FROM futures_q5 WHERE code='${1}';
    LOAD DATA LOCAL INFILE '${fchao}' INTO TABLE futures_q5(code,date,time,open,high,low,close,rise,chng,shou,amount);
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "update db@${1} succ!"
}

function fn_up_ls()
{
    if [ "${date_T//:/}" -gt 203000 ]; then
        HMS='23:00:00'
    else
        HMS='15:00:00'
    fi

    tag_blank='--'

    > ${fchao} 
    for i in 714 715 716; do
        fn_up_ls_0 $i
        xt_ret $? "fn_up_ls_0" || return $?
        cat /Export/Table.txt >> ${fchao}
        iconv -f cp936 -t utf8 /Export/Table.txt | sed -e 's///g' -e '/名称/d' -e '/^$/d' | awk '{print $2}' > ${chao}.$i
        sleep .2
    done

    iconv -f cp936 -t utf8 ${fchao} > ${cache}
    cat ${cache} | 
        sed -e 's///g' -e '/名称/d' -e "/${tag_blank}/d" -e '/^$/d' |
        sed -e '/连续/d' -e '/主连/d' -e '/指数/d' |
        awk -v vdate=${END} -vvtime=${HMS} '{
            printf "%s\t%s\t%s\t%s\t%s\t%.2f\t%s\t%s\t%s\t%s\n", vdate,vtime,$1,$2,$3,$4/10000,$5,$6,$10,$11
        }'> ${buffer}

    echo "
    DROP TABLE IF EXISTS futures_ls;
    CREATE TABLE IF NOT EXISTS futures_ls (
        date    DATE,
        time    TIME,
        name    CHAR(16),
        code    CHAR(8),
        shou    INT(10),
        amount  DECIMAL(12,2) DEFAULT 0,
        posi    INT(12),
        yesc    INT(6),
        close   INT(6),
        chng    DECIMAL(12,2) DEFAULT 0,
        INDEX(code)
    );
    DELETE FROM futures_ls WHERE date='${END}' && time='${HMS}';
    LOAD DATA LOCAL INFILE '${buffer}' INTO TABLE futures_ls;
    " | mysql kts
    xt_ret $? "" || return $?

    fn_ls
    BEEPS=3 fn_beep
}

function fn_up_d1()
{
    COND="Margin<25000" UTURES ls 
    xt_ret $? "" || return $?

    codes=`cat ${chao}.ls`

    # echo ${codes};exit

    mysql kts <<<"DROP TABLE IF EXISTS futures_d1"
    xt_ret $? "" || return $?

    for i in ${codes}; do
        fn_d1_0 $i
        xt_ret $? "fn_d1_0" || return $?
        sleep .2
    done
    fn_echo_succ "up all succ!"
}

function fn_up_f5()
{
    Taolu="
    0 UTURES的时间系统
      futures_ls是系统的起点，时间来源股票系统
      futures_q5,futures_f5...等则带有自己时间
    1 创建f5
      将q5的pages=6，下载两天的数据，成功后进行重命名
      如果下午3点后更新，i=j=_ij=1，可以少下载一页数据
      RENAME TABLE futures_q5 TO futures_f5
    2 更新q5
      将一天分成3段，分别对应pages=1,2,3，并删除与f5的重复数据
    3 更新f5
      在交易日早晨9:00前执行q5，因沪铜等会交易到凌晨1点。
      设置pages=3，一天的数据量(沪铜的records为94，在此忽略缺失数1)
      q5删除沪铜等跨夜数据
      q5.push到f5(通过f5.max(date))
    "
    pages=3
    fn_up_q5

    echo "
    DELETE FROM futures_f5 WHERE date='${date_F}';
    SELECT max(date) FROM futures_f5 INTO @maxd;

    DELETE FROM futures_q5 WHERE date<=${MAXDT:-@maxd} or date>='${date_F}';
    INSERT INTO futures_f5(code,date,time,open,high,low,close,rise,chng,shou,amount)
                    SELECT code,date,time,open,high,low,close,rise,chng,shou,amount FROM futures_q5;
    " | mysql kts
    xt_ret $? "" || return $?

    CHAR=1 UTURES nr f51
}

function fn_up_q5()
{
    COND="Margin<25000" UTURES ls 
    xt_ret $? "" || return $?

    codes=`cat ${chao}.ls`
    # echo ${codes} | wc -w ; exit

    mysql kts <<<"DROP TABLE IF EXISTS futures_q5"
    xt_ret $? "" || return $?

    _ij=0
    #uncomment when 创建futures_f5  OR  单个code失败

    if [ -n "${LEAK}" ]; then
        pages=3
        codes=${LEAK}
        MAXDT="'`mysql -N kts <<<"SELECT max(date) FROM futures_f5 WHERE code='${codes}'" |sed "s/NULL/$uPREV/g"`'"
        #echo $uPREV $MAXDT; exit
    fi

    if [ -z "${pages}" ]; then
        if [ "${date_T//:/}" -lt 133000 ]; then
            pages=1
        elif [ "${date_T//:/}" -lt 210000 ]; then
            pages=2
        else
            pages=3
        fi
    fi

    for code in ${codes}; do
        grep -q "^ag" <<<"${code}" && peg=1
        fn_q5_0 $code

        xt_ret $? "Warning: try $code fail"
        sleep .2
    done
    fn_echo_succ "up all succ!"
}

function fn_up_domi()
{
    #
    # 通达信期货 -- 拉横向滚动条显示‘每手剩数’
    # -- 34 -- 导出全部 -- 导出目录为Export
    # _ 代表乘数 ‘200_元/手’
    fn_get_export_file
    xt_ret $? "" || return $?

    cp ${efile} ${info}
    iconv -f cp936 -t utf8 ${efile} | grep '_' | 
    awk '{printf "%s\t%s\t%s\n", $1,$2,$(NF-1)}' | sed 's/_.*//g' > ${cache}

    nr=`wc -l<${cache}`

    [ "${nr}" -gt 45 ]
    xt_ret $? "nr:${nr} -lt 40" || return $?
    
    echo "
    DROP TABLE IF EXISTS futures_domi;
    CREATE TABLE IF NOT EXISTS futures_domi (
        code    CHAR(8),
        name    CHAR(16),
        mult    INT(6),
        INDEX(code)
    );
    LOAD DATA LOCAL INFILE '${cache}' INTO TABLE futures_domi;
    " | mysql kts
    xt_ret $? "" || return $?

    mysql -N kts <<< "SELECT code FROM futures_domi" > ${chao}.domi

    fn_echo_succ "up domi succ"
}

function fn_up()
{
    [ -z "${LEAK}" ] && [ "$1" != ls ] && read -p "Up [$1], Ctrl-C to break for KeySprit restart"

    fchao='/tmp/kts/chao.utures'
    case $1 in
    ls) fn_up_ls    ;;
    d1) fn_up_d1    ;;
    f5) fn_up_f5    ;;
    q5) fn_up_q5    ;;
  domi) fn_up_domi  ;;
    *)  echo "Usage: UTURES up {ls|d1|f5|q5|domi}"
    esac
}

function fn_nr()
{
    ORDER="GROUP by code ORDER by cnt DESC LIMIT 36"
    case $1 in
    ls) sqls="SELECT *,count(code) as cnt FROM futures_ls ${ORDER}"; fn_imysql_sqls ;;
    d1) sqls="SELECT *,count(code) as cnt FROM futures_d1 ${ORDER}"; fn_imysql_sqls ;;
    f5) sqls="SELECT *,count(code) as cnt FROM futures_f5 
                                          WHERE 1 ${COND} ${ORDER}"; fn_imysql_sqls ;;
   f51) fn_set_uEND
        sqls="SELECT *,count(code) as cnt FROM futures_f5 
                                     WHERE date='${uEND}' ${ORDER}"; fn_imysql_sqls 
                                                                fn_utao ${chao}.f51 ;;
    q5) sqls="SELECT *,count(code) as cnt FROM futures_q5 ${ORDER}"; fn_imysql_sqls ;;
    *)  echo "Usage: UTURES nr {ls|d1|f5|f51|q5}" ;;
    esac
}

function fn_ls()
{
    EXCLUDE_CO="(
    'zn1611',  -- 非主力锌
    'cu1611',  -- 非主力铜
    'cu1701',  -- 非主力铜
    'RU1607'   -- 测试
    )"

    echo "
    SELECT code FROM futures_ls
    WHERE code not in ${EXCLUDE_CO}
    ORDER by amount DESC LIMIT 20
    " | mysql -N kts > ${chao}.domi0
    grep -w -i -f ${chao}.domi0 ${chao}.domi > ${chao}.domi2

    nr=`grep -w -i -f ${chao}.domi0 ${chao}.domi | wc -l`
    if [ "${nr}" -le 14 ]; then
        grep -w -i -v -f ${chao}.domi2 ${chao}.domi0
        fn_echo_fail "nr:${nr} -ne 20, to update [UTURES up domi]" 2>&1 | tee /dev/pts/0
        fn_bell
        exit 1
    fi

    columns='date,name,code,shou,amount,posi,yesc,close,chng'
    columns=ls.${columns//,/,ls.}

    sqls="
        SELECT ${columns},
        ROUND(100*(close-yesc)/yesc, 2) as rise,
        ROUND(close*shou*mult/(10000*10000), 2) as eYi,
        ROUND(close*mult, 2) as Yeps,
        ROUND(close*mult*.15) as Margin
        FROM futures_ls as ls, futures_domi as do
        WHERE ls.code=do.code
        HAVING 1 ${COND} ORDER by ${FIELD:-eYi} DESC LIMIT ${LIMIT:-24}
    " 
    #   echo ${sqls}; exit
    fn_imysql_sqls
    fn_echo_succ "FIELD:${FIELD:-eYi}"
    CHAO=1 fn_utao ${chao}.ls
}

function fn_pro()
{
    # 查询系统：不同合约records数不同，缺省i时取最新，指定i时以最新为0往后数
    case $1 in
    d1)
        uTBL=futures_d1 fn_set_uEND
        STA=`fn_get_date ${NUM:-3}`
        echo "
        SELECT *, COUNT(*) as cnt, 
            ROUND(SUM(100*GREATEST(high-low, high-yesc, yesc-low)/yesc)/COUNT(*), 2) as ATR,
            ROUND(SUM(abs(close-yesc)/GREATEST(high-low, high-yesc, yesc-low))/COUNT(*), 2) as MEF
            FROM futures_d1 WHERE date>='${STA}' and date<='${uEND}' 
            GROUP by code ORDER by ${FIELD:-ATR} DESC;
        " | mysql -t kts
        fn_echo_succ "iEND:${iEND:-1} NUM:${NUM:-3} uEND:${uEND} FIELD:${FIELD:-ATR}"
        ;;
    q5)
        mysql kts < sql/UTURES.sql
        echo "
        SELECT code,date,time,close,
        ma4,ma16,ma64,ma256,
        ROUND((ABS(close-a1)+ABS(ma4-a1)+ABS(ma16-a1))/a1*100   ,2) as cv_f1,
        ROUND((ABS(ma4-a2)+ABS(ma16-a2)+ABS(ma64 -a2))/a2*100   ,2) as cv_f4,
        ROUND((ABS(ma16-a3) +ABS(ma64-a3)+ABS(ma256-a3))/a3*100 ,2) as cv_ff,
        sd_d1,sd_d2,pk_d1,pk_d2
        FROM pro_q5
        ORDER by ${FIELD:-cv_f4} DESC
        " | mysql -t kts
        ;;

    *)  echo "Usage: UTURES pro {d1|q5}"
        ;;
    esac
}


function fn_isucode()
{
    grep -q -w -E '[a-zA-Z]{1,2}[0-9]{4}' <<< "$1"
    return $?
}

function fn_leak()
{
    grep -v -f ${chao}.f51 ${chao}.ls
    read -p "Are u sure to leak, Ctrl-C to break"

    fn_set_uEND
    export uEND uPREV

    local i=
    for i in $@; do
        fn_isucode $i
        xt_ret $? "[$i] not u-code" || continue
        echo "DELETE FROM futures_f5 WHERE code='$i' and date='${uEND}'" | mysql -t kts
        LEAK=$i UTURES up f5
        xt_ret $? "" || return $?
    done
}

function fn_like()
{
    [ -n "${1}" ]
    xt_ret $? "Usage: UTURES like sym" || return $?

    columns='date,name,code,shou,amount,posi,yesc,close,chng'
    columns=ls.${columns//,/,ls.}

    # %代表任意多个字符  _代表一个字符 在 MySQL中，SQL的模式缺省是忽略大小写的
    sqls="
        SELECT ${columns},
        ROUND(100*(close-yesc)/yesc, 2) as rise
        FROM futures_ls as ls
        WHERE ls.code like '${1}%'
        HAVING 1 ${COND} ORDER by ${FIELD:-shou} DESC LIMIT ${LIMIT:-24}
    " 
    #   echo ${sqls}; exit
    fn_imysql_sqls
    fn_echo_succ "FIELD:${FIELD:-eYi}"
    CHAO=1 fn_utao ${chao}.ls
}


function fn_vega_up()
{
    fn_get_export_file
    xt_ret $? "" || return $?
    echo ${efile}
    cat ${efile} | sed -e 's#[/:]##g' | \
        awk  '/^[0-9]/ {printf "%s\t%s\t%s\t%s\t%s\t%s\n", $1, $2, $3, $4, $5, $6}' > ${info}

    echo "
    DROP TABLE IF EXISTS futures_${1};
    CREATE TABLE IF NOT EXISTS futures_${1} (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        time    INT(10),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        shou    INT(10) DEFAULT 0,
        INDEX(time)
    );
    LOAD DATA LOCAL INFILE '${info}' INTO TABLE futures_${1}(time,open,high,low,close,shou);
    " | mysql kts
    xt_ret $? "" || return $?
    
    return $?
}

function fn_vega_dif()
{
    N=30
    K=2
    echo "
delimiter //
DROP PROCEDURE IF EXISTS sp_diz //
CREATE PROCEDURE sp_diz() BEGIN

    DROP TABLE IF EXISTS futures_${1};
    CREATE TABLE IF NOT EXISTS futures_${1} (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        time    INT(10),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        close2  INT(6),
        dif     INT(6),
        absd    INT(6),
        mid     DECIMAL(8,2) DEFAULT 0,
        top     DECIMAL(8,2) DEFAULT 0,
        bot     DECIMAL(8,2) DEFAULT 0,
        std     DECIMAL(8,2) DEFAULT 0,
        INDEX(time)
    );

    INSERT INTO futures_dif(time,open,high,low,close,close2,dif,absd)
    SELECT n.time,n.open,n.high,n.low,n.close,f.close,n.close-f.close, abs(n.close-f.close)
        FROM futures_near n, futures_far f
        WHERE n.time=f.time;

    SET @id = 1;
#   SET @len = 10000;
    SELECT max(id) FROM futures_dif INTO @len; 

    WHILE @id <= @len DO
        SELECT avg(dif),STD(dif) 
            FROM futures_dif WHERE (time%100)=0 AND id<=@id AND id>(@id-12*${N})
            INTO @avg, @std;
        IF @avg<0 THEN
            SET @std=-@std;
        END IF;
        SET @top=@avg+${K}*@std;
        SET @bot=@avg-${K}*@std;
        UPDATE futures_dif SET mid=@avg, top=@top, bot=@bot, std=abs(@std) WHERE id<=@id AND id>@id-12;
        SET @id = @id + 12;
    END WHILE;
END //

call sp_diz();

    " | mysql kts
    xt_ret $? "" || return $?
    
    return $?
}

function fn_vega_day()
{
    echo "
    DROP TABLE IF EXISTS futures_${1};
    CREATE TABLE IF NOT EXISTS futures_${1} (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        day     INT(10),
        open    INT(6),
        close   INT(6),
      p_high    INT(6),
      p_low     INT(6),
      p_space   INT(6),
      t_p0      INT(6),
      t_p1      INT(6),
      n_high    INT(6),
      n_low     INT(6),
      n_space   INT(6),
      t_n0      INT(6),
      t_n1      INT(6),
        INDEX(day)
    );
    " | mysql kts
    xt_ret $? "" || return $?

    days=`mysql -N kts <<< "SELECT DISTINCT ROUND(time/1000000) FROM futures_dif"`
    [ -n "${days}" ]
    xt_ret $? "" || return $?

    
    #days=1118
    local i=
    for i in $days; do
        echo "
delimiter //
DROP PROCEDURE IF EXISTS sp_diz //
CREATE PROCEDURE sp_diz() BEGIN

    SET @day = ${i};

    SET @s_min = ${i}*1000000;
    SET @s_max = ${i}*1000000+999999;
    SET @s_end = ${i}*1000000 + 150000;
    SELECT time FROM futures_dif WHERE time=@s_min+210005 INTO @t_open;

    SET @t_open = IF (@t_open IS NOT NULL, @t_open, @s_min+090000);

    SELECT dif FROM futures_dif WHERE time=@t_open INTO @open;
    SELECT dif FROM futures_dif WHERE time=@s_end  INTO @close;

    SELECT max(dif) FROM futures_dif WHERE dif>=0 AND time>=@s_min AND time<=@s_max INTO @p_high;
    SELECT min(dif) FROM futures_dif WHERE dif>=0 AND time>=@s_min AND time<=@s_max INTO @p_low;

    SELECT max(dif) FROM futures_dif WHERE dif<0  AND time>=@s_min AND time<=@s_max INTO @n_low;
    SELECT min(dif) FROM futures_dif WHERE dif<0  AND time>=@s_min AND time<=@s_max INTO @n_high;

    IF (@p_high IS NOT NULL) AND (@p_low IS NOT NULL) THEN
        SELECT time%1000000 FROM futures_dif WHERE dif>=0 AND time>=@s_min AND time<=@s_max AND dif=@p_high LIMIT 1 INTO @t_p0;
        SELECT time%1000000 FROM futures_dif WHERE dif>=0 AND time>=@s_min AND time<=@s_max AND dif=@p_low  LIMIT 1 INTO @t_p1;
        SET @p_space = @p_high-@p_low;
    END IF;

    IF (@n_high IS NOT NULL) AND (@n_low IS NOT NULL) THEN
        SELECT time%1000000 FROM futures_dif WHERE dif<=0 AND time>=@s_min AND time<=@s_max AND dif=@n_high LIMIT 1 INTO @t_n0;
        SELECT time%1000000 FROM futures_dif WHERE dif<=0 AND time>=@s_min AND time<=@s_max AND dif=@n_low  LIMIT 1 INTO @t_n1;
        SET @n_space = @n_low-@n_high;
    END IF;

    INSERT INTO futures_day(day,open,close,p_high,p_low,n_high,n_low,t_p0,t_p1, t_n0,t_n1,p_space,n_space)
        VALUES (@day,@open,@close,@p_high,@p_low,@n_high,@n_low,@t_p0,@t_p1 ,@t_n0,@t_n1,@p_space,@n_space);
END //

call sp_diz();

        " > ${chao}.0.sql 
        mysql kts < ${chao}.0.sql
    done

    UTURES vega sel day
    return $?
}


function fn_vega_sel()
{
    case $1 in
    dif) 
        sqls="SELECT * FROM futures_dif ORDER by ${FIELD:-dif} ${iASC:-DESC} LIMIT ${LIMIT:-100}" 
        mysql -t kts <<< "${sqls}"
        ;;
    day) 
        sqls="SELECT * FROM futures_day"
        mysql -t kts <<< "${sqls}"
        ;;
    *)  echo "Usage: UTURES vega sel {day|dif}"

    esac
    xt_ret $? "" || return $?
}


function fn_vega_trd_tbl()
{
    [ -n "${1}" ]
    xt_ret $? "" || return $?
    echo "
    DROP TABLE IF EXISTS futures_${1};
    CREATE TABLE IF NOT EXISTS futures_${1} (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        type    CHAR(2),
        SNR     INT(8),
        tid     INT(10),
        time    INT(10),
        posi    INT(6),
        high    INT(6),
        low     INT(6),
        dif     INT(6),
        INDEX(SNR)
    );
    " | mysql kts
    
    return $?
}

function fn_vega_test()
{
    fn_vega_trd_tbl open
    fn_vega_trd_tbl shut
    fn_vega_trd_tbl posi 
    xt_ret $? "" || return $?

    echo "
delimiter //
DROP PROCEDURE IF EXISTS sp_diz //
CREATE PROCEDURE sp_diz() tag_proc:BEGIN
    SET @id = 30*12;
    SELECT max(id) FROM futures_dif INTO @len; 
    SET @len = 100000;

    WHILE @id <= @len DO
        SELECT count(*) FROM futures_posi INTO @len_posi;
        IF @len_posi>1 THEN
            SELECT 'error len_posi:', @len_posi; LEAVE tag_proc;
        END IF;

        SELECT dif,mid,top,std FROM futures_dif WHERE id=@id INTO @_dif,@mid,@top,@std;

        IF @len_posi=0 THEN     # open
            IF ( abs(@_dif)>=abs(@top) AND @std>=2.25 ) || 
                ( abs(@_dif)>=abs(@top) AND @std<2.25 AND abs(@_dif)-abs(@mid)+@std>8) THEN

               SELECT count(*) FROM futures_open INTO @len_open;
               INSERT INTO futures_posi(type,SNR,tid,time,posi,high,low,dif)
                   SELECT 'O',@len_open+1,@id,time,1,GREATEST(close,close2),LEAST(close,close2),abs(dif) FROM futures_dif WHERE id=@id;

               INSERT INTO futures_open(type,SNR,tid,time,posi,high,low,dif)
                   SELECT 'O',@len_open+1,@id,time,1,GREATEST(close,close2),LEAST(close,close2),abs(dif) FROM futures_dif WHERE id=@id;
            END IF;
        ELSE                    # shut
            SELECT dif FROM futures_open ORDER by SNR DESC LIMIT 1 INTO @open;
            IF @open-abs(@_dif)>=4
                # ( abs(@_dif)<=abs(@bot) AND @std>=2.25 ) # || 
               # ( abs(@_dif)<=abs(@bot) AND @std<2.25 AND @open-abs(@_dif)>=4) 
               THEN

               SELECT MAX(SNR) FROM futures_open INTO @SNR;
               INSERT INTO futures_shut(type,SNR,tid,time,posi,high,low,dif)
                   SELECT 'S',@SNR,@id,time,1,GREATEST(close,close2),LEAST(close,close2),abs(dif) FROM futures_dif WHERE id=@id;

               DELETE FROM futures_posi;
            END IF;
        END IF;

        SET @id = @id + 1;
    END WHILE;
END tag_proc //

call sp_diz();

    " > ${chao}.sql

    mysql kts <${chao}.sql
    xt_ret $? "" || return $?

    fn_echo_succ "open"
    mysql -t kts <<< "SELECT a.*,b.mid,b.top,b.bot,b.std FROM futures_open a, futures_dif b WHERE a.time=b.time"
    xt_ret $? "" || return $?

    fn_echo_succ "shut"
    mysql -t kts <<< "SELECT a.*,b.mid,b.top,b.bot,b.std FROM futures_shut a, futures_dif b WHERE a.time=b.time"
    xt_ret $? "" || return $?

    mysql -t kts <<< "SELECT a.*,b.mid,b.top,b.bot,b.std FROM futures_posi a, futures_dif b WHERE a.time=b.time"
    xt_ret $? "" || return $?
}

function fn_vega()
{
    case $1 in
   near) fn_vega_up  $1     ;;
    far) fn_vega_up  $1     ;;
    dif) fn_vega_dif $1     ;;
    sel) fn_vega_sel $2     ;;
    day) fn_vega_day $1     ;;      # 日K统计
   test) fn_vega_test $1    ;;      # 基于dif做回测
    *)  echo "Usage: UTURES vega {near|far|dif|day|sel|test}"
    esac
    
    return $?
}

function fn_main()
{
    cmdlist=(
    "up     {ls|d1|f5|q5|domi}                  # 数据更新"
    "nr     {ls|d1|f5|q5|f51}                   # 记录统计"
    "pro    {d1|q5}                             # Process"
    "ls                                         # SELECT list"
    "like   sym                                 # SELECT straddle"
    "leak   code                                # 补漏"
    "vega   {near|far|dif}                    # 补漏"
    )

    fn_set_END
    fn_execute "$@"
}

fn_main "$@"

# http://www.cnblogs.com/zhenjing/archive/2011/07/15/process_mutex_race.html
# 获取最大ID的记录
