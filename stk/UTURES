#! /bin/bash
. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_ls_0()
{
    sed -e "s/tag0/${1:0:1}/" \
        -e "s/tag1/${1:1:1}/" \
        -e "s/tag2/${1:2:1}/" .src/futures_ls.q > /10jqka/xRD.q
    xt_ret $? "" || return $?

    fn_bell xRD
    timeout 8 nc -l 2911
    xt_ret $? "xRD@${1} fail!" || return $?
}

function fn_d1_0()
{
    sed -e "s/tag0/${1:0:1}/" \
        -e "s/tag1/${1:1:1}/" \
        -e "s/tag2/${1:2:1}/" \
        -e "s/tag3/${1:3:1}/" \
        -e "s/tag4/${1:4:1}/" .src/xRD.q > /10jqka/xRD.q
    xt_ret $? "" || return $?

    if [ "${#1}" -eq 6 ]; then
        sed -i "s/tag5/${1:5:1}/" /10jqka/xRD.q
    else
        sed -i "/tag5/d" /10jqka/xRD.q
    fi
    
    > /Export/Table.txt
    fn_bell xRD
    timeout 8 nc -l 2911
    xt_ret $? "xRD@${1} fail!"  # Dont return _but_ try again below

    if [ `wc -l< /Export/Table.txt` -lt 125 ]; then
        fn_echo_fail "try $1 again"
        sed -i 's/266/1066/' /10jqka/xRD.q
        fn_bell xRD
        timeout 8 nc -l 2911
        xt_ret $? "xRD@${1} fail!" || return $?
    fi

    # iconv & add yesc
    iconv -f cp936 -t utf8 /Export/Table.txt    |
    tail -124                                   |
    sed -e '/时间/d'                            \
        -e 's/[,一二三四五]//g'                 \
        -e 's/  */\t/g'                         \
        -e 's/\t\t/\t/g'                        \
        -e 's///g'                            \
        -e '/^$/d'                              |
    awk -v code=$1 '{
        printf "%s\t%s\t%d\t%d\t%d\t%d\t%d\t%.2f\t%.2f\t%.2f\t%.2f\n",
        code,$1, yesc,$2,$3,$4,$5,$6,$7, $8/10000,$9/10000;
        yesc=$5
    }' |
    sed '1d' > ${fchao}

    echo "
--  DROP TABLE IF EXISTS futures_d1;
    CREATE TABLE IF NOT EXISTS futures_d1 (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    CHAR(8),
        date    DATE,
        yesc    INT(6),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        rise    DECIMAL(12,2) DEFAULT 0,
        chng    DECIMAL(12,2) DEFAULT 0,
        shou    DECIMAL(12,2) DEFAULT 0,
        amount  DECIMAL(12,2) DEFAULT 0,
        INDEX(code,date)
    );
    LOAD DATA LOCAL INFILE '${fchao}' INTO TABLE futures_d1(code,date,yesc,open,high,low,close,rise,chng,shou,amount);
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "update db@${1} succ!"
}

function fn_f5_0()
{
    sed -e "s/tag0/${1:0:1}/" \
        -e "s/tag1/${1:1:1}/" \
        -e "s/tag2/${1:2:1}/" \
        -e "s/tag3/${1:3:1}/" \
        -e "s/tag4/${1:4:1}/" .src/futures_f5.q > /10jqka/xRD.q
    xt_ret $? "" || return $?

    if [ "${#1}" -eq 6 ]; then
        sed -i "s/tag5/${1:5:1}/" /10jqka/xRD.q
    else
        sed -i "/tag5/d" /10jqka/xRD.q
    fi
    
    > /Export/Table.txt
    fn_bell xRD
    timeout 15 nc -l 2911
    xt_ret $? "xRD@${1} fail!"  # Dont return _but_ try again below

    # 4 16 64 256
    if [ `wc -l< /Export/Table.txt` -lt 280 ]; then
        fn_echo_fail "try $1 again"
        sed -i 's/366/2066/' /10jqka/xRD.q
        fn_bell xRD
        timeout 15 nc -l 2911
        xt_ret $? "xRD@${1} fail!" || return $?
    fi

    # iconv & add yesc
    iconv -f cp936 -t utf8 /Export/Table.txt    |
    tail -300                                   |
    sed -e '/时间/d'                            \
        -e 's/[,一二三四五]//g'                 \
        -e 's/  */\t/g'                         \
        -e 's/\t\t/\t/g'                        \
        -e 's///g'                            \
        -e '/^$/d'                              |
    awk -v code=$1 '{
        if (prev!=$1) {
            i=1
        } else {
            i++
        }
        prev=$1
        printf "%s\t%s\t%d\t%d\t%d\t%d\t%d\t%.2f\t%.2f\t%.2f\t%.2f\n",
        code,$1, i,$2,$3,$4,$5,$6,$7, $8/10000,$9/10000;
    }' > ${fchao}

    echo "
--  DROP TABLE IF EXISTS futures_f5;
    CREATE TABLE IF NOT EXISTS futures_f5 (
        id      int(6) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    CHAR(8),
        date    DATE,
        time    INT(4),
        open    INT(6),
        high    INT(6),
        low     INT(6),
        close   INT(6),
        rise    DECIMAL(12,2) DEFAULT 0,
        chng    DECIMAL(12,2) DEFAULT 0,
        shou    DECIMAL(12,2) DEFAULT 0,
        amount  DECIMAL(12,2) DEFAULT 0,
        INDEX(code,date)
    );
    LOAD DATA LOCAL INFILE '${fchao}' INTO TABLE futures_f5(code,date,time,open,high,low,close,rise,chng,shou,amount);
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "update db@${1} succ!"
}

function fn_up_ls()
{
   #if [ "${1}" != 'force' ] && ([ "${date_T//:/}" -lt 150000 ] || [ "${date_T//:/}" -gt 204500 ]); then
   #    read -p "Warning: Update at Trade Hours [Yes]?"
   #fi

    if [ "${date_T//:/}" -gt 203000 ]; then
        HMS='23:00:00'
    else
        HMS='15:00:00'
    fi

    tag_blank='--'

    > ${fchao} 
    for i in 714 715 716; do
        fn_ls_0 $i
        xt_ret $? "fn_ls_0" || return $?
        cat /Export/Table.txt >> ${fchao}
        iconv -f cp936 -t utf8 /Export/Table.txt | sed -e 's///g' -e '/名称/d' -e '/^$/d' | awk '{print $2}' > ${chao}.$i
        sleep .2
    done

    iconv -f cp936 -t utf8 ${fchao} > ${cache}
    cat ${cache} | 
        sed -e 's///g' -e '/名称/d' -e "/${tag_blank}/d" -e '/^$/d' |
        sed -e '/连续/d' -e '/主连/d' -e '/指数/d' |
        awk -v vdate=${END} -vvtime=${HMS} '{
            printf "%s\t%s\t%s\t%s\t%s\t%.2f\t%s\t%s\t%s\t%s\n", vdate,vtime,$1,$2,$3,$4/10000,$5,$6,$10,$11
        }'> ${buffer}

    echo "
    DROP TABLE IF EXISTS futures_ls;
    CREATE TABLE IF NOT EXISTS futures_ls (
        date    DATE,
        time    TIME,
        name    CHAR(16),
        code    CHAR(8),
        shou    INT(10),
        amount  DECIMAL(12,2) DEFAULT 0,
        posi    INT(12),
        yesc    INT(6),
        close   INT(6),
        chng    DECIMAL(12,2) DEFAULT 0,
        INDEX(code)
    );
    DELETE FROM futures_ls WHERE date='${END}' && time='${HMS}';
    LOAD DATA LOCAL INFILE '${buffer}' INTO TABLE futures_ls;
    " | mysql kts

    fn_se
    BEEPS=3 fn_beep
}

function fn_up_d1()
{
    tag_blank='--'

    sqls="SELECT code FROM futures_ls WHERE date='${END}' && time='15:00:00'" 
    sqls="${sqls} ORDER by ${FIELD:-amount} DESC LIMIT ${LIMIT:-12}"
    codes=`mysql -N kts <<<"${sqls}"`

    mysql kts <<<"DROP TABLE IF EXISTS futures_d1"
    xt_ret $? "" || return $?

    for i in ${codes}; do
        fn_d1_0 $i
        xt_ret $? "fn_d1_0" || return $?
        sleep .2
    done
    fn_echo_succ "up all succ!"
}

function fn_up_f5()
{
    tag_blank='--'

    sqls="SELECT code FROM futures_ls WHERE date='${END}' && time='15:00:00'" 
    sqls="${sqls} ORDER by ${FIELD:-amount} DESC LIMIT ${LIMIT:-12}"
    codes=`mysql -N kts <<<"${sqls}"`

    mysql kts <<<"DROP TABLE IF EXISTS futures_f5"
    xt_ret $? "" || return $?

    for i in ${codes}; do
        fn_f5_0 $i
        xt_ret $? "fn_f5_0" || return $?
        sleep .2
    done
    fn_echo_succ "up all succ!"
}

function fn_up()
{
    fchao='/tmp/kts/chao.utures'
    case $1 in
    ls) fn_up_ls ;;
    d1) fn_up_d1 ;;
    f5) fn_up_f5 ;;
    *)  echo "Usage: UTURES up {ls|d1|f5}"
    esac
}

function fn_se()
{
    sqls="SELECT *,ROUND(100*(close-yesc)/yesc, 2) as rise"
    sqls="${sqls} FROM futures_ls WHERE 1 ${COND} ORDER by ${FIELD:-amount} DESC LIMIT ${LIMIT:-24}" 
    fn_imysql_sqls
    fn_utao
}

function fn_nr()
{
    case $1 in
    ls) sqls="SELECT *,count(code) as cnt FROM futures_ls GROUP by code"; fn_imysql_sqls ;;
    d1) sqls="SELECT *,count(code) as cnt FROM futures_d1 GROUP by code"; fn_imysql_sqls ;;
    f5) sqls="SELECT *,count(code) as cnt FROM futures_f5 GROUP by code"; fn_imysql_sqls ;;
    *)  echo "Usage: UTURES nr {ls|d1|f5}" ;;
    esac
}

function fn_main()
{
    cmdlist=(
    "up {ls|d1|f5}                              # 数据更新"
    "nr {ls|d1|f5}                              # 记录统计"
    "se                                         # SELECT list"
    )

    fn_set_END
    fn_execute "$@"
}

fn_main "$@"

# http://www.cnblogs.com/zhenjing/archive/2011/07/15/process_mutex_race.html
# 获取最大ID的记录
