#! /bin/bash

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_dugu9jian()
{   # date1,date2,amount,open
    columns="off,avrg,close,turnov"
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    DATE2=`mysql -N kts <<< "SELECT date2 from ${tablex:-tbl_9jian} LIMIT 1"`

    echo ----- COND: $COND -----
    function fn_get_tbl_9jian_dive()
    {
        tbl_super_dive="
        DROP   TEMPORARY TABLE IF EXISTS day0;
        CREATE TEMPORARY TABLE day0 LIKE day;   
        INSERT INTO day0 SELECT * FROM day WHERE date='${DATE2}';  

        SELECT t.code,  DATE_FORMAT(date1,'%m-%d') as start, 
                        DATE_FORMAT(date2,'%m-%d') as end, ${columns}, c.nmc, chng, 
                        round(100*(d.yesc-d.low)/d.yesc,2) as down,
                        round(100*(d.close-d.low)/d.yesc,2) as up,
                        round(100*(t.low-avrg)/avrg,2) as lchng, 
                        round(100*(t.close-avrg)/avrg,2) as wchng, c.name 
           FROM ${tablex:-tbl_9jian} as t, cap as c, day0 as d
           WHERE t.code = c.code and t.code = d.code HAVING 1 ${COND} 
           ORDER by ${1:-lchng} ${ASC:-asc} limit ${LIMIT:-36}     # COND='nmc<150000 and lchng<-9.7 and off<14'
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_9jian_dive $1

    mysql -N kts <<<"${tbl_super_dive}" | grep -v -f ${exclude} > ${windout}

    nr=`cat ${windout} | wc -l`
    if [ "${nr}" -ge 1 ] ; then
        # close 360安全卫士
        # D:; cd D:\tools\VLC
        # for /l %i in (1,1,100) do echo %i && netcat -l -p 1234 && vlc.exe o23.mp4
        timeout 3 nc 192.168.2.49 1234 <<< "ooh my god"
        cat ${windout}
        wall -n <<< "Got ${nr} from 9jian" 2>/dev/null
    fi
}

function fn_9jian()
{
    while :; do
        FINA=1 up 4
        TBL=${TBL:-windbell_codes} SCREENER 0 || up wb
        SELECT dugu9jian wchng
        # COND='and wchng<-10.5 and up>.3' fn_dugu9jian
        COND='and wchng<-12.48 or (wchng<-12 and up>.1)' fn_dugu9jian

        bigger=`LIMIT=1 COND='wchng<-10' SELECT 0 wchng | grep -v -f ${exclude} | grep '| code' | wc -l`
        [ "${bigger}" -gt 0 ] && secs=60 || secs=180
        echo ------------ sleep ${secs} -----------
        sleep ${secs}
    done
}

function fn_acf()
{
    file=${1:-'.soptter.trade'}
    grep -v '^#' ${file} |
    while read code symble op gate nmc_ratio; do
        # echo ${op} ${gate}

        LIMIT=3 PPLUS=0 SCREENER acf ${code}

        [ -z "${gate}" ] && continue
        sqls="SELECT round(100*(cdiff+rdiff+wchng-${gate}), 0) as fire FROM tbl_acfdiff LIMIT 1"
        fire=`mysql -N kts <<<"${sqls}"`
        sqls="SELECT cdiff+rdiff+wchng FROM tbl_acfdiff LIMIT 1"
        bill=`mysql -N kts <<<"${sqls}"`

        if [ ${op} = ">" ] && [ "${fire:-0}" -ge 0 ]; then  
            wall -n <<< "code ${code} got [ ${bill} ${op} ${gate} ]" 2>/dev/null
        fi
        if [ ${op} = "<" ] && [ "${fire:-0}" -le 0 ]; then
            wall -n <<< "code ${code} got [ ${bill} ${op} ${gate} ]" 2>/dev/null
        fi
    done 
    return $?
}

function fn_fenbi0()
{
    file=${1:-'.soptter.trade'}
    codes=(`cat ${file}|awk '/^[^#]/{print $1}' | xargs`)
    local i=
    for i in ${codes[@]}; do
        [[ ${i} =~ ^[036].* ]] || { echo "ignore code ${i}"; continue ;}
        fenbi ${i}
        xt_ret $? "down ${i} error" || return $?
    done

    fn_acf $1
}

function fn_fenbi()
{
    while :; do
        hhmmss=`date +%H%M%S`
        minute=30${hhmmss:0:4}  # 30 = 2 * 3 * 5 * 10, for 09pm error

        if  [ "${hhmmss}" -lt 092500 ] || 
            [ "${hhmmss}" -gt 150000 ] ||
           ([ "${hhmmss}" -gt 113000 ] && [ "${hhmmss}" -lt 130000 ]); then
            echo rest time `date +%T`
            sleep 120
            continue
        fi
        
        per_minute=3            # fenbi 以5min为单位，连续3个5min数据才形成条件
        let got=${minute}%${per_minute}
        if [ "${got}" -eq 0 ]; then
            fn_fenbi0
            sleep 30
        else
            echo patrol@HHMM: ${hhmmss:0:4}%${per_minute}
        fi
        sleep 30  # 30 seconds
    done
    fn_fenbi0
    return $?
}

function fn_main()
{
    case $1 in
    9|9jian)
        fn_9jian
        ;;
    a|acf)
        fn_acf ${@:2}
        ;;
    f|fenbi)
        fn_fenbi ${@:2}
        ;;
    f0|fenbi0)
        fn_fenbi0 ${@:2}
        ;;
    *)
        echo "Usage: $0 {a|acf}"
        echo "       $0 {9|9jian}"
        echo "       $0 {f|fenbi|f0|fenbi0}"
        ;;
    esac
}
fn_main ${@}
