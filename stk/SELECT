#! /bin/bash
. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_ls()
{
    [ $# -eq "0" ] && fn_execute -l && exit

    if fn_is_digit $1; then
        code=$1
    else
        local shmout=$SHMPATH/shmout
        local index=1
        echo "google  $1 ..."
        google $1 | tee $shmout
        [ 0 -ne  "${PIPESTATUS[0]}" ] && echo google fail && exit 1

        lines=`cat $shmout | grep '^[603]' | wc -l`
        [ 0 -eq "$lines" ] && echo "Error: no symbol $1 found" && exit
        if [ 1 -eq "$lines" ]; then
            code=`awk '/^[603]/{print $1}' $shmout`
            echo $code
        else
            while :; do
                cat -n $shmout
                read -p "    Please input index[1]:" index
                [ "${index:=1}" -le $lines ] && let index-- && break
            done
            codes=(`awk '{print $1}' $shmout`)
            code=${codes[$index]}
        fi
    fi

    fields='d.code,d.date,d.yesc,d.open,d.high,d.low,d.close,d.volume,d.amount'
    echo "
    SELECT nmc/close FROM cap WHERE code=${code} LIMIT 1 INTO @shares0;
    SELECT * FROM (
        SELECT $fields, $SWING as swing, $RISE as rise, $TURNOV0 as turnover
        FROM day as d
        WHERE d.code = ${code} and d.date <= '${END}'
        ${COND} ORDER by date DESC limit ${LIMIT:-13}
    ) as tbl ORDER by date ASC;
	" | mysql -t kts
}

function fn_get_open_days()
{
    # 统计13日下跌 配合 SCREENER 3 做相应选股
    if [ -z "${2}" ] ; then
        mysql -N kts <<< "SELECT date from day WHERE code = 900001 " | tail -${1:-13}
    else
        mysql -N kts <<< "SELECT date from day WHERE code = 900001 " | tail -${1:-13} | tac | cat -n
    fi
}

function fn_get_open_days_min()
{
    mysql -N kts <<< "SELECT DISTINCT(date) from min WHERE (code<3 OR code=5)" | tail -${LIMIT:-48}
}


function fn_app_nmc_name()
{
    # 考虑把$1作为排序关键字
    # comment columns="" to assign *
    # columns="code,rise,sink,bounce,turnover,amount"
    columns=${columns:-'*'}
    columns=d.${columns//,/,d.}

    field=${1:+d.${1}}
    field=${field:-c.nmc}
    # echo $columns && exit

    echo "
    SELECT $columns, c.nmc,c.name FROM ${TBL:-tbl_visit} as d, cap as c
        WHERE d.code = c.code ORDER by ${field} ${ASC} limit ${LIMIT:-48};
	" | mysql $mo -t kts
}


function fn_app_wgt_turnov()
{
    rally='round(100*(trade-low)/low,2)'
    dcost='round(100*(trade-avrg)/avrg,2)'
    # 高换手(流动性)、超跌、加权
    function fn_get_tbl_super_dive()
    {
        tbl_super_dive="
        SELECT $columns, ${rally} as rally, ${dcost} as dcost,
            $wgt as wgt, c.nmc, c.name
            FROM tbl_sink as d, cap as c
            WHERE d.code = c.code and sum>20 and swing<-10 HAVING wgt>50 ${COND}
            ORDER by ${field} ${ASC:-desc} limit ${LIMIT:-30}
        "
        echo "${tbl_super_dive}"
    }

    # commnet below to display column id
    #olumns=code,swing,rise,sink,sum,net,rally,date_low,date_high
    columns=code,swing,sum,net,date_low,date_high,avrg
    columns=${columns:-'*'}
    columns=d.${columns//,/,d.}

    # swing ~= 30, sum(13) ~= 130  流动性*.4 以拉到 100 这个范围
    # wgt="(swing-sum*.4)"
    wgt="(sum-net)"
    field=${1:-wgt}

    # 预筛选:高换手 SELECT get_vol_rat_152468 --> get_ma513
    COND=${TBL:+and code in (SELECT code FROM $TBL) }${COND}

    echo ----- COND: $COND -----

    fn_get_tbl_super_dive
    mysql $mo -t kts <<< "${tbl_super_dive}"
    xt_ret $? "${FUNCNAME}" || return $?

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    LIMIT=128 fn_get_tbl_super_dive
    mysql -N kts <<<"SELECT code FROM (${tbl_super_dive}) as tbl" > .soptter.chao 
    TBL=chao up 7 .soptter.chao
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_ls_day_ob_rise()
{
    # where d.code = c.code 非常重要，不重叠的filed不需要加‘tbl_name.’
    # as 语句可在 FROM 子句中
    # field=${1:+d.${1}}
    field=${1:-rise}
    disfield="d.code,d.date,d.volume,d.amount"
    
    echo ----- COND: $HAVING -----

    echo "
    SELECT $disfield, $RISE as rise, $TURNOV as turnover, c.nmc, c.name
            FROM day as d,cap as c where d.code = c.code and
            d.date = '$tailday' ${HAVING} ORDER BY ${field} ${ASC:-desc} limit ${LIMIT:-24};
	" | mysql -t kts
}

function fn_get_comma_cloumns()
{
    # code,date,yesc,open,high,low,close,volume,amount
    # echo "SELECT * FROM ${1:-day} limit 1" | mysql kts  | head -1  | tr '\t' ','
    mysql kts -N<<<"DESCRIBE ${1:-day};" | awk '{printf "%s,", $1} END{printf "\n"}' | sed 's/,$//g'
}

function fn_get_vol_rat_152468()
{
    function fn_build_sqls() {
    sqls="
    SELECT d.code,d.date,d.yesc,d.open,d.high,d.low,d.close,
        round(100*(d.close-d.yesc)/d.yesc,2) as rise, 
        ${rat15} as rat15, 
        ${rat24} as rat24, 
        ${rat68} as rat68,
        c.name FROM tbl_ma513 as ma, ${tbl_day} as d, cap as c
        WHERE ma.code=d.code and ma.code=c.code HAVING 1 ${COND} ORDER by ${field} DESC limit ${LIMIT:-24}" 
    }
    field=${1:-rat15}
    SCALE=`fn_get_ratio_close2open`
    rat15="round(5*d.volume/ma.vol5*${SCALE},2)"
    rat24="round(2*(d.volume*${SCALE}+ma.vol)/(ma.vol5-ma.vol),2)"
    rat68="round((8/6)*(d.volume*${SCALE}+ma.vol5)/(ma.vol13-ma.vol5),2)"

    ./SCREENER get_ma513 ${PREV}
    xt_ret $? "${FUNCNAME}" || return $?

    tbl_day="(SELECT * FROM day WHERE date='${END}')"
    fn_build_sqls
    echo "$sqls" | tee /dev/stderr | mysql -t kts

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    field=rat15 fn_build_sqls
    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > ${soptter_zxg} 
    TBL=zxg up 7 ${soptter_zxg}
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_sel_tbl_sink_where()
{
    # SELECT * FROM tbl_sink WHERE code in (SELECT code FROM zxg_chao513); 
    echo
}

function fn_get_ma513()
{
    # read -p "U've done [SCREENER 2]?"
    SCALE=`fn_get_ratio_close2open`
    columns=code,close,ma5,ma13,vol,vol5,vol13
    columns=t.${columns//,/,t.}
    sqls="
    SELECT ${columns}, 
    round(100*vol5/(c.nmc/c.close),2) as tov5, 
    round(100*vol13/(c.nmc/c.close),2) as tov13, 
    round(${SCALE}*4*vol/(vol5-vol),2) as ratio,
    c.nmc, c.name
    FROM tbl_ma513 as t, cap as c WHERE t.code=c.code HAVING 1 ${COND}
    ORDER by ${1:-tov5} ${ASC:-DESC} LIMIT ${LIMIT:-24}
    " 
    echo "${sqls}" | tee /dev/stderr | mysql $mo -t kts

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > .soptter.chao 
    TBL=chao up 7 .soptter.chao
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_stat_change()
{
    START=`./SELECT get_open_days ${1:-13} | head -1`

    echo "
    From ${START} to ${END}...
    "

    cd $workdir
    > $mps_god
    head -n -5 $mps_org >> $mps_god

    echo "
    SET @START='$START';
    SET @END='$END';
    call sp_stat_change();
    SELECT * FROM tbl_stat_change;
    " | tee /dev/stderr >> $mps_god

    mysql $mo -t kts <<< "source $mps_god"

    return
}

function fn_6maishenjian()
{   # date1,date2,amount,
    columns="off,open,close,turnov"
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    DATE2=${END}

    echo ----- COND: $COND -----
    function fn_get_tbl_6jian_dive()
    {
        tbl_super_dive="
        SELECT t.code, DATE_FORMAT(date1,'%m-%d') as start, 
                       DATE_FORMAT(date2,'%m-%d') as end, ${columns}, c.nmc, chng, 
                       round(100*(t.low  - avrg)/avrg,2) as lchng, 
                       round(100*(t.close- avrg)/avrg,2) as wchng, 
                       round(100*(d.close- avrg)/avrg,2) as down, 
                       round(100*(d.close-t.low)/avrg,2) as up, 
                       c.name 
            FROM ${tablex:-tbl_6mai} as t, cap as c, (SELECT * from day where date='${DATE2}') as d
            WHERE t.code = c.code and t.code = d.code HAVING 1 ${COND} 
            ORDER by ${1:-wchng} ${ASC:-asc} limit ${LIMIT:-36}     # COND='nmc<250000 and lchng<-9.7 and off<21'
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_6jian_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}"
    xt_ret $? "${FUNCNAME}" || return $?
    
    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    fn_get_tbl_6jian_dive $1 > /dev/null
    mysql -N kts <<<"SELECT code FROM (${tbl_super_dive}) as tbl" > .soptter.chao 
    TBL=chao up 7 .soptter.chao

    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_dugu9jian()
{   # date1,date2,amount,open
    columns="off,avrg,close,turnov"
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    DATE2=`mysql -N kts <<< "SELECT date2 from ${tablex:-tbl_9jian} LIMIT 1"`

    echo ----- COND: $COND -----
    function fn_get_tbl_9jian_dive()
    {
        tbl_super_dive="
        SELECT t.code,  DATE_FORMAT(date1,'%m-%d') as start, 
                        DATE_FORMAT(date2,'%m-%d') as end, ${columns}, c.nmc, chng, 
                        round(100*(d.yesc-d.low)/d.yesc,2) as down,
                        round(100*(d.close-d.low)/d.yesc,2) as up,
                        round(100*(t.low-avrg)/avrg,2) as lchng, 
                        round(100*(t.close-avrg)/avrg,2) as wchng, c.name 
           FROM ${tablex:-tbl_9jian} as t, cap as c, (SELECT * from day where date='${DATE2}') as d
           WHERE t.code = c.code and t.code = d.code HAVING 1 ${COND} 
           ORDER by ${1:-lchng} ${ASC:-asc} limit ${LIMIT:-24}      # COND='nmc<250000 and lchng<-9.7 and off<21' 
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_9jian_dive $1
    mysql ${mo:-'-t'} kts <<< "${tbl_super_dive}" | grep -v -f .soptter.exclude
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
    
    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    fn_get_tbl_9jian_dive $1 > /dev/null
    mysql -N kts <<<"SELECT code FROM (${tbl_super_dive}) as tbl" > .soptter.chao 
    TBL=chao up 7 .soptter.chao

    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_taox_ratio()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,off_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_taox_dive()
    {
        tbl_super_dive="
        SELECT t.code,  ${columns}, c.nmc,c.name 
           FROM ${tablex:-tbl_taox} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} 
           ORDER by ${1:-ratio} ${ASC:-asc} limit ${LIMIT:-24}
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_taox_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" |\
        sed -e '1,3s/----+$/\+/g' -e '$s/----+$/\+/g' -e '2s/    |$/|/g'
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
}

function fn_tao5()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,off_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_tao5_dive()
    {
        tbl_super_dive="
        SELECT t.code, ${columns}, c.nmc,c.name 
           FROM ${tablex:-tbl_tao5} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} limit ${LIMIT:-144}
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_tao5_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" |\
        sed -e '1,3s/----+$/\+/g' -e '$s/----+$/\+/g' -e '2s/    |$/|/g'
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
}

function fn_rdiff()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng,rdiff,dbrat
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_rdiff_dive()
    {
        tbl_super_dive="
        SELECT t.id, t.code,
           ${columns}
           FROM ${tablex:-tbl_rdiff} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} limit ${LIMIT:-144}
        "
        # echo "${tbl_super_dive}"
        fn_name `mysql -N kts <<<"SELECT code FROM ${tablex:-tbl_rdiff} LIMIT 1"`
    }

    fn_get_tbl_rdiff_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" 
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_acc() { tablex=tbl_adiff fn_rdiff; }

function fn_pma()
{
    fn_iscode $1
    xt_ret $? "" || return $?

    END=${END:-`fn_maxdate`}
    NUM=${NUM:=5}
    let DBL=${NUM}*2

    # enable d2，则tov扩大10倍
    echo "
    SELECT close FROM day WHERE code=$1 and date='$END' INTO @iclose;
    SELECT d.code, '${END}' as date, sum(d.amount)/sum(d.volume) as ma${NUM}, @iclose,
        round(100 * (@iclose-sum(d.amount)/sum(d.volume))/@iclose, 2) as pcnt,
        round(100*sum(d.volume)/cap.shares, 2) as tov${NUM}
        -- , round(100*sum(d2.volume)/cap.shares, 2) as tov${DBL} 
        FROM 
        (SELECT * FROM day WHERE code=$1 and date<='$END' ORDER by date DESC LIMIT ${NUM}) as d,
        -- (SELECT * FROM day WHERE code=$1 and date<='$END' ORDER by date DESC LIMIT ${DBL}) as d2,
        cap WHERE d.code = cap.code ;
    " | mysql -t kts
    # SELECT sum((high-yesc)/yesc) FROM day WHERE code = 2 and date > '2014-11-03'; 
    return $?
}

function fn_name()
{
    fn_iscode ${code:=${1}}
    xt_ret $? "Usage: name code" || exit $?

    echo "SELECT code, 
            TRUNCATE(nmc/10000, 1) as nmc, 
            -- TRUNCATE(shares/10000,2) as shares, 
            name FROM cap WHERE code=${code}
    " | mysql kts
    xt_ret $? "" || return $?
}

function fn_fbi()
{
    # code,datetime_p,datetime_c,
    columns='off_p,off_c,tnov_c,avrg_p,avrg_c,ratio,rdiff,wchng,dbrat'

    fn_name `mysql -N kts <<<"SELECT code FROM ${tablex:-tbl_fdiff} LIMIT 1"`
    echo "
        SELECT id,code, 
        -- datetime_p, 
        TRUNCATE(datetime_p%(1000000000000)/1000000,4) as dt_p,
        -- datetime_c, 
        TRUNCATE(datetime_c%(1000000000000)/1000000,4) as dt_c,
        ${columns} FROM ${tablex:-tbl_fdiff} 
    " | mysql -t kts
}


function fn_acf() { tablex=tbl_acfdiff fn_fbi; }

function fn_vol()
{
    echo "
    SELECT date, sum(volume), sum(amount), sum(amount)/sum(volume) as trade 
        FROM day WHERE date<='${END}' 
        GROUP by date 
        ORDER by date DESC
        LIMIT ${LIMIT:-13};
    " | mysql -t kts

    return $?
}

function fn_main()
{
    # mysql CURRENT_DATE();
    CURR=`fn_maxdate`
    END=${END:-${CURR}}
    PREV=`fn_get_prev`

    cmdlist=(
    "dugu9jian          [sortfiled]          # nine sword"
    "6maishenjian       [sortfiled]          # #{END} to specify diff-day"
    "taox_ratio         [sortfiled]          # taoxian"
    "get_open_days      [LIMIT:-13 [desc]]   # 开市日列表"
    "app_wgt_turnov     [sortfiled]          # 追加weight到down_turnov CHAO=1则进zxg"
    "get_comma_cloumns  [tbl_name:-day]      # 逗分列名"
    "sel_tbl_sink_where [TBL:-zxg_chao513]   # chao ..."
    "get_vol_rat_152468 [sortfiled:-ratio]   # 量比排名"
    "get_ma513          [sortfiled:tov5]     # 换手率[tov5]排名"
    "get_open_days_min                       # 分钟日列表 \$LIMIT"
    "app_nmc_name       [sortfiled]          # 追加股票名到表TBL"
    # ----------------  ABOVE IS FIXED SEQUENCE --------------------
    "stat_change        LIMIT:-13            # 近期涨跌统计"
    "ls                 {code|symbol}        # 日线数据 \$LIMIT"
    "name               code                 # 名"
    "vol                code                 # DP成交"
    "ls_day_ob_rise     [sortfiled]          # --- END 涨幅排名 \$LIMIT"
    "pma                code                 # NUM=5日平均"
    "fbi                                     # tbl_fbi"
    "acc                                     # tbl_adiff"
    "acf                                     # tbl_adiff"
    "tao5                                    # "
    "rdiff                                   # tbl_rdiff"
    )

    tailday=`fn_maxdate`
    tailday=${END:-$tailday}

    # `ASC=任意值`时使用'DESC'，弃用
    # ASC=${ASC:+'DESC'}  # ASC=${ASC:-'ASC'}
    # ASC=${ASC:-'ASC'}
    fn_execute "$@"
}

fn_main "$@"

# http://www.cnblogs.com/zhenjing/archive/2011/07/15/process_mutex_race.html
# 获取最大ID的记录

