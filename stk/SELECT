#! /bin/bash
. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_ls()
{
    [ $# -eq "0" ] && fn_execute -l && exit

    if fn_isdigit $1; then
        code=$1
    else
        local shmout=$SHMPATH/shmout
        local index=1
        echo "google  $1 ..."
        google $1 | tee $shmout
        [ 0 -ne  "${PIPESTATUS[0]}" ] && echo google fail && exit 1

        lines=`cat $shmout | grep '^[603]' | wc -l`
        [ 0 -eq "$lines" ] && echo "Error: no symbol $1 found" && exit
        if [ 1 -eq "$lines" ]; then
            code=`awk '/^[603]/{print $1}' $shmout`
            echo $code
        else
            while :; do
                cat -n $shmout
                read -p "    Please input index[1]:" index
                [ "${index:=1}" -le $lines ] && let index-- && break
            done
            codes=(`awk '{print $1}' $shmout`)
            code=${codes[$index]}
        fi
    fi

    fields='d.code,d.date,d.yesc,d.open,d.high,d.low,d.close,d.volume,d.amount'
    echo "
    SELECT nmc/close FROM cap WHERE code=${code} LIMIT 1 INTO @shares0;
    SELECT * FROM (
        SELECT $fields, $PEAK as peak, $TROUGH as trough, $RISE as rise, $TURNOV0 as turnover
        FROM day as d
        WHERE d.code = ${code} and d.date <= '${END}'
        ${COND} ORDER by date DESC limit ${LIMIT:-13}
    ) as tbl ORDER by date ASC;
	" | mysql -t kts
}

function fn_get_open_days()
{
    # 统计13日下跌 配合 SCREENER 3 做相应选股
    if [ -z "${2}" ] ; then
        mysql -N kts <<< "SELECT date from day WHERE code = 900001 " | tail -${1:-13}
    else
        mysql -N kts <<< "SELECT date from day WHERE code = 900001 " | tail -${1:-13} | tac | cat -n
    fi
}

function fn_lsd()
{
    # where d.code = c.code 非常重要，不重叠的filed不需要加‘tbl_name.’
    columns="code,yesc,open,close"
    columns=${columns:-'*'}
    columns=d.${columns//,/,d.}

    fn_yist 
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----

    function fn_sql()
    {
        sqls="
        SELECT $columns, volume,amount, $RISE as rise, $TURNOV as tov, c.nmc, c.name
                FROM day as d,cap as c where d.code = c.code and d.date = '${END}' 
                HAVING 1 ${COND} ${inLIST} ORDER BY ${1:-rise} ${ASC:-desc} limit ${LIMIT:-60}
        " 
        #echo ${sqls}
    }
    fn_sql $@ 
    mysql -t kts <<<"${sqls}"

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > $file_c 
    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_get_comma_cloumns()
{
    # code,date,yesc,open,high,low,close,volume,amount
    # echo "SELECT * FROM ${1:-day} limit 1" | mysql kts  | head -1  | tr '\t' ','
    mysql kts -N<<<"DESCRIBE ${1:-day};" | awk '{printf "%s,", $1} END{printf "\n"}' | sed 's/,$//g'
}

function fn_rat()
{
    # 0. Make sure U've done [up 4]?
    # 1. 自动处理生成 tbl_mavol5B25
    # 2. 使用多表tbl_mavol5B25 tbl_day`联合查询`得到数据
    function fn_build_sqls() {
    sqls="
    SELECT d.code,DATE_FORMAT(d.date,'%m-%d')as date,d.yesc,d.open,d.close,
        round(100*(d.close-d.yesc)/d.yesc,2) as rise, 
        ${tov} as tov, 
        ${tov5} as tov5,
        ${tov13}as tov13,
        ${v1v5} as v1v5, 
        ${v5v8} as v5v8,
        ${vBvX} as vBvX, 
        c.name FROM tbl_mavol5B25 as ma, 
        ${tbl_day} as d, cap as c
        WHERE ma.code=d.code and ma.code=c.code HAVING 1 ${COND} ORDER by ${field} DESC limit ${LIMIT:-24}" 
    }
    field=${1:-v1v5}
    SCALE=`fn_get_ratio_close2open`

    # 以PREV为标，盘中只需要更新一次 tbl_mavol5B25
    tov="round(100*(d.volume)/(c.nmc/c.close),2)"
    tov5="round(100*(ma.vol5)/(c.nmc/c.close),2)"
    tov13="round(100*(ma.vol13)/(c.nmc/c.close),2)"
    tov25="round(100*(ma.vol25)/(c.nmc/c.close),2)"
    v1v5="round(5*d.volume*${SCALE}/(ma.vol5),2)"       
    v5v8="round(8*ma.vol5/(ma.vol13-ma.vol5)/5,2)"
    vBvX="round(12*ma.vol13/(ma.vol25-ma.vol13)/12,2)"

    TBL=${TBL:-cap} END=${PREV} ./SCREENER tov 
    xt_ret $? "${FUNCNAME}" || return $?

    fn_yist
    tbl_day="(SELECT * FROM day WHERE date='${END}' ${inLIST})"
    fn_build_sqls
    echo "$sqls">/dev/stderr 
    mysql -t kts<<<"$sqls"

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > $file_c 
    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_wma()
{
    # 1. Make sure U've done [SCREENER 2]?
    # 2. 使用单表tbl_mavol5B25作差得到数据
    SCALE=`fn_get_ratio_close2open`
    columns=code,close,ma5,ma13,ma25
    columns=t.${columns//,/,t.}
    sqls="
    SELECT ${columns},
    round(100*vol  /(c.nmc/c.close),2) as tov, 
    round(100*vol5 /(c.nmc/c.close),2) as tov5, 
    round(100*vol13/(c.nmc/c.close),2) as tov13, 
    round(100*vol25/(c.nmc/c.close),2) as tov25, 
    round(4*${SCALE}*vol/(vol5-vol),2)  as v1v4,
    round(2*(vol5-vol)/(vol13-vol5),2)  as v4v8,
    round((vol13-vol)/(vol25-vol13),2)  as vXvX,
    c.nmc, c.name
    FROM tbl_mavol5B25 as t, cap as c WHERE t.code=c.code HAVING 1 ${COND}
    ORDER by ${1:-tov5} ${ASC:-DESC} LIMIT ${LIMIT:-24}
    " 
    echo "${sqls}" | tee /dev/stderr | mysql $mo -t kts

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > $file_c 
    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_updown()
{
    START=`./SELECT get_open_days ${1:-13} | head -1`

    echo "
    From ${START} to ${END}...
    "

    cd $workdir
    > $mps_god
    head -n -5 $mps_org >> $mps_god

    echo "
    SET @START='$START';
    SET @END='$END';
    call sp_stat_change();
    SELECT * FROM tbl_stat_change ORDER by ${field:-date} ${ASC:-ASC};
    " | tee /dev/stderr >> $mps_god

    mysql $mo -t kts <<< "source $mps_god"

    return
}

function fn_6maishenjian()
{   # date1,date2,amount,
    columns="off,open,close,turnov"
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    DATE2=${DATE2:-${END}}
    [ -s "${exclude1}" ] && EXCLUDE="and code not in (`cat ${exclude1}`)"

    echo ----- COND: $COND -----
    function fn_get_tbl_6jian_dive()
    {
        tempday="
        CREATE TEMPORARY TABLE tempday LIKE day;
        INSERT INTO tempday SELECT * from day where date='${DATE2}';
        "
        tbl_super_dive="
        SELECT t.code, DATE_FORMAT(date1,'%m-%d') as start, 
                       DATE_FORMAT(date2,'%m-%d') as end, ${columns}, c.nmc, chng, 
                       round(100*(t.low  - avrg)/avrg,2) as lchng, 
                       round(100*(t.close- avrg)/avrg,2) as wchng, 
                       round(100*(d.close- avrg)/avrg,2) as avrg_up, 
                       round(100*(d.close-(t.close+t.low)/2)/avrg,2) as trough_up, 
                       round((avrg-d.close)/(d.close-(t.close+t.low)/2),2) as odds, 
                       c.name 
            FROM ${tablex:-tbl_6mai} as t, cap as c, tempday as d
            WHERE t.code = c.code and t.code = d.code HAVING 1 ${COND} ${EXCLUDE}
            ORDER by ${1:-wchng} ${ASC:-asc} limit ${LIMIT:-36}     # COND='nmc<250000 and lchng<-9.7 and off<21'
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_6jian_dive $1
    mysql $mo -t kts <<< "${tempday}${tbl_super_dive}"
    xt_ret $? "${FUNCNAME}" || return $?
    
    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"${tempday}SELECT code FROM (${tbl_super_dive}) as tbl" > $file_c 
    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_dugu9jian()
{   # date1,date2,amount,open
    columns="off,avrg,close,turnov"
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    DATE2=`mysql -N kts <<< "SELECT date2 from ${tablex:-tbl_9jian} LIMIT 1"`
    [ -s "${exclude0}" ] && EXCLUDE="and code not in (`cat ${exclude0}`)"

    echo ----- COND: $COND -----
    function fn_get_tbl_9jian_dive()
    {
        tempday="
        CREATE TEMPORARY TABLE tempday LIKE day;
        INSERT INTO tempday SELECT * from day where date='${DATE2}';
        "
        tbl_super_dive="
        SELECT t.code,  DATE_FORMAT(date1,'%m-%d') as start, 
                        DATE_FORMAT(date2,'%m-%d') as end, ${columns}, c.nmc, chng, 
                        $RISE as rise, 
                        $PEAK as peak, 
                        $TROUGH as trough,
                        round(100*(t.low-avrg)/avrg,2) as lchng, 
                        round(100*(t.close-avrg)/avrg,2) as wchng, c.name 
           FROM ${tablex:-tbl_9jian} as t, cap as c, tempday as d
           WHERE t.code = c.code and t.code = d.code HAVING 1 ${COND} ${EXCLUDE}
           ORDER by ${1:-lchng} ${ASC:-asc} limit ${LIMIT:-36}      # COND='nmc<250000 and lchng<-9.7 and off<21' 
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_9jian_dive $1
    mysql ${mo:-'-t'} kts <<< "${tempday}${tbl_super_dive}"
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
    
    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"${tempday}SELECT code FROM (${tbl_super_dive}) as tbl" > $file_c 
    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_tao5()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,off_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_tao5_dive()
    {
        tbl_super_dive="
        SELECT t.code, ${columns}, c.nmc,c.name 
           FROM ${tablex:-tbl_tao5} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} limit ${LIMIT:-144}
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_tao5_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" |\
        sed -e '1,3s/----+$/\+/g' -e '$s/----+$/\+/g' -e '2s/    |$/|/g'
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
}

function fn_rdiff()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio,dbrat
    columns=date_p,date_c,off_p,off_c,tnov_c,close,avrg_p,avrg_c,ratio,cdiff,rdiff,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_rdiff_dive()
    {
        tbl_super_dive="
        SELECT t.id,t.code,
        ${columns}, (wchng+2*rdiff+3*cdiff) as fire
           -- , c.nmc, c.name
           FROM ${tablex:-tbl_rdiff} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} limit ${LIMIT:-144}
        "
        # echo "${tbl_super_dive}"
        fn_name `mysql -N kts <<<"SELECT code FROM ${tablex:-tbl_rdiff} LIMIT 1"`
    }

    fn_get_tbl_rdiff_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" 
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_acc() { tablex=tbl_adiff fn_rdiff; }

function fn_pma()
{
    fn_iscode $1
    xt_ret $? "" || return $?

    END=${END:-`fn_maxdate`}
    NUM=${NUM:=5}

    # enable d2，则tov扩大10倍
    echo "
    SELECT close FROM day WHERE code=$1 and date='$END' INTO @iclose;
    SELECT d.code, '${END}' as date, sum(d.amount)/sum(d.volume) as ma${NUM}, @iclose,
        round(100 * (@iclose-sum(d.amount)/sum(d.volume))/@iclose, 2) as pcnt,
        round(100*sum(d.volume)/cap.shares, 2) as tov${NUM}
        FROM 
        (SELECT * FROM day WHERE code=$1 and date<='$END' ORDER by date DESC LIMIT ${NUM}) as d,
        cap WHERE d.code = cap.code ;
    " | mysql -t kts
    # SELECT sum((high-yesc)/yesc) FROM day WHERE code = 2 and date > '2014-11-03'; 
    return $?
}

function fn_name()
{
    fn_iscode ${code:=${1}}
    xt_ret $? "Usage: name code" || exit $?

    echo "SELECT code, 
            TRUNCATE(nmc/10000, 1) as nmc, 
            -- TRUNCATE(shares/10000,2) as shares, 
            name FROM cap WHERE code=${code}
    " | mysql kts
    xt_ret $? "" || return $?
}

function fn_fbi()
{
    # code,datetime_p,datetime_c,dbrat
    columns='off_p,off_c,tnov_c,close,avrg_p,avrg_c,ratio,cdiff,rdiff,wchng'

    fn_name `mysql -N kts <<<"SELECT code FROM ${tablex:-tbl_fdiff} LIMIT 1"`
    echo "
        SELECT id,
        -- datetime_p, 
        TRUNCATE(datetime_p%(1000000000000)/1000000,4) as dt_p,
        -- datetime_c, 
        TRUNCATE(datetime_c%(1000000000000)/1000000,4) as dt_c, ${columns}, 
        round(close+(avrg_c-close)*.618 - close*ratio*.00236, 2) *              -- close as space
           IF((avrg_c-close)*.618 - close*ratio*.00236<0, -1, 1) as oracle,     -- ratio as time
        (wchng+2*rdiff+3*cdiff) as fire
        FROM ${tablex:-tbl_fdiff} LIMIT ${LIMIT:-200}
    " | mysql -t kts
}


function fn_acf() { tablex=tbl_acfdiff fn_fbi; }

function fn_vol()
{
    fn_yist
    get_vol() 
    {
    echo "
    SELECT date, sum(volume), sum(amount), sum(amount)/sum(volume) as trade 
        FROM day WHERE date<='${END}' ${COND} ${inLIST}
        GROUP by date 
        ORDER by date DESC
        LIMIT ${LIMIT:-13};
    " | mysql -t kts
    }

    case $1 in
    0)
        COND='and code<100000'
        ;;
    3)
        COND='and code>=300000 and code<400000'
        ;;
    6)
        COND='and code>=600000 and code<700000'
        ;;
    03)
        COND='and code<400000'
        ;;
    *)
        COND='and code<700000'
        ;;
    esac

    get_vol
    return $?
}


function fn_td_layout()
{
    # DELETE FROM fenbi WHERE datetime<12340506778899;
    fn_iscode ${code:=${1}}
    xt_ret $? "" || return $?
    dates=`mysql -N kts <<< "SELECT DISTINCT round(datetime/1000000,0) from fenbi WHERE code=${code}"`

    mysql kts <<< "TRUNCATE tmpfb";

    local i=
    for i in ${dates}; do
        # SELECT date FROM day WHERE code=${code} and date=
        echo "
        INSERT INTO tmpfb(code,datetime,trade,volume,amount)
        SELECT code,datetime%1000000,trade,volume,amount FROM fenbi 
            WHERE code=${code} and round(datetime/1000000, 0)=${i} 
            ORDER by trade ${ASC:-DESC} LIMIT 1; 
        " | mysql kts -t
        xt_ret $? "" || return $?
    done 

    mysql -t kts <<< "SELECT * FROM tmpfb ORDER by datetime DESC";

    return $?
}

function fn_dif120()
{
    if [ -z "${YIST}" ]; then
        fn_iscode $1 
        xt_ret $? "" || { echo "Usage: 120 code... {END}" && exit; }
        YIST=${file_ma120}
        xargs -n1 <<<"${*}" | sed 's/^0*//g' | xargs printf "%06d\n" > ${YIST}
    fi

    fn_yist 
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----

    tbl_day="(SELECT * FROM day WHERE date='${END}' ${inLIST})"

    sqls="
    SELECT d.code,d.date,d.close,ma120,100*(d.close-ma120)/ma120 as rise, c.name 
        ${sqls} FROM ${tbl_day} as d, 
        tbl_ma240 as t, 
        cap as c WHERE t.code=d.code and t.code=c.code 
        HAVING 1 ${inLIST} ORDER by rise ASC
    "
    mysql -t kts<<<"${sqls}"
    xt_ret $? "${FUNCNAME}" || return $?

    return 0
}

function fn_ma240_usage()
{
    echo "
    1 x_mid x_one 双线出击
    2 牛市step2 ma240收敛 & cross & 放量上行
    3 联合查询1 x_sho && NUM_RATIO=2 SCREENER 0
    4 联合查询2 强者恒强 平台突破 开山股份
    "
}

function fn_ma240()
{
    # 0. Make sure U've done [SCREENER ma240]?
    columns=code,date,close,ma5,ma13,ma25,ma60,ma120,ma240
    columns=ma.${columns//,/,ma.}
    function fn_build_sqls() {
    sqls="SELECT date FROM day WHERE code=900001 ORDER by date DESC LIMIT 4,1"
    ago5=`mysql -N kts<<<"${sqls}" 2>/dev/null`
    filed=${1:-x_sho}
    sqls="
    SELECT ${columns},
        ${x_sho} as x_sho, 
        ${x_mid} as x_mid,
        ${x_long} as x_long,
        ${x_sho}+
        ${x_mid}+
        ${x_long} as x_one,
        c.nmc,c.name FROM tbl_ma240 as ma, cap as c
        WHERE ma.code=c.code and ma.date>'${ago5}' 
        HAVING 1 ${COND} ${inLIST} ORDER by ${filed} ASC limit ${LIMIT:-24}" 
    }

    # .0001 使得新股 x_sho x_long 都为 2.000
    # mid 5day 5week 5month
    x_sho="round(abs((ma5-ma13)/(ma13))+abs((ma25-ma13)/(ma13)), 3)"
    x_long="round(abs((ma60-ma120)/(ma120))+abs((ma240-ma120)/(ma120)), 3)"
    x_mid="round(abs((ma5-ma25)/(ma25))+abs((ma120-ma25)/(ma25)), 3)"

    fn_yist
    fn_build_sqls $1
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----
    echo "$sqls">/dev/stderr 
    mysql -t kts<<<"$sqls"

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"SELECT code FROM (${sqls}) as tbl" > $file_ma240
    up file_to_table $file_ma240
    xt_ret $? "${FUNCNAME}" || return $?
}


function fn_yi()
{
    columns='code,date1,date2,off,close,turnov,tovpd,rat1,rat2,high,low,avrg,chng'
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    [ -s "${exclude2}" ] && EXCLUDE="and code not in (`cat ${exclude2}`)"

    function fn_yi_dive()
    {
        tempday="
        CREATE TEMPORARY TABLE tempday LIKE day;
        INSERT INTO tempday SELECT * from day where date='${CURR}';
        "
        # delete停牌个股
        tbl_super_dive="
        SELECT ${columns} FROM tbl_yi as t, tempday as d
        WHERE t.code = d.code                               
        HAVING 1 ${COND} ${EXCLUDE}
        ORDER by ${1:-chng} ${ASC:-ASC} LIMIT ${LIMIT:-36}
        "
        echo "${tbl_super_dive}"
    }

    fn_yi_dive $1
    mysql $mo -t kts <<< "${tempday}${tbl_super_dive}"
    xt_ret $? "${FUNCNAME}" || return $?

    [ "${CHAO:=0}" -eq 0 ] && echo "----- CHAO:${CHAO} -----" && return

    mysql -N kts <<<"${tempday}SELECT code FROM (${tbl_super_dive}) as tbl" > ${file_c}
    xt_ret $? "" || return $?

    up file_to_table $file_c
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_main()
{
    # mysql CURRENT_DATE();
    CURR=`fn_maxdate`
    END=${END:-${CURR}}
    PREV=`fn_get_prev`

    cmdlist=(
    "dugu9jian          [sortfiled]           # nine sword"
    "6maishenjian       [sortfiled]           # #{DATE2} to specify diff-day"
    "get_comma_cloumns  [tbl_name:-day]       # 逗分列名"
    "get_open_days      [LIMIT:-13 [desc]]    # 开市日列表"
    "wma                [sortfiled:tov5]      # 均价+现成513.静态rat"
    "rat                [sortfiled:-ratio]    # day+PREV513.动态rat"
    "ma240              [sortfiled:-ratio]    # "
    "ma240_usage        {1~9}                 # 分析ma 5 13 34 55"
    "dif120             code...               # cost:(close-ma120) & sort by #{ASC:id}"
    # ----------------  ABOVE IS FIXED SEQUENCE --------------------
    "updown             [LIMIT:-13]           # 近期涨跌家数统计"
    "td_layout          code                  # 日内最高价时点分布.10:00am"
    "ls                 {code|symbol}         # 日线数据 \$LIMIT"
    "name               code                  # 名"
    "vol                {0|3|6|03}            # ^^3市成交^^"
    "lsd                [sortfiled:-rise]     # --- END YIST LIMIT 涨幅排名"
    "pma                code                  # NUM=5日平均"
    "fbi                                      # tbl_fbi"
    "acc                                      # tbl_adiff"
    "acf                                      # tbl_acfdiff"
    "tao5                                     # "
    "rdiff                                    # tbl_rdiff"
    "yi                 chng                  # tbl_rdiff"
    )

    # `ASC=任意值`时使用'DESC'，弃用
    # ASC=${ASC:+'DESC'}  # ASC=${ASC:-'ASC'}
    # ASC=${ASC:-'ASC'}
    fn_execute "$@"
}

fn_main "$@"

# http://www.cnblogs.com/zhenjing/archive/2011/07/15/process_mutex_race.html
# 获取最大ID的记录

