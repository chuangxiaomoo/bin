#! /bin/bash -

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_bb_load()
{
    timestamp=`head -1 ${flash}.yjbb | awk '{print $1}'`
    echo "Delete data of ${timestamp} and load ${flash}.yjbb..."

    echo "
    DROP TABLE IF EXISTS tbl_yjbb;
    CREATE TABLE IF NOT EXISTS tbl_yjbb (
        date        date NOT NULL DEFAULT 0,
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
        EPS         DECIMAL(10,4) NOT NULL DEFAULT 0,
        revenue     DECIMAL(12,2) NOT NULL DEFAULT 0,
        r_grw_y     DECIMAL(10,2) NOT NULL DEFAULT 0,
        r_grw_q     DECIMAL(10,2) NOT NULL DEFAULT 0,
        profit      DECIMAL(12,2) NOT NULL DEFAULT 0,
        p_grw_y     DECIMAL(10,2) NOT NULL DEFAULT 0,
        p_grw_q     DECIMAL(10,2) NOT NULL DEFAULT 0,
        netassets   DECIMAL(10,4) NOT NULL DEFAULT 0,
        RoE         DECIMAL(10,2) NOT NULL DEFAULT 0,
        cashflow    DECIMAL(10,2) NOT NULL DEFAULT 0,
        public      date NOT NULL DEFAULT 0,
        INDEX(code,date)
    --  grossMgn    DECIMAL(10,2) NOT NULL DEFAULT 0
    );
    -- TRUNCATE tbl_yjbb;
    DELETE FROM tbl_yjbb WHERE date=${timestamp};
    LOAD DATA LOCAL INFILE '$1' INTO TABLE tbl_yjbb;
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "LOCAL INFILE '$1'"
}

function fn_bb_dl_all()
{
    echo "DL from ${stamp}"

    url0="http://datainterface.eastmoney.com/EM_DataCenter/JS.aspx?type=SR&sty=YJBB&"
    url0="${url0}fd=${stamp}&st=13&sr=-1&p=1&ps=3000"
    w3m -dump ${url0} > ${cache}
    if ! grep -q "${stamp}" ${cache}; then
        fn_echo_fail "no ${stamp} data"
        exit 1
    fi
    cat ${cache} |tr -d '\n' |
        sed -e '1s/^...//' -e '1s/...$//' -e 's/","/\n/g' | 
        awk -F',' '{
            printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
            $1,$3,$5/10000,
            $6,$7,$8/10000,
            $9,$10,$11,
            $12,$13,$17
        }' | grep "^[036]" > ${flash}.yjbb

    sed -i "s/^/${stamp}\t/" ${flash}.yjbb
    sort -g -k2 ${flash}.yjbb -o ${flash}.yjbb

    fn_bb_load ${flash}.yjbb

    return $?
}

function fn_bb_select()
{
    #olumns='code,EPS,revenue,r_grw_y,r_grw_q,profit,p_grw_y,p_grw_q,netassets,RoE,cashflow'
    columns="z.date,public,z.code,round(c.close/EPS/${MULT},2) as PE"
    columns=${columns}",round(100*c.close/EPS/${MULT}/p_grw_y) as PEG"
    columns=${columns}',revenue,r_grw_y,profit,p_grw_y,netassets,RoE'
    CURR=`fn_maxdate`

    ABBR=z fn_yist 
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----

    sqls="
    SELECT $columns, ${nmcYi}, c.name 
        FROM tbl_yjbb as z, cap as c
        $WHERE z.code=c.code ${sql_cond}
        HAVING 1 ${COND}
        ORDER by ${FIELD:-public} ${ASC:-DESC} limit ${LIMIT:-36}
    "
    fn_imysql_sqls
    fn_chao
    return $?
}

function fn_kb_load()
{
    timestamp=`head -1 ${flash}.yjkb | awk '{print $1}'`
    echo "Delete data of ${timestamp} and load ${flash}.yjkb..."

    echo "
    DROP TABLE IF EXISTS tbl_yjkb;
    CREATE TABLE IF NOT EXISTS tbl_yjkb (
        date        date NOT NULL DEFAULT 0,                -- 日期
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,     -- 代码
        EPS         DECIMAL(10,4) NOT NULL DEFAULT 0,       -- 每股收益
        revenue     DECIMAL(12,2) NOT NULL DEFAULT 0,       -- 营业收入
        r_grw_y     DECIMAL(10,2) NOT NULL DEFAULT 0,       -- r年度增长
        r_grw_q     DECIMAL(10,2) NOT NULL DEFAULT 0,       -- r季度增长
        profit      DECIMAL(12,2) NOT NULL DEFAULT 0,       -- 利润
        p_grw_y     DECIMAL(10,2) NOT NULL DEFAULT 0,       -- p年度增长
        p_grw_q     DECIMAL(10,2) NOT NULL DEFAULT 0,       -- p季度增长
        netassets   DECIMAL(10,4) NOT NULL DEFAULT 0,       -- 每股净资产(元) 
        RoE         DECIMAL(10,2) NOT NULL DEFAULT 0,       -- 净资产收益率(%)
        cashflow    DECIMAL(10,2) NOT NULL DEFAULT 0,
        public      date NOT NULL DEFAULT 0,
        INDEX(code,date)
    --  grossMgn    DECIMAL(10,2) NOT NULL DEFAULT 0
    );
    -- TRUNCATE tbl_yjkb;
    DELETE FROM tbl_yjkb WHERE date=${timestamp};
    LOAD DATA LOCAL INFILE '$1' INTO TABLE tbl_yjkb;
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "LOCAL INFILE '$1'"
}

function fn_kb_dl_all()
{
    echo "DL ${stamp}"
     
    url0="http://datainterface.eastmoney.com/EM_DataCenter/JS.aspx?type=SR&sty=YJKB&"
    url0="${url0}fd=${stamp}&st=13&sr=-1&p=1&ps=500"     # 只取500，多了无用
    w3m -dump ${url0} > ${cache}
    if ! grep -q "${stamp}" ${cache}; then
        fn_echo_fail "no ${stamp} data"
        exit 1
    fi
    # $5是去年同期
    # cashflow 补0
    cat ${cache} |tr -d '\n' |
        sed -e '1s/^...//' -e '1s/...$//' -e 's/","/\n/g' | 
        awk -F',' '{
            printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
            $1,$3,
            $4/10000, $6,$7,
            $8/10000, $10,$11,
            $12,$13,  0,$14
        }' | grep "^[036]" > ${flash}.yjkb

    sed -i "s/^/${stamp}\t/" ${flash}.yjkb
    sort -g -k2 ${flash}.yjkb -o ${flash}.yjkb

    fn_kb_load ${flash}.yjkb

    return $?
}

function fn_kb_select()
{
    #olumns='code,EPS,revenue,r_grw_y,r_grw_q,profit,p_grw_y,p_grw_q,netassets,RoE,cashflow'
    columns="z.date,public,z.code,round(c.close/EPS/${MULT},2) as PE"
    columns=${columns}",round(100*c.close/EPS/${MULT}/p_grw_y) as PEG"
    columns=${columns}',revenue,r_grw_y,profit,p_grw_y,netassets,RoE'
    CURR=`fn_maxdate`
    
    ABBR=z fn_yist 
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----

    sqls="
    SELECT $columns, ${nmcYi}, c.name 
        FROM tbl_yjkb as z, cap as c
        $WHERE z.code=c.code ${sql_cond}
        HAVING 1 ${COND}
        ORDER by ${FIELD:-public} ${ASC:-DESC} limit ${LIMIT:-36}
    "
    fn_imysql_sqls
    fn_chao
    return $?
}

function fn_yb_load()
{
    echo "
    DROP TABLE IF EXISTS tbl_yjyg;
    CREATE TABLE IF NOT EXISTS tbl_yjyg (
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
        pcnt        DECIMAL(10,2) NOT NULL DEFAULT 0,
        type        INT(2) NOT NULL DEFAULT 0,
        profip      DECIMAL(14,2) NOT NULL DEFAULT 0,
        profit      DECIMAL(14,2) NOT NULL DEFAULT 0,
        public      date NOT NULL DEFAULT 0,
        date        date NOT NULL DEFAULT 0,
        name        CHAR(16),
        INDEX(code,date)
    );
    -- TRUNCATE tbl_yjyg;
    -- DELETE FROM tbl_yjyg WHERE date=${timestamp};
    LOAD DATA LOCAL INFILE '$1' INTO TABLE tbl_yjyg;
    " | mysql kts
    xt_ret $? "" || return $?

    fn_echo_succ "LOCAL INFILE '$1'"
}

function fn_yb_dl_all()
{
    url0="http://datainterface.eastmoney.com/EM_DataCenter/JS.aspx?type=SR&sty=YJYG&"
    url0="${url0}fd=${stamp}&st=4&sr=-1&p=1&ps=3000"
    echo "DL from ${url0}"
    w3m -cols 1000 -dump ${url0} > ${cache}
    if ! grep -q "${stamp}" ${cache}; then
        fn_echo_fail "no ${stamp} data"
        exit 1
    fi

    cat ${cache} |tr -d '\n' |
        sed -e '1s/^...//' -e '1s/...$//' -e 's/","/\n/g' |
        sed -e 's/预亏/-3/g' -e 's/预减/-2/g' -e 's/减亏/-1/g' -e 's/持平/0/g' \
            -e 's/预警/0/g' -e 's/预盈/1/g' -e 's/预增/2/g' > ${flash}.pre
    cat ${flash}.pre |
        awk -F',' '{
            if ($6>=0) {
                printf "%s\t%.2f\t%d\t%s\t%.2f\t%s\t%s\t%s\n", 
                    $1,$4,$5,$6,$6*($4/100+1),$8,$9,$2
            } else {
                printf "%s\t%.2f\t%d\t%s\t%.2f\t%s\t%s\t%s\n", 
                    $1,$4,$5,$6,$6*(1-$4/100),$8,$9,$2
            }
        }' | grep "^[036]" > ${flash}

    fn_yb_load ${flash}

    return $?
}

function fn_yb_select()
{
    ABBR=z fn_yist 
    echo ----- LIST:${#LIST[@]} COND@${END}: $COND -----

    columns="date,public,code,pcnt,type"
    columns=z.${columns//,/,z.}

    sqls="
    SELECT ${columns}, 
        round(profip/100000000,2) as prev, 
        round(profit/100000000,2) as curr,
        round(profit/(c.cap/c.close)/10000,2) as Eps,
        round(10000*c.close/(profit/c.shares), 2) as PE, 
        round(c.nmc/10000,1) as nmc, c.name
        FROM tbl_yjyg as z, cap as c 
        $WHERE z.code=c.code ${sql_cond}
        HAVING 1 ${COND}
        ORDER by ${FIELD:-public} DESC LIMIT ${LIMIT:-50}
    " 
    fn_imysql_sqls
    fn_chao ${chao}.Yjyb
    
    return $?
}

function fn_yb_ls_date()
{
    echo "
    SELECT date, public, count(code) FROM tbl_yjyg GROUP by public  
        ORDER by public DESC
    " | mysql -t kts
    exit
}

function fn_yy_dl_all()
{
    pages=100       # assign to 0 to SKIP download, 100 to normal DL

    [ ${pages} != 0 ] && >${buffer}

    # 通过F12查看时间 http://data.eastmoney.com/bbsj/201512/yysj.html

    suffix='&js=var%20aisNXBuK={pages:(pc),data:[(x)]}&stat=0'
    url0="http://datainterface.eastmoney.com/EM_DataCenter/JS.aspx?type=SR&sty=YYSJ&"

    local i
    for (( i=1; i<=${pages}; i+=1 )); do
        fn_echo_succ "downlode ${i}..."
        url="${url0}fd=${stamp}&st=2&sr=1&p=${i}&ps=400${suffix}"
        # echo ${url}; exit
        w3m -cols 84 -dump "${url}" > ${cache}
        #
        [ "${pages}" -gt 10 ] && pages=`awk -F '[:,]' '/aisNXBuK/{print $2}' ${cache}`
        cat ${cache}  | tr -d '\n' |
            sed -e '1s/^.*data:.//' -e '$s/]}/\n/' |
            sed 's/","/\n/g'  | tr -d '"' >> ${buffer}
    done

    awk -F',' '{
        if ($5!="") {
            yysj=$5
        } else if ($4!="") { 
            yysj=$4
        } else {
            yysj=$3;
        }
        printf "%s\t%s\t%s\n", $1,yysj,$2
    }' ${buffer} > ${buffer}.rip

    echo "
    DROP TABLE IF EXISTS yysj;
    CREATE TABLE yysj (
        id      int(4) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    INT(6)  ZEROFILL,
        date    DATE NOT NULL,
        name    CHAR(16),
        INDEX(code,date)
    );

    LOAD DATA LOCAL INFILE '${buffer}.rip' INTO 
    TABLE yysj(code, date, name);
    " | mysql kts

    return $?
}

function fn_yy_select()
{
    case $1 in
    d|date)
        echo "
        SELECT DISTINCT date FROM yysj ORDER by date ASC;
        " | mysql -t kts
        fn_echo_warn "Usage: SELECT yysj d <date>"
        exit
        ;;
    s|select)
        sqls="
        SELECT * FROM yysj 
        HAVING ${HAVING:-1} ${COND} ${sql_date} ORDER BY ${FIELD:-date} ${ASC:-asc} LIMIT ${LIMIT:-36}
        "    
        fn_imysql_sqls
        fn_chao ${chao}.yysj
        ;;
    *|u|h)
        echo "Usage: SELECT yysj {date|select}"
        ;;
    esac
}

function fn_get_multiplier()
{
    MULT=`echo ${stamp} | awk -F'-' '{print 12/$2}'`
    #echo ${MULT} is ; exit
}

function fn_manual()
{
    echo "
    年报、季报<按时间先后>分为三个状态：业绩预告、业绩快报、正式年报。
    -------------------------------------------------------------------------------
    季度报表的所有项目分两个：环比数据，
                              同比数据，年初至报告期(所以EPS计算应该进行时间校正)

    PE     市盈率=(close/每股收益EPS)。动态PE=据季度业绩的年度推测值/市值
    PEG    PE/企业年盈利增长率，估值修复能力
    revenue营业额，必须配合ROE增长，如此才是可持续的。因缩减成本之节流不如开源。
    r_grw_y营收增长
    profit 直接反映企业的“赚钱能力”，1个亿起步，若1年只几百万，还不如一个个体户赚得多呢。
    p_grw_y利润增长
    ROE    净资产收益率 = 凈收入／股東股本，体现企业盈利能力，应该大于20%——10%以下免谈
           要配合这三个要素来看，一是利润率，二是总资产周转率，三是财务杠杆也就是（总资产/净资产）
           要结合着看，不需要太高不需要太低，要维持稳定。基本上每年大于15%

    gross  产品毛利率——要高、稳定而且趋升，
           彩电行业，近10年来产品毛利率一直在逐年下降；而白酒行业产品毛利率却一直都比较稳定。

    季度环比数据 r_grw_q, p_grw_q 有时会是空数据0
    "

    [ "${br}" = 'yb' ] && echo "\
    type:
        -3  预亏    
        -2  预减        prev+ curr+ profit -20%+
        -1  减亏    
         0  持平/预警   prev+ curr+ profit -10%
         1  预盈/扭亏   prev- curr+
         2  预增        prev+ curr+

    常用条件:
        COND=\"nmc<200&&public='2015-10-15' && type=2\" Yjyb 2 pcnt
    "

    echo "
    Usage: yjbb yb|kb|bb|yy <param>
        s|select      code|date                     # 默认全部code，可选YIST= or code...
        d|dl_all      20yy-mm-dd                    # 更新数据
        l|ls_date                                   # 列出数据日期，yysj没有此项
        D|dele        20yy-mm-dd                    # 
        m|manual                                    # 指标说明
    COND:
    COND='PEG>0&&PEG<50&&profit>1000 &&nmcYi<80'    # 估值修复
    COND='profit>1000 && p_grw_y>20 && nmcYi<150' 
    "
}

function fn_main()
{
    case $1 in
    yb|kb|bb|yy)  br=$1                                                     ;;
    *)            fn_echo_fail "[argv1:$br] must among yb|kb|bb|yy"; exit   ;;
    esac

    stamp=${stamp:-'2016-03-31'}
    if fn_isdate "${3}"; then
        stamp=$3
        sql_cond="and z.date>'${stamp}'"
    elif fn_iscode "${3}"; then
        sql_cond="and z.code=${3}"
    fi

    export chao=${chao}.yjbb
    fn_get_multiplier

    case $2 in
    s|select)   fn_${br}_select "${@:3}" ;;
    d|dl_all)   fn_${br}_dl_all ;;
    l|ls_date)  [ "${br}" = yb ] && fn_yb_ls_date
                [ "${br}" = yy ] && fn_manual && exit
                mysql -t kts <<< "SELECT DISTINCT date FROM tbl_yj${br}" ;;
    D|dele)     fn_isdate "${3}" && fn_manual && exit
                mysql -t kts <<< "DELETE FROM tbl_yj${br} WHERE date=${3}" ;;
    *)          fn_manual ;;
    esac

    fn_echo_succ "[stamp:${stamp}]"
}

fn_main $@
