#! /bin/bash
#---------------------------------------------------------------------------
#          FILE: SCREENER.sh
#         USAGE: ./SCREENER.sh
#   DESCRIPTION:
#        AUTHOR: chuangxiaomoo (God helps those who help themselves)
#  ORGANIZATION:
#       CREATED: 2013-12-11 08:46:51 AM
#      REVISION: 1.0
#---------------------------------------------------------------------------

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_dugu9jian()
{
    fn_txttbl
    TBL=${TBL:-'cap'}

    echo "
    To visit `mysql -N kts<<<"SELECT count(*) FROM ${TBL}"` codes on table $TBL...
    "

    echo "
    SET @END='$END';
    SET @NUM=${NUM:-100};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_dugu9jian);
    " | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    test -n "${1}" && SELECT 0 ${1:-wchng}

    return 0
}

function fn_6maishenjian()
{
    fn_txttbl
    TBL=${TBL:-'cap'}

    echo "
    To visit `mysql -N kts<<<"SELECT count(*) FROM ${TBL}"` codes on table $TBL...
    "

    echo "
    SET @END='$END';
    SET @NUM=${NUM:-100};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_6maishenjian);
    " | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    SELECT 6maishenjian ${1}
}

function fn_taox_ratio0()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,off_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_taox_dive()
    {
        tbl_super_dive="
        SELECT t.code,  ${columns}, c.nmc,c.name
           FROM ${tablex:-tbl_taox} as t, cap as c
           WHERE t.code = c.code HAVING 1 ${COND}
           ORDER by ${1:-ratio} ${ASC:-asc} limit ${LIMIT:-24}
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_taox_dive $1
    mysql $OPT -t kts <<< "${tbl_super_dive}" |\
        sed -e '1,3s/----+$/\+/g' -e '$s/----+$/\+/g' -e '2s/    |$/|/g'
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
}

function fn_taox_ratio()
{
    END=${1:-${END}}
    TBL=${TBL:-'cap'}
    NUM=${NUM:-240}        # 需要200%，所以应该比较大

    fn_isdate ${END}
    xt_ret $? "    Usage: #{1} must be date like 2008-08-08" || return $?

    head -n -5 $mps_org > $mps_god
    echo "
    SET @END='$END';
    SET @NUM=${NUM};
    SET @FORCE=${FORCE:-0};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_taox_ratio);
    " >> $mps_god # | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    [ "fn_tao5" = ${FUNCNAME[1]} ] || \
    fn_taox_ratio0 ${2:-ratio}
}

function fn_fbi_ratio()
{
    iDT=${1:-${DT}}
    TBL=${TBL:-'cap'}
    NUM=${NUM:-900}        # 30/day

    head -n -5 $mps_org > $mps_god
    echo "
    SET @DT=${iDT};
    SET @NUM=${NUM};
    SET @NMC_RATIO=${NMC_RATIO};
    call sp_visit_tbl('$TBL', @fn_fbi_ratio);
    " >> $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_9jian()
{
    test -n "${1}" && fn_iscode ${1}
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_cost9 up file_to_table ${code}
    TBL=tbl_cost9 NUM=${NUM:-240} fn_dugu9jian
    SELECT 0
}

function fn_6jian()
{
    test -n "${1}" && fn_iscode ${1}
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_cost6 up file_to_table ${code}
    daysql="SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC limit 1"
    daysql=${daysql} TBL=tbl_cost6 NUM=${NUM:-240} fn_6maishenjian ${2:-wchng}
}

function fn_flush_code()
{
    echo "
    CREATE TABLE IF NOT EXISTS ${TBL} (
        id          INT PRIMARY key AUTO_INCREMENT NOT NULL,
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0
    );
    TRUNCATE TABLE ${TBL};
    INSERT INTO ${TBL}(code) VALUES(${1});
    " | mysql -N -B kts

    return $?
}

function fn_tao()
{
    test -n "${1}" && fn_iscode ${1}
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_tao1 fn_flush_code ${code}
    TBL=tbl_tao1 NUM=${NUM:-240} fn_taox_ratio ${END} ${2:-ratio}
}

function fn_nmemb_of_10percent()
{
    # percent=5
    turnov200="
    SELECT sum(volume) FROM
        (SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC LIMIT 200)
        as tbl INTO @sum_vol_200d;
        SELECT round((100*@sum_vol_200d/shares),2) FROM cap WHERE code = ${code};
    "
    # mysql -N -B kts <<< "${turnov200}" ;exit

    nmemb=`echo "
    SELECT sum(volume) FROM
        (SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC LIMIT 100)
        as tbl INTO @sum_vol;
    SELECT floor(${percent:-10}/(@sum_vol/shares)) FROM cap WHERE code = ${code};
    " | mysql -N -B kts`
    [ "${nmemb}" -ne 0 ] || nmemb=1
    return $?
}


function fn_clr_exitcode()
{
    echo "
     CREATE table IF NOT EXISTS exitcode (
     code   INT(6) ZEROFILL NOT NULL DEFAULT 0
     );
     truncate TABLE exitcode;
    " | mysql kts
    return $?
}

function fn_sql_exitsucc()
{
    return `mysql -N -B kts <<<"SELECT count(code) FROM exitcode"`
}

function fn_tao5()
{
    test -n "${1}" && fn_iscode ${1}
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_tao1 fn_flush_code ${code}

    # 强制 nmemb 以改变ratio粒度
    test -n "$nmemb" || fn_nmemb_of_10percent
    xt_ret $? "" || return $?

    ZIZE=${ZIZE:-10}  # 默认 2时为300%，调整以查看更多

    local sql="SELECT date from day WHERE code = ${code} and date<='${END}'"
    dates=(`mysql -N kts <<< "${sql} ORDER by date DESC" |
                awk -v nmemb=${nmemb} '{if (! (a++%nmemb) ) print $1}'`)

    local size=${#dates[@]}
    let   idx=${size}-1
    local iNUM=${NUM:-300}

    echo "
    code:${code} size:${size} nmemb:${nmemb} iNUM:${iNUM}
    going to list ${ZIZE} recodrs ${dates[$idx]} ~ ${dates[0]} ...
    "

    mysql kts <<<"truncate TABLE tbl_tao5"
    xt_ret $? "Don't worry, this error show when run 1st time"
    fn_clr_exitcode
    xt_ret $? "try create tbl_tao5: SCREENER tao 2" || return $?

    local i=0
    for (( i=0; i<${ZIZE}; i+=1 )); do
        [ "${i}" -eq 0 ] && b4=3 || b4=0
        FORCE=1 TBL=tbl_tao1 NUM=${iNUM} fn_taox_ratio ${dates[$i]} # | grep -B${b4} ${code}
        xt_ret ${PIPESTATUS[0]} "" || return $?

        if ! fn_sql_exitsucc; then
            fn_echo_warn "    so_little_data[$i ${dates[$i]}], try: up day ${code} ${dates[$idx]} 600\n"
            local RETCODE=1
            break
        fi
    done

    [ "fn_bei" = "${call}" ] || \
    SELECT tao5
    xt_ret $? "" || return $?

    col='code,date_p,date_c,off_p,off_c,tnov_p,tnov_c'
    col="${col},avrg_p,avrg_c,ratio,wchng"
    colA="A.${col//,/,A.}"
    echo "
    INSERT INTO tbl_rdiff(${col},cdiff,rdiff,dbrat)
    SELECT ${colA}, (A.avrg_c-B.avrg_c) as cdiff, (A.ratio-B.ratio) as rdiff,
                    100*(2*A.close-(A.avrg_p+A.avrg_c))/(A.avrg_p+A.avrg_c) as dbrat FROM tbl_tao5 A
    INNER JOIN tbl_tao5 B on(A.id<B.id) GROUP BY A.id;      -- 此处条件应该是 on A.id=B.id+1
    " | mysql -N kts
    xt_ret $? "" || return $?

    return ${RETCODE:-0}
}

function fn_turnov5()
{
    # date<'$CLOSING' 不包括今日：
    # 1. 交易中计算，不会令结果平均时变小
    # 2. 转折日成交量都会大增，此举可提高灵敏度

    if [ "${TOV5:-0}" -eq 0 ]; then
        # tov10/2 在上涨价顶时比 tov5 敏感
        sql="
        SELECT round(sum(d.volume)/cap.shares/2, 3) as nmc_ratio FROM
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 10)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.2);
        "
    elif [ "${TOV5:-0}" -eq 1 ]; then
        # tov5 在价底反弹时比 tov10/2 敏感
        sql="
        SELECT round(sum(d.volume)/cap.shares, 3) as nmc_ratio FROM
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.2);
        "
    elif [ "${TOV5:-0}" -eq 2 ]; then
        # tov20/2 海龟
        sql="
        SELECT round(sum(d.volume)/cap.shares/2, 3) as nmc_ratio FROM
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 20)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.4,@irt,.4);
        "
    elif [ "${TOV5:-0}" -eq 5 ]; then
        # min30 -- tov5/5
        sql="
        SELECT round(sum(d.volume)/cap.shares/(5*${TOV_DIVISION:-1}), 3) as nmc_ratio FROM
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.123);
        "
    elif [ "${TOV5:-0}" -eq 6 ]; then
        # tov10/2 * .618
        sql="
        SELECT round(sum(d.volume)/cap.shares, 3) as nmc_ratio FROM
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt*.618,.123);
        "
    fi
    mysql -N kts<<<"${sql}"
}

function fn_bei()
{
    [ -z "$1" ] && echo "Usage: bei {file|code...}" && exit 1
    [ -f "${1}" ] && lst=(`awk '/^[^#]/{print $1}' ${*} | sort -u`) || lst=(${@})

    echo "
    to visit ${#lst[@]} codes
    "

    # DROP TABLE tbl_tao5;
    # DROP TABLE tbl_tao1;
    # DROP TABLE tbl_taox;
    # DROP TABLE tbl_rdiff;
    # DROP TABLE tbl_fdiff;
    mysql kts <<<"truncate table tbl_rdiff;"
    xt_ret $? "try create tbl_rdiff: SCREENER tao 2" || return $?

    local code=
    for code in ${lst[@]}; do
        #echo "$code"
        irt=`fn_turnov5 $code`
        ZIZE=${ZIZE:-3} NMC_RATIO=${NMC_RATIO:-${irt}} call=fn_bei fn_tao5 ${code}
    done

    SELECT rdiff
    return $?
}

function fn_wma()
{
    fn_txttbl
    tbl_tov_date=tbl_tov_${END//-/_}

    if mysql kts<<<"SHOW TABLES" | grep -q ${tbl_tov_date}; then
        # 表 ${tbl_tov_date} 存在，且是闭市后构建
        # 表 tbl_mavol520s 是TBL的分析结果，供后续处理分析。
        if [ -f /tmp/tov/${tbl_tov_date} ]; then
            if [ "cap" = "${TBL:-cap}" ]; then
                WMA=`cat ${buffer} 2>/dev/null`
                if [ "${WMA}" != ${END} ]; then
                    fn_cp_tbl ${tbl_tov_date} tbl_mavol520s;
                    echo ${END} > ${buffer}      # 不用每次都 fn_cp_tbl tbl_mavol520s
                else
                    echo "    Repeat wma, ignore!"
                fi
            else
                echo "
                DELETE from tbl_mavol520s;
                INSERT INTO tbl_mavol520s SELECT * FROM ${tbl_tov_date}
                            WHERE code in (SELECT code FROM ${TBL});
                " | mysql kts # | tee /dev/stderr
                xt_ret $? "mysql" || return $?
                echo
            fi
            return 0
        fi
    fi

    echo "    build on ${TBL:-cap}..."

    echo "
    SET @END='$END';
    call sp_visit_tbl('${TBL:-cap}', @fn_mavol520s);
    " | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    if [ "${TBL:-cap}" = "cap" ] ; then
        fn_cp_tbl tbl_mavol520s ${tbl_tov_date}
        xt_ret $? "fn_cp_tbl" || return $?

        # tag a tag, touch file the fisttime after $sec_1500
        sec_1500=$(date +%s -d "${END} 15:00:00")
        sec_curr=$(date +%s)
        # ! must append with a blackpace
        if ! ([ "${END}" = "${CURR}" ] && [ "${sec_curr}" -lt "${sec_1500}" ]); then
            mkdir -p /tmp/tov/
            touch /tmp/tov/${tbl_tov_date}
            echo ${END} > ${buffer}      # 不用每次都 fn_cp_tbl tbl_mavol520s
        fi
    else
        SELECT wma ${@}
    fi
}

function fn_focus()
{
    cat ${YIST:-'.soptter.sulon'} .soptter.trade | awk '/^[^#]/{print $1}'|sort -u> ${flash}
    YIST=${flash} LIMIT=99 fn_dugu9jian ${1:-wchng}
}

function fn_auto_nmemb()
{
    [ -z "${NMC_RATIO}" ] && return
    nrat=`mysql -N<<<"SELECT round(100*${NMC_RATIO}, 0)"`

    if [ "${nrat}" -le 30 ]; then
        let nmemb0=150/${nrat}
    else
        fn_echo_fail "
        ERROR: NMC_RATIO[${NMC_RATIO}] must less than .20
        "
        exit
    fi

    nmemb=${nmemb:-${nmemb0}}
    #echo ${nmemb}; exit
    return $?
}

function fn_fbi()
{
    fn_iscode ${code:=$1}
    xt_ret $? "" || return $?

    ZIZE=${ZIZE:-6} nmemb=${nmemb:-1} NMC_RATIO=${NMC_RATIO:-1} fn_bei ${code}
}

function ___fbi()
{
    # 最大日换手为20%，以1%为粒度，可以得出`10min`是一个很好的单位，得日数据25单位
    # 若是日换手为4%，以nmemb=7=30/4   <-- 30 即1日数据组（有效取28）
    # 取mi5的NUM=20，即便是歌尔日换手1.5%，亦可得到10组diff数据
    # NMC_RATIO即tov5
    # nmemb = 1%换手公差时之数据组数 = 30/最大日换手 = 30/(tov5/5) = 150/tov5
    # ZIZE取20，太远时，日成交翻番后，往前的数据会不准确
    # 工作条件: volume >= ZIZE+(2*NMC_RATIO)，否则会报 so_little_data，
    fn_auto_nmemb
    NMC_RATIO=${NMC_RATIO:-.2}
    nmemb=${nmemb:-7}
    ZIZE=${ZIZE:-20}

    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    sql="SELECT max(datetime) FROM fenbi WHERE code=${1}"
    dt=`mysql -N kts <<< "${sql}"`

    # 20140707.14{o|h} or 150123.1122
    grep -q '\.' <<<"${DT}" && DT=20${DT/./}00
    DT=${DT/o/0000}     # o(o'clock)
    DT=${DT/h/3000}     # h(half-clock)
    DT=${DT:-$dt}
    fn_isdatetime ${DT}
    xt_ret $? "invalid datetime[$DT]" || return $?

    TBL=tbl_fbi1 fn_flush_code ${code}

    local sql="SELECT datetime from fenbi WHERE code=${code} and datetime<=${DT}"
    dates=(`mysql -N kts <<< "${sql} ORDER by datetime DESC" |
                awk -v nmemb=${nmemb} '{if (! (a++%nmemb) ) print $1}'`)
    test ${#dates[@]} -ne 0
    xt_ret "${PIPESTATUS[0]}" || return $?

    local size=${#dates[@]}
    let   idx=${size}-1
    local iNUM=${NUM:-900}          # 30/day

    echo "
    size: ${size} nmemb: ${nmemb} iNUM:${iNUM} (hour=nmemb[6])
    going to list ${ZIZE} recodrs ${dates[$idx]} ~ ${dates[0]} ...
    "

    mysql kts <<<"truncate TABLE tbl_fbi5; truncate TABLE tbl_fdiff;"
    xt_ret $? "Don't worry, this error show when run 1st time"
    fn_clr_exitcode
    xt_ret $? "clr exitcode" || return $?

    local i=0
    for (( i=0; i<${ZIZE}; i+=1 )); do
        TBL=tbl_fbi1 NUM=${iNUM} fn_fbi_ratio ${dates[$i]}
        xt_ret ${?} "" || return $?

        if ! fn_sql_exitsucc; then
            tovf=`echo "
            SELECT round(sum(volume)/cap.shares, 2) as tov FROM fenbi,cap
            WHERE fenbi.code=${code} and fenbi.code=cap.code
            " | mysql kts -N`

            fn_echo_warn "    so_little_data[$i ${dates[$i]}], tov[${tovf}], try: mi5 ${code}\n"
            local RETCODE=1
            break
        fi
    done

    col='code,datetime_p,datetime_c,off_p,off_c,tnov_p,tnov_c'
    col="${col},avrg_p,avrg_c,ratio,wchng"
    colA="A.${col//,/,A.}"
    echo "
    INSERT INTO tbl_fdiff(${col},cdiff,rdiff,dbrat)
    SELECT ${colA}, (A.avrg_c-B.avrg_c) as cdiff, (A.ratio-B.ratio) as rdiff,
                    100*(2*A.close-(A.avrg_p+A.avrg_c))/(A.avrg_p+A.avrg_c) as dbrat FROM tbl_fbi5 A
    INNER JOIN tbl_fbi5 B on(A.id<B.id) GROUP BY A.id;
    " | mysql -N kts
    xt_ret $? "" || return $?

    [ "${RETCODE:-0}" -eq 0 ] && SELECT fbi
    return ${RETCODE:-0}
}

function fn_acc()
{
    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    irt=`TOV5=2 fn_turnov5 $code`
    cp ${mps_acc} ${mps_god}

    echo "
    SET @END='${END}';
    SET @NUM=${NUM:-500};
    SET @PARTS=${PARTS:-5};
    SET @PPLUS=${PPLUS:-20};
    SET @NMC_RATIO=${NMC_RATIO:-${irt}};
    call sp_visit_code(${code});
    " >> $mps_god
    fn_clr_exitcode
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
    if ! fn_sql_exitsucc; then
        fn_echo_warn "so_little_data"
        exit
    fi

    SELECT acc
}

function fn_act()
{
    PPLUS=${PPLUS:-50} TOV_DIVISION=3 \
    TOV5=5 fn_acf $@
}

function fn_ac5()
{
    PPLUS=${PPLUS:-20} \
    TOV5=5 fn_acf $@
}

function fn_ac6()
{
    TOV5=6 fn_acf $@
}

function fn_acf()
{
    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    cp ${mps_acf} ${mps_god}

    sql="SELECT max(datetime) FROM fenbi WHERE code=${1}"
    dt=`mysql -N kts <<< "${sql}"`

    # 20140707.14{o|h} or 150123.1122
    grep -q '\.' <<<"${DT}" && DT=20${DT/./}00
    DT=${DT/o/0000}     # o(o'clock)
    DT=${DT/h/3000}     # h(half-clock)
    DT=${DT:-$dt}
    fn_isdatetime ${DT}
    xt_ret $? "invalid datetime[$DT]" || return $?

    DATE2=`fn_str_2_date ${DT}`
    irt=`CLOSING=${DATE2} fn_turnov5 $code`

    echo "
    SET @DT='${DT}';
    SET @PARTS=${PARTS:-20};
    SET @PPLUS=${PPLUS:-5};
    SET @NMC_RATIO=${NMC_RATIO:-${irt}};
    call sp_visit_code(${code});
    " >> $mps_god # | tee -a $mps_god
    fn_clr_exitcode
    mysql $OPT kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
    if ! fn_sql_exitsucc; then
        fn_echo_warn "so_little_data"
        exit
    fi

    SELECT acf
}

function fn_ma5D20()
{
    fn_txttbl
    if ! mysql kts<<<"SHOW TABLES" | grep -q 'tbl_ma120'; then
        echo -e "\n    error: tbl_ma120 not exist\n"
        exit 1
    fi

    echo "
    SET @END='$END';
    call sp_visit_tbl('${TBL:-cap}', @fn_ma5D20);
    " | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
}

function fn_ma120_up()
{
    PREV=`fn_get_date 2`
    PREV20=`fn_get_date 20`
    PREV120=`fn_get_date 120`
    fn_echo_succ "up ma120@${END}..."
    echo "
    DROP TABLE IF EXISTS ma120;
    CREATE TABLE ma120(
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
        date        date NOT NULL,
        close       DECIMAL(6,2) NOT NULL DEFAULT 0,
        ma20        DECIMAL(6,2) NOT NULL DEFAULT 0,        
        ma120       DECIMAL(6,2) NOT NULL DEFAULT 0,
        INDEX(date,code)
    );
    CREATE TABLE IF NOT EXISTS mat_ma120 LIKE ma120;

    SET @END='$END';

-- workaholic
    DROP   TABLE IF EXISTS t_code;
    DROP   TABLE IF EXISTS t_temp;
    DROP   TABLE IF EXISTS t_buff;
    CREATE TEMPORARY TABLE t_temp LIKE ma120;
    CREATE TEMPORARY TABLE t_buff LIKE ma120;
    CREATE TEMPORARY TABLE t_code LIKE zxg;

    TRUNCATE TABLE t_code;
    INSERT INTO t_code(code) SELECT DISTINCT code FROM (
        SELECT code,count(*) as num FROM day 
        WHERE date>='${PREV120}' AND date<='${END}' AND code<700000
        GROUP by code
        HAVING num=120
    ) as t;

    INSERT INTO t_temp(code,date,close) 
        SELECT d.code,date,close FROM day d, t_code c WHERE d.code=c.code AND date='${END}';

    INSERT INTO t_buff(code,ma20) 
        SELECT d.code,sum(close)/20 FROM day d, t_code c WHERE d.code=c.code AND date>='${PREV20}' AND date<='${END}' GROUP by code;
    UPDATE t_temp t,t_buff b SET t.ma20=b.ma20 WHERE t.code=b.code;

    TRUNCATE TABLE t_buff;
    INSERT INTO t_buff(code,ma120) 
        SELECT d.code,sum(close)/120 FROM day d, t_code c WHERE d.code=c.code AND date>='${PREV120}' AND date<='${END}' GROUP by code;
    UPDATE t_temp t,t_buff b SET t.ma120=b.ma120 WHERE t.code=b.code;

-- non-workaholic
    TRUNCATE TABLE zxg;
    INSERT INTO zxg(code) SELECT DISTINCT d.code FROM day d WHERE date>='${PREV}' AND date<='${END}' AND code<700000;
    DELETE FROM zxg WHERE code in (SELECT code FROM t_code);

    call sp_visit_tbl('${TBL:-zxg}', @fn_ma120);

    DELETE FROM mat_ma120 WHERE date='$END';
    INSERT INTO ma120     SELECT * FROM t_temp;
    INSERT INTO mat_ma120 SELECT * FROM ma120;
    " >> $mps_god
    # | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
}

function fn_ma120()
{
    case $1 in
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e)
        sqls="SELECT DISTINCT date FROM mat_ma120 ORDER by date DESC LIMIT ${LIMIT:-10}"
        # mysql -N kts<<<"${sqls}" | cat -n
        mysql -N kts<<< "SELECT DISTINCT date FROM mat_ma120 WHERE date<='${END}' ORDER by date DESC LIMIT 10" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        LIMIT=20 fn_ma120 l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    d)  date=`fn_get_date ${2:-1}`
        mysql -N kts<<< "DELETE FROM ma120 WHERE date='${date}'"
        fn_echo_succ "DELETE ${date} FROM ma120 succ!"
        ;;
    [0-9]*)
        date=`fn_get_date ${1:-1}`
        END=${date} fn_ma120_up
        ;;
    *)
        echo "Usage: SCREENER ma120 {l|e|d|iEND}"
        ;;
    esac
}

function fn_hilo()
{
    if [ -n "${1}" ]; then
        fn_iscode ${1}
        xt_ret $? "invalid code[$1]" || return $?

        local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
        up file_to_table ${code}
    elif [ -z "${YIST}" ]; then
        fn_echo_succ "set YIST=.codelist"
        YIST=.codelist fn_txttbl
    fi

    echo "
    -- 可以作为一周一次的功课
    SET @END='$END';
    SET @NUM=${NUM:-60};
    call sp_visit_tbl('${TBL:-yist}', @fn_hilo);
    " | tee -a $mps_god
    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_lohi_repair()
{
    iPREV=`END=${1} fn_get_prev`
    echo "
    CREATE TEMPORARY TABLE lohi_prev LIKE mat_lohi;
    CREATE TEMPORARY TABLE lohi_curr LIKE mat_lohi;
    INSERT INTO lohi_prev(end,num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5)
        SELECT end,num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5 FROM mat_lohi WHERE end='${iPREV}';
    INSERT INTO lohi_curr(end,num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5)
        SELECT end,num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5 FROM mat_lohi WHERE end='${1}';
    INSERT INTO mat_lohi(end,num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5)
        SELECT '$1',num,code,date1,date2,off,high,low,lohi,scale,volume,amount,mavol5
            FROM lohi_prev WHERE code NOT IN (SELECT code FROM lohi_curr);
    " | mysql -N kts
    return $?
}

# NUM=30
# dates=(`END=2016-04-15 fn_get_date 1 ${NUM}`)
# for (( i=${NUM}-1; i>=0; i-- )); do
#     date=${dates[$i]};
#     fn_echo_succ ${date}
#     fn_lohi_repair $date
# done

function fn_ddetov5()
{
    NEXT=`fn_get_next`
    PREV5=`fn_get_date 5`
    fn_echo_succ "up matov5@${END}..."

    echo "
    DROP TABLE IF EXISTS tov5;
    CREATE TABLE tov5 LIKE matov5;
    TRUNCATE TABLE ris200;
    TRUNCATE TABLE zxg;

    INSERT INTO ris200(code)
        SELECT d.code FROM dde d WHERE date='$NEXT' ORDER by rise DESC LIMIT 500;
    INSERT INTO zxg(code)
        SELECT d.code FROM dde d, ris200 r WHERE d.code=r.code && date>='$PREV5' && date<='$END' GROUP by code HAVING count(d.code)=5;

    INSERT INTO tov5
        SELECT d.date,d.code,tov,1,1,1,1 FROM dde d, zxg c WHERE date>='$PREV5' && date<='$END' && d.code=c.code;
    " | mysql kts

    num=`mysql -N kts <<< "SELECT COUNT(code) FROM zxg"` 
    [ ${num} -gt 100 ]
    xt_ret $? "Error: [num:${num}] -gt 1000" || return $?
    
    # MySQL取每组的前N条记录 WHERE 5>(SELECT count(*) FROM...) spend 100秒，改用循环来INSERT表
    # 5日内必现的票
    echo "
    SET @END='$END';

    TRUNCATE TABLE zxg;
    INSERT INTO zxg(code)
        SELECT d.code FROM dde d, ris200 r WHERE d.code=r.code && date>='$PREV5' && date<='$END' GROUP by code HAVING count(d.code)<5;
    call sp_visit_tbl('zxg', @fn_dde5);

    DELETE FROM matov5 WHERE date='$END';
    INSERT INTO matov5 SELECT '$END',code,sum(tov)/5,1,1,1,1 FROM tov5 GROUP by code ORDER by code ASC;
    " >> $mps_god
    #" | tee -a $mps_god
    mysql $OPT -t kts < $mps_god
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_ddetov25()
{
    PREV25=`fn_get_date 10`
    fn_echo_succ "up matov5@${END}..."

    echo "
    DROP TABLE IF EXISTS tov5;
    CREATE TABLE tov5 (
        date        date NOT NULL,
        code        INT(6) ZEROFILL DEFAULT 0,
        tov         DECIMAL(6,2) DEFAULT 0,
        day23       DECIMAL(6,2) DEFAULT 0,
        day35       DECIMAL(6,2) DEFAULT 0,
        wk12        DECIMAL(6,2) DEFAULT 0,
        wk23        DECIMAL(6,2) DEFAULT 0,
        INDEX(date,code)
    );

--  DROP TABLE IF EXISTS matov5;
    CREATE TABLE IF NOT EXISTS matov5 LIKE tov5;

    DROP TABLE IF EXISTS  zxg;
    CREATE TABLE zxg LIKE codes;
    INSERT INTO zxg(code) SELECT DISTINCT code FROM day WHERE date>='${PREV25}' && date<='${END}' and code<888888;

    SET @END='$END';
    call sp_visit_tbl('zxg', @fn_dde25);

    DELETE FROM matov5 WHERE date='$END';
    INSERT INTO matov5 SELECT * FROM tov5;
    " >> $mps_god
   #" | tee -a $mps_god
    mysql $OPT -t kts < $mps_god
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_ddetov21()
{
    PREV25=`fn_get_date 10`
    sqls="SELECT FLOOR(tov) FROM dde WHERE date='${END}' ORDER by tov DESC LIMIT 500,1"
    t500=`mysql -N kts <<< "${sqls}"`
    xt_ret $? "" || return $?

    # xRD.sql使用Ponzi=3.5
    case $t500 in
    [6-9])  Ponzi=5     ;;
    4|5)    Ponzi=4     ;;
    *)      Ponzi=3.5   ;;
    esac

    fn_echo_succ "up matov5@${END} t500:${t500} Ponzi:${Ponzi}..."

    echo "
    DROP TABLE IF EXISTS tov5;
    CREATE TABLE tov5 (
        date        date NOT NULL,
        code        INT(6) ZEROFILL DEFAULT 0,
        tov         DECIMAL(6,2) DEFAULT 0,
        dy12        DECIMAL(6,2) DEFAULT 0,
        dy35        DECIMAL(6,2) DEFAULT 0,
        wk12        DECIMAL(6,2) DEFAULT 0,
        wk23        DECIMAL(6,2) DEFAULT 0,
        INDEX(date,code)
    );

--  DROP TABLE IF EXISTS matov5;
    CREATE TABLE IF NOT EXISTS matov5 LIKE tov5;

    DROP TABLE IF EXISTS  zxg;
    CREATE TABLE zxg LIKE codes;
    INSERT INTO zxg(code) SELECT DISTINCT code FROM day WHERE date>='${PREV25}' && date<='${END}' and code<888888;

    SET @END='$END';
    SET @Ponzi=${Ponzi};
    call sp_visit_tbl('zxg', @fn_dde21);

    DELETE FROM matov5 WHERE date='$END';
    INSERT INTO matov5 SELECT * FROM tov5;
    " >> $mps_god
#   " | tee -a $mps_god
    mysql $OPT -t kts < $mps_god
    xt_ret $? "${FUNCNAME}" || return $?
#   fn_echo_succ "I sleep 30"; sleep 30
}

function fn_tt25()
{
    [ -n "${1}" ]
    xt_ret $? "Usage: fn_tt25 code" || return $?

    PREV25=`fn_get_date 10`
    fn_echo_succ "up matov5@${END}..."

    sqls="SELECT code,date,tov FROM dde WHERE code=${1} and date<='${END}' ORDER by date DESC LIMIT 21"
    fn_imysql_sqls
    xt_ret $? "" || return $?

    # ma1020 or tov5
    echo "
    DROP TABLE IF EXISTS tov5;
    CREATE TABLE tov5 LIKE matov5;

    DROP TABLE IF EXISTS  zxg;
    CREATE TABLE zxg LIKE codes;
    INSERT INTO zxg(code) VALUES(${1});

    SET @END='$END';
#   call sp_visit_tbl('zxg', @fn_dde21); SELECT * FROM tov5;
    call sp_visit_tbl('zxg', @fn_ma1020); SELECT * FROM tempday; SELECT * FROM ma1020 WHERE code=$1;
    " >> $mps_god
   #" | tee -a $mps_god
    mysql $OPT -t kts < $mps_god
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_ma1020_up()
{
    fn_echo_succ "up ma1020@${END}..."
    date=${END}
    PREV20=`fn_get_date 20`
    echo "
    DROP TABLE IF EXISTS ma1020;
    CREATE TABLE ma1020 (
        date        date NOT NULL,
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
        trade       DECIMAL(6,2)  NOT NULL DEFAULT 0,
        ma5         DECIMAL(6,2)  NOT NULL DEFAULT 0,
        ma10        DECIMAL(6,2)  NOT NULL DEFAULT 0,
        ma20        DECIMAL(6,2)  NOT NULL DEFAULT 0,
        ma60        DECIMAL(6,2)  NOT NULL DEFAULT 0,
        vax3        DECIMAL(12,2) NOT NULL DEFAULT 0,
        vax60       DECIMAL(12,2) NOT NULL DEFAULT 0,
        INDEX(date,code)
    );
--  DROP TABLE IF EXISTS mat_ma1020;
    CREATE TABLE IF NOT EXISTS mat_ma1020 LIKE ma1020;

    TRUNCATE TABLE zxg;
    INSERT INTO zxg(code) SELECT code FROM matov5 WHERE tov< 2 && date='$date';     -- 门槛tov5=2%

    INSERT INTO ma1020(date,code,trade,ma5,ma10,ma20,ma60)
        SELECT '${date}', d.code, sum(close)/count(*), sum(close)/count(*), 
            sum(close)/count(*), sum(close)/count(*),sum(close)/count(*)
            FROM day d, zxg z WHERE d.code=z.code && date>='${PREV20}' && date<='${date}' GROUP by code;

    TRUNCATE TABLE zxg;
    INSERT INTO zxg(code) SELECT code FROM matov5 WHERE tov>=2 && date='$date';

    SET @END='$date';
    call sp_visit_tbl('${TBL:-zxg}', @fn_ma1020);       -- Don't use codes here

    DELETE FROM mat_ma1020 WHERE date='$date';
    INSERT INTO mat_ma1020 SELECT * FROM ma1020;
    " >> $mps_god

    mysql $OPT -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_ma1020()
{
    case $1 in
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e)
        sqls="SELECT DISTINCT date FROM mat_ma1020 ORDER by date DESC LIMIT ${LIMIT:-10}"
        # mysql -N kts<<<"${sqls}" | cat -n
        mysql -N kts<<< "SELECT DISTINCT date FROM mat_ma1020 WHERE date<='${END}' ORDER by date DESC LIMIT 10" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        LIMIT=15 fn_ma1020 l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    d)  date=`fn_get_date ${2:-1}`
        mysql -N kts<<< "DELETE FROM ma1020 WHERE date='${date}'"
        fn_echo_succ "DELETE ${date} FROM ma1020 succ!"
        ;;
    [0-9]*)
        date=`fn_get_date ${1:-1}`
        END=${date} fn_ma1020_up
        END=${date} fn_xtov_up
        ;;
    *)
        echo "Usage: SCREENER ma1020 {l|e|d|iEND}"
        ;;
    esac
}


function fn_xtov_up()
{
    fn_echo_succ "up xtov@${END}..."

    PREV120=`fn_get_date 120`
    PREV90=`fn_get_date 90`
    PREV70=`fn_get_date 70`
    PREV60=`fn_get_date 60`
    PREV3=`fn_get_date 3`
    echo "
    DROP TABLE IF EXISTS xtov,xtov_3;
    CREATE TABLE IF NOT EXISTS xtov (
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0,
        vax3        DECIMAL(12,2) NOT NULL DEFAULT 0,
        vax60       DECIMAL(12,2) NOT NULL DEFAULT 0
        ,INDEX(code)
    );
    CREATE TABLE xtov_3 LIKE xtov;

    DROP TABLE IF EXISTS  c_all;
    CREATE TABLE c_all LIKE codes;
    INSERT INTO c_all(code) SELECT DISTINCT code FROM mat_ma1020 WHERE date='${END}';

    INSERT INTO xtov(code,vax60)
        SELECT code, max(tov) FROM dde WHERE date>='${PREV60}' AND date<'${PREV3}'
        GROUP by code HAVING COUNT(*) >=57;

    # 最耗时的地方在联合查询，INDEX(code)成为必备
    DELETE c.* FROM c_all c, xtov x WHERE c.code=x.code;
    INSERT INTO xtov(code,vax60)
        SELECT d.code, max(tov) FROM dde d, c_all c WHERE d.code=c.code AND date>='${PREV70}' AND date<'${PREV3}'
        GROUP by code HAVING COUNT(*) >=57;

    DELETE c.* FROM c_all c, xtov x WHERE c.code=x.code;
    INSERT INTO xtov(code,vax60)
        SELECT d.code, max(tov) FROM dde d, c_all c WHERE d.code=c.code AND date>='${PREV90}' AND date<'${PREV3}'
        GROUP by code HAVING COUNT(*) >=57;

    DELETE c.* FROM c_all c, xtov x WHERE c.code=x.code;
    INSERT INTO xtov(code,vax60)
        SELECT d.code, max(tov) FROM dde d, c_all c WHERE d.code=c.code AND date>='${PREV120}' AND date<'${PREV3}'
        GROUP by code;

    # 更新xtov中的vax3
    INSERT INTO xtov_3(code,vax3)
        SELECT d.code, max(tov) FROM dde d, xtov c WHERE d.code=c.code AND date>='${PREV3}' AND date<='${END}'
        GROUP by code;
    UPDATE xtov,xtov_3 SET xtov.vax3=xtov_3.vax3 WHERE xtov.code=xtov_3.code;
    UPDATE mat_ma1020 m, xtov x SET m.vax3=x.vax3, m.vax60=x.vax60 WHERE m.code=x.code AND m.date='${END}';
    " | mysql -N kts
    
    return $?
}

function fn_xtov()
{
    case $1 in
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e)
        mysql -N kts<<< "SELECT DISTINCT date FROM mat_ma1020 WHERE date<='${END}' && vax60>0 ORDER by date DESC LIMIT 10" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        LIMIT=15 fn_ma1020 l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    [0-9]*)
        date=`fn_get_date ${1:-1}`
        END=${date} fn_xtov_up
        ;;
    *)
        echo "Usage: SCREENER xtov {l|e|iEND}"
        ;;
    esac
}

function fn_diftov5()
{
    echo "
    SELECT m.date,m.code,m.tov as tov5_ths,
        ROUND(100*l.mavol5*c.close/c.nmc, 2) as tov5_lohi, ROUND(m.tov/ (100*l.mavol5*c.close/c.nmc), 1) as scaler ,c.name
        FROM matov5 m, mat_lohi l, cap c 
        WHERE m.code=l.code and m.code=c.code && l.end='$END' && m.date='${END}' ${COND}
        ORDER by ${FIELD:-scaler} DESC LIMIT ${LIMIT:-36};
    " | mysql -t kts
}


function fn_matov5()
{
    case $1 in
    D)  fn_diftov5 ;;
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e)
        sqls="SELECT DISTINCT date FROM matov5 ORDER by date DESC LIMIT ${LIMIT:-10}"
        #mysql -N kts<<<"${sqls}" | cat -n
        mysql -N kts<<< "SELECT DISTINCT date FROM matov5 WHERE date<='${END}' ORDER by date DESC LIMIT 10" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        LIMIT=15 fn_matov5 l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    d)
        date=`fn_get_date ${2:-1}`
        mysql -N kts<<< "DELETE FROM matov5 WHERE date='${date}'"
        fn_echo_succ "DELETE ${date} FROM matov5 succ!"
        ;;
    [0-9]*)
        date=`fn_get_date ${1:-1}`
       #END=${date} fn_ddetov25
        test -n "$DDETOV5" &&
        END=${date} fn_ddetov5 ||               # fast create head-200
        END=${date} fn_ddetov21
        ;;
    *)
        echo "Usage: SCREENER matov5 {l|e|d|D|iEND}"
        ;;
    esac
}

function fn_lohi()
{
    iNUM=${NUM:-8}

    case $1 in
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e)
        # mysql -N kts<<< "SELECT DISTINCT end FROM mat_lohi WHERE num=${iNUM} ORDER by end DESC LIMIT ${LIMIT:-10}" | cat -n
        mysql -N kts<<< "SELECT DISTINCT end FROM mat_lohi WHERE num=${iNUM} && end<='${END}' ORDER by end DESC LIMIT 10" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        LIMIT=15 fn_lohi l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    d)
        [ -z "${2}" ] && echo "Usage: d sta end" && OPT='-C10' fn_lohi e
        sta=${2}
        end=${3:-$sta}
        local i=
        for i in `seq $sta $end`; do
            # 因在for()中反复调用，使用iEND=而非END=，保证fn_get_date的正确性
            iEND=`fn_get_date ${i}`
            mysql -N kts<<< "DELETE FROM mat_lohi WHERE end='${iEND}' and num=${iNUM}"
            fn_echo_succ "DELETE ${iEND}[${iNUM}] FROM mat_lohi succ!"
        done
        exit
        ;;
    [0-9]*~[0-9]*)
        sta=${1%%~*}
        end=${1##*~}
        local i
        for (( i=${end}; i>=${sta}; i-=1 )); do
            SCREENER lohi ${i}
            xt_ret $? "error or interupted" || exit
        done
        exit
        ;;
    [0-9]*)
        iEND=`fn_get_date ${1}`
        ;;
    *)
        echo "
        SCREENER lohi <param>
            d s e: RELIZING, seq s e | xargs -I {} SCREENER lohi d {}
            exist: exist dates
            list : dates list with num
            n    : 1 is latest
            1~99 : 指定生成范围
        "
        exit
        ;;
    esac

    sqls="SELECT count(id) FROM mat_lohi WHERE end='${iEND}' and num=${iNUM} LIMIT 1;"
    count=`mysql -N kts <<< "${sqls}"`
    xt_ret $? "" || return $?

    if [ "${count:-0}" -gt 0 ]; then
        fn_echo_warn "${iEND}:${iNUM} exist, copy it"
        echo "
        TRUNCATE TABLE tbl_lohi;
        INSERT INTO tbl_lohi(code,date1,date2,off,high,low,lohi,scale,amount,volume,mavol5)
                     SELECT  code,date1,date2,off,high,low,lohi,scale,amount,volume,mavol5
                     FROM    mat_lohi WHERE end='${iEND}' and num=${iNUM};
        " | mysql kts
        return 0
    fi

    fn_echo_succ "    build lohi on ${iEND}..."

    echo "
    SET @END='$iEND';
    SET @NUM=${iNUM};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    $DROP zxg;
    $CREATE zxg LIKE codes;
    INSERT INTO zxg(code) SELECT DISTINCT code FROM day WHERE date<='${iEND}' and code<888888;

    call sp_visit_tbl('zxg', @fn_lohi);
    INSERT INTO mat_lohi(end,num,code,date1,date2,off,high,low,lohi,scale,amount,volume,mavol5)
        SELECT  '${iEND}',${iNUM},code,date1,date2,off,high,low,lohi,scale,amount,volume,mavol5 FROM tbl_lohi;
    " | tee -a $mps_god
    mysql $OPT -t kts < $mps_god
    xt_ret $? "${FUNCNAME}" || return $?
    # fn_lohi_repair ${iEND}
}

function fn_dde()
{
    case $1 in
    l)  sqls="SELECT date from day WHERE code=900001 && date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" 
        mysql -N kts<<<"${sqls}" | cat -n; exit ;;
    e|*)
        sqls="SELECT DISTINCT date FROM dde ORDER by date DESC LIMIT ${LIMIT:-10}"
        # mysql -N kts<<<"${sqls}" | cat -n
        mysql -N kts<<< "SELECT DISTINCT date FROM dde WHERE date<='${END}' ORDER by date DESC LIMIT ${LIMIT:-10}" > ${chao}.dlist
        fn_echo_succ "whites-gona-cre.${FUNCNAME[0]}:"
        fn_dde l | grep ${OPT:-'-B100'} --color -f ${chao}.dlist
        exit
        ;;
    esac
}

function fn_xin()
{
    PARTS=f SELECT blk U 40
    xt_ret $? "" || return $?

    YIST=${chao}.blk fn_yist
    PREV4=`fn_get_date ${NUM:-4}`

    sqls="
    SELECT d.code, sum(close/yesc<=1.05) as rise  FROM day d $WHERE date>='${PREV4}' and date<='${END}'
    GROUP by code HAVING rise>=${DOOR:-4}
    "
    # mysql -t kts <<< "${sqls}"
    fn_echo_succ "xin@${END} feed cond [all.rise <= 5%]"
    CHAO=1 fn_chao ${chao}.xin
}

function fn_std()
{
    YIST=${YIST:-${chao}.xin} fn_yist
    sqls="
    SELECT d.code, ROUND(100*(STD(close)/yesc),2) as SD FROM dorat d 
    $WHERE date='${END}' and time>='09:59:00' && time<='13:30:00'
    GROUP by code
    ORDER by SD ASC
    "
    mysql -t kts <<< "${sqls}"
}

function fn_main()
{
    cmdlist=(
    "dugu9jian          [print]               # wchng是成本均线"
    "6maishenjian       [print]               # wchng是成本均线"
    "9jian              code [field]          # #{NUM}日，个股成本分析"
    "6jian              code [field]          # #{NUM}日，个股成本分析"
    "nouse              [field]               # "
    "hilo               code...               # #{YIST}下跌幅度计算，除权后比较准确"
    #focus              [field]               # #{YIST:-.soptter.trade}->zxg and 9jian"
    #act                code                  # 2 hour 曲线陡峭"
    #ac5                code                  # 5 hour"
    #ac6                code                  # 3 day TOV5 * .618"
    #acf                code                  # 5 day TOV5 {0|1|2}~{tov10/2, tov5, tov20/2}"
    #acc                code                  # 10day NMC_RATIO=tov10 Acceleration day"
    #bei                {code...|file}        # 完整换手 ZIZE=6 nmemb=1 NMC_RATIO=100%"
    #fbi                code                  # 完整换手 bei的个例 "
    #wma                [field]               # mavol520s's别名 其ma是wchng"
    #ma5D20             [field]               # ma120局部"
    "xin                                      # 新股4天未有大涨幅者"
    "std                                      # 分时数据的STD"
    "dde                {l|e}                 # db201数据"
    "lohi               {l|e|d|iEND}          # #{YIST}下跌幅度计算"
    "matov5             {l|e|d|iEND}          # maval5"
    "ma1020             {l|e|d|iEND}          # t5.tov>3.5"
    "ma120              {l|e|d|iEND}          # ma20+ma120"
    "xtov               {l|e|d|iEND}          # extreme-tov"
    "tt25               code                  # t5.tov>3.5"
    )

    # SCREENER的宗旨，弃子取势
    # 存储过程函数文件的最后5行都是注释
    cd $cdpath
    head -n -5 $mps_org > $mps_god

    # 为提高效率，可能使用临时表，调试时备份可使用 call sp_cp_tbl('fr', 'to');
    fn_set_END
    [ `date +%H%M%S` -gt 150000 ] && CLOSING=${END} || CLOSING=${PREV}
    fn_execute "$@" || return $?
}

fn_main "$@"
# fn_main 4
