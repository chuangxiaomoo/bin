#! /bin/bash
#---------------------------------------------------------------------------
#          FILE: SCREENER.sh
#         USAGE: ./SCREENER.sh 
#   DESCRIPTION: 
#        AUTHOR: chuangxiaomoo (God helps those who help themselves) 
#  ORGANIZATION: 
#       CREATED: 2013-12-11 08:46:51 AM
#      REVISION: 1.0 
#---------------------------------------------------------------------------

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc


function fn_get_block_info() 
{
    # 显示当前选中，及可选BLOCK列表
    # "show create table test;" | grep 'COMMENT=' 
    
    return 1
}

function fn_set_block_info() 
{
    # 从列表中选择BLOCK
    # "alter table 表名 comment '注释';"
    
    return 1
}

function fn_get_open_pcnt() 
{
    # 获取开市时间百分比，用于预测当日量比
    DATE=`date +%Y-%m-%d`
    sec_0930=$(date +%s -d "${DATE} 09:30:00") 
    sec_1130=$(date +%s -d "${DATE} 11:30:00")
    sec_1300=$(date +%s -d "${DATE} 13:00:00")
    sec_1500=$(date +%s -d "${DATE} 15:00:00")
   #sec_curr=$(date +%s -d "${DATE} 16:00:00")
    sec_curr=$(date +%s )
    sec_open=0

    if [ "$sec_curr" -lt ${sec_0930} ] ; then
        sec_open=0
    elif  [ "$sec_curr" -lt ${sec_1130} ]; then
        sec_open=$(expr $sec_curr - $sec_0930) 
    elif  [ "$sec_curr" -lt ${sec_1300} ]; then
        sec_open=7200
    elif  [ "$sec_curr" -lt ${sec_1500} ]; then
        sec_open=$(expr $sec_curr - $sec_1300 + 7200) 
    else
        sec_open=14400
    fi

    # echo $sec_open
    sec_pcnt=$(expr ${sec_open}00 / 14400)
    echo $sec_pcnt
}

function fn_get_13d_20psink() 
{
    cat <<-"HERE"
    4日内从历史最高点回落时选择，
    前期上升速度必须快，8日涨幅30%，13日涨幅在40%以上。
    如观察日2013-12-12，
    失败案例：
    新宁物流(300013) 由于是从最高点的第2波下降，必也以“疲惫”

    成功案例：
    北京君正(300223) 13日涨幅 83% = (33-18)/18
    潜能恒信(300191) 13日涨幅 73% = (33-19)/19

    如此，可选
    奥普光电 002338
    麦捷科技 300319
    奋达科技 002681

    
    此类波动频繁之属，做好波段操作，特别是大盘行情不好的日子。大着眼，小着手。
	HERE

    echo "call sp_visit_tbl('cap', 2);" | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
}

# 大写变量作为全局，小写作为内部
function fn_get_1_swing_num() 
{
    percent=${1:-8}
    if [ "${percent%.*}" -lt 0 ] ; then
        swing_cmd="HAVING rise < $percent"
    else
        swing_cmd="HAVING rise > $percent"
    fi
    echo "
    DELETE from tbl_visit;
    INSERT INTO tbl_visit(code,sink) 
    SELECT code,100*(close-yesc)/yesc as rise FROM day 
        WHERE date='$END' $swing_cmd ORDER by rise ${ASC:-DESC}; 
    " | mysql $mo kts
    fn_cp_tbl tbl_visit pipe
    ./up add_tbl_visit_2_zixuangu   # 添加到ZXG，可根据需要再进行排序
    ./SELECT app_nmc_name               # 追加表名打印
    # no need source 
    exit
}

function fn_sort_amount() 
{
    # 可扩展 'tbl_visit' 的表定义
    # where d.code = c.code 非常重要
    # as 语句可在 FROM 子句中
    echo "
    DELETE from tbl_visit;
    INSERT INTO tbl_visit(code,sink,amount,turnover) 
    SELECT d.code, $RISE as rise, 
        amount, $TURNOV as turnover FROM day as d, cap as c 
        WHERE d.code = c.code and d.date='$END' 
        ${COND} ORDER by amount ${ASC:-DESC} limit ${LIMIT:-48};
	" | mysql -t kts
    fn_cp_tbl tbl_visit pipe
    ./up add_tbl_visit_2_zixuangu       # 添加到ZXG，可根据需要再进行排序
    ./SELECT app_nmc_name amount        # 追加表名打印
}


function fn_sort_turnover() 
{
    echo "
    DELETE from tbl_visit;
    INSERT INTO tbl_visit(code,sink,amount,turnover) 
    SELECT d.code, $RISE as rise, 
        amount, $TURNOV as turnover FROM day as d, cap as c 
        WHERE d.code = c.code and d.date='$END' 
        ${COND} ORDER by turnover ${ASC:-DESC} limit ${LIMIT:-48};
	" | mysql -t kts
    fn_cp_tbl tbl_visit pipe
    ./up add_tbl_visit_2_zixuangu       # 添加到ZXG，可根据需要再进行排序
    ./SELECT app_nmc_name turnover      # 追加表名打印
    
}

function fn_get_n_swing_num() 
{
    echo " 
    这些类股都是振荡股，莫作留恋。
    "
    [ "$#" -eq 1 ] && echo "Usage: 要么不带参数，要么两个参数" && exit
    tailrise=8
    daynum=${1:-2}
    fullrise=${2:-17}

    # SELECT * FROM day WHERE date=$END and (close-yesc)/yesc > 0.08;
    # date=''需要单引号
    echo "
    DROP TABLE IF EXISTS codes;
    CREATE TABLE codes (
        id          INT PRIMARY key AUTO_INCREMENT NOT NULL,
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0
    );
    INSERT INTO codes(code)
    SELECT code FROM day WHERE date='$END' and 100*(close-yesc)/yesc > $tailrise;
    " | mysql $mo kts

    if [ "$fullrise" -lt 0 ] ; then
        intbl=cap
    else
        intbl=codes
    fi

    echo "
    SET @argv_change = $fullrise;
    SET @argv_n = $daynum;
    call sp_visit_tbl('$intbl', @fn_flt_n_day_change);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
}


function fn_get_stat_turnov() 
{
    local usage="Usage: ${FUNCNAME[0]} code start [end]"
    fn_is_digit $1
    xt_ret $? "$usage" || return $?

    [ -n "${START:=${2}}" ]
    xt_ret $? "$usage" || return $?

    END=${3:-${END}}


    echo "
    SET @START='$START';
    SET @END='$END';
    SET @NUM=`mysql -N kts<<<"SELECT count(*) FROM day WHERE code=900001 and date>='$START' and date<='$END'"`
    call sp_stat_turnov('$1');
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
}

function fn_get_down_turnov() 
{
    local usage="Usage: ${FUNCNAME[0]} start [end]"
    START=${1:-${START}}
    END=${2:-${END}}

    [ -n "${START}" ] && [ -n "${END}" ]
    xt_ret $? "$usage" || return $?

    # 指定环境变量TBL来进行测试
    TBL=${TBL:-'cap'}

    # 注意更新表 $TBL
    echo "
    To visit `mysql -N kts<<<"SELECT count(*) FROM ${TBL}"` codes on table $TBL...
    "

    echo "
    SET @DOWNSLOPE='${DOWNSLOPE:-1}';
    SET @START='$START';
    SET @END='$END';
    SET @NUM=`mysql -N kts<<<"SELECT count(*) FROM day WHERE code=900001 and date>='$START' and date<='$END'"`;
    call sp_visit_tbl('$TBL', @fn_get_down_turnov);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "source $mps_god fail" || return $?

    echo '
    提示1: 考虑双日顶，high日绿，边界前移一日，`300301 2014-01-22`构筑3日顶.
    提示2: 最高价日为红，则70%计入下跌换手; 为绿，全为下跌换手
    提示3: 超过80%即可考虑操作，跌幅亦为重要参考.
    '
}

function fn_get_rise_turnov() 
{
    DOWNSLOPE=0
    fn_get_down_turnov $@
}

function fn_insert_codes_2_table() 
{
    [ -z "${1}" ] && echo "Usage: insert tbl_name" && exit 1
    echo "
    INSERT INTO ${1}(code) SELECT code FROM ${tbl_ma_date} WHERE ${COND0};
    " | mysql kts
}

function fn_get_ma345()
{
    END=${1:-${END}}
    tbl_ma_date=tbl_mx_${END//-/_}

    if mysql kts<<<"SHOW TABLES" | grep -q ${tbl_ma_date}; then
        # 表 ${tbl_ma_date} 存在，且是闭市后构建
        # 表 tbl_ma345 是TBL的分析结果，供后续处理分析。
        if [ -f /tmp/mx/${tbl_ma_date} ]; then
            if [ "cap" = "${TBL:-cap}" ]; then
                fn_cp_tbl ${tbl_ma_date} tbl_ma345;
            else
                echo "
                DELETE from tbl_ma345;
                INSERT INTO tbl_ma345 SELECT * FROM ${tbl_ma_date} 
                            WHERE code in (SELECT code FROM ${TBL});  
                " | mysql kts # | tee /dev/stderr 
                echo
            fi
            return 0
        fi
    fi

    echo "    build on ${TBL:-cap}..."

    echo "
    SET @END='$END'; 
    call sp_visit_tbl('${TBL:-cap}', @fn_get_ma345);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"

    if [ "${TBL:-cap}" = "cap" ] ; then
        fn_cp_tbl tbl_ma345 ${tbl_ma_date}
        xt_ret $? "fn_cp_tbl" || return $?

        # tag a tag, touch file the fisttime after $sec_1500
        sec_1500=$(date +%s -d "15:00:00")
        sec_curr=$(date +%s)
        if !([ "${END}" = "${CURR}" ] && [ "${sec_curr}" -lt "${sec_1500}" ]); then
            mkdir -p /tmp/mx/
            touch /tmp/mx/${tbl_ma_date}
        fi
    fi
    #   tbl_lt_ma5=tbl_lt_ma5_${END//-/_}
    #   tbl_gt_ma5=tbl_gt_ma5_${END//-/_}
    #   tbl_gt_ma3=tbl_gt_ma3_${END//-/_}
    #   # 对2500支个股其进行分类，按 TRD ma5 ma13 的穿越关系
    #   fn_create_tbl_codes $tbl_lt_ma5 $tbl_gt_ma5 $tbl_gt_ma3
    #   xt_ret $? "create tbl error" || return $?
    #   COND="close<ma5"                 
    #   fn_insert_codes_2_table $tbl_lt_ma5
    #   xt_ret $? "insert codes table" || return $?

    #   COND="close>=ma5 and close<ma13" 
    #   fn_insert_codes_2_table $tbl_gt_ma5
    #   xt_ret $? "insert codes table" || return $?

}

function fn_ma_ray() 
{
    echo "build ${END}..."
    fn_reset_sqlsource
    fn_get_ma345

    mysql -N kts<<<"SELECT code FROM tbl_ma345 WHERE 
                    ma5>ma13 and ma13>ma34 ${COND}" | \
        xargs -n4 | tee /dev/stderr | xargs up add_codes_2_dzh2tbl 
    return     
}

function fn_trd_cross_maX() 
{
    echo "build ${PREV}..."
    fn_reset_sqlsource
    END=${PREV} fn_get_ma345

    fn_create_tbl_codes tbl_fr_ma_where_cond0
    xt_ret $? "create tbl error" || return $?

    COND0="${COND0}" fn_insert_codes_2_table tbl_fr_ma_where_cond0
    xt_ret $? "insert codes table" || return $?

    echo "build ${END}..."
    fn_reset_sqlsource
    TBL=tbl_fr_ma_where_cond0 fn_get_ma345
    xt_ret $? "fn_get_ma345" || return $?

    local sqls="(SELECT * FROM day WHERE date='${END}') as d"
    local conds="m.code=d.code and ${COND1}"
    mysql -N kts<<<"SELECT m.code FROM tbl_ma345 as m, ${sqls} WHERE ${conds}" | \
        xargs -n6 | tee /dev/stderr | xargs up add_codes_2_dzh2tbl 

    xt_ret $? "mysql" || return $?

    # 下面方案在实时行情时会很慢
    # local prev=tbl_mx_${PREV//-/_}
    # local curr=tbl_mx_${END//-/_}
    # mysql -N kts<<<"SELECT c.code FROM ${prev} as p,${curr} as c \
    #     WHERE p.code=c.code and p.close<p.ma13 and c.close>c.ma13" |\
    #     xargs -n4 | tee /dev/stderr | xargs up add_codes_2_dzh2tbl 
}

function fn_low_cross_maX()
{
    fn_get_ma345
    xt_ret $? "fn_get_ma345" || return $?

    local sqls="(SELECT * FROM day WHERE date='${END}') as d"
    local conds="m.code=d.code and ${COND1}"
    mysql -N kts<<<"SELECT m.code FROM tbl_ma345 as m, ${sqls} WHERE ${conds}" | \
        xargs -n6 | tee /dev/stderr | xargs up add_codes_2_dzh2tbl 

    xt_ret $? "mysql" || return $?
}

function fn_low_cross_ma5() 
{
    # ma5<ma13 --> 触底反弹
    COND1="ma5<ma13 and d.yesc>ma5 and d.low<ma5 and d.close>ma5" fn_low_cross_maX
    xt_ret $? "xx" || return $?
}

function fn_trd_cross_ma5() 
{
    COND0="close<ma5 and ma5<ma13" COND1="m.close>ma5" fn_trd_cross_maX
    xt_ret $? "xx" || return $?
}

function fn_trd_cross_ma13() 
{   
    COND0="close<ma13" COND1="m.close>ma13" fn_trd_cross_maX
    xt_ret $? "xx" || return $?
}

function fn_trd_cross_5_13() 
{
    COND0="close<ma5 and close<ma13" COND1="m.close>ma5 and m.close>ma13" fn_trd_cross_maX
    xt_ret $? "xx" || return $?
}


function fn_ma5_cross_ma13() 
{
    COND0="ma5<ma13" COND1="ma5>ma13" fn_trd_cross_maX
    xt_ret $? "xx" || return $?
}

function fn_high_cross_ma5() 
{
    COND0="close<ma5" COND1="d.high>ma5 and m.close<ma5" fn_trd_cross_maX
    xt_ret $? "xx" || return $?
}

function fn_ana_ma345() 
{
    # 可以配合分时线及上涨进行预测
    # 采用双表联合查询来解决分析的困境
    # ana 的关键在于 cross & 收敛 & 放量上行

    # 更成熟的分类时，END在命令行环境变量中指定
    END=${2:-${END}}

    sqls="SELECT date FROM day WHERE code=900001 and date='$END'"
    if ! mysql -N kts<<<"${sqls}" | grep -q ${END}; then
        echo "Error: ${END} is not a open day!!!" && exit 1
    fi
    sqls="SELECT date FROM day WHERE code=900001 and date<='$END'"
    PREV=`mysql -N kts<<<"${sqls} ORDER by date DESC LIMIT ${STEP:-1},1" `

    # --------- 做分支 --------------- 
    cmdlist=(
    "ma_ray             # ma5 > ma13 > ma34"
    "trd_cross_ma5      # close 上穿 ma5"
    "trd_cross_ma13     # close 上穿 ma13"
    "trd_cross_5_13     # close 上穿 ma5 and ma13"
    "low_cross_ma5      # 低开  上穿 ma5"
    "ma5_cross_ma13     # ma5   上穿 ma13"
    "high_cross_ma5     # high  上穿 ma5, !close"
    )
    fn_execute "$@" || return $?
}

function fn_main() 
{
    CURR=`fn_maxdate`
    END=${END:-${CURR}}
    # SCREENER的宗旨，弃子取势
    # xet_block_info 为 sp_visit_tbl() 选定相应的BLOCK 
    cmdlist=(
    "get_stat_turnov      code start [end]      # 个股区间换手统计"
    "get_down_turnov      start [end]           # 100%下降净换手"
    "get_ma345            [end]                 # ma 5 13 34 55"
    "ana_ma345            index [end]           # 分析ma 5 13 34 55"
    "get_rise_turnov      start [end]           # 100%上升净换手"
    "get_13d_20psink                            # 8日13日SINK超20%"
    "get_1_swing_num      [RISE_PERCENT:-8]     # 单日振幅，小于0计算跌幅"
    "get_n_swing_num      [SWING_PERCENT:-16]   # 双日振幅，小于0计算跌幅"
    "sort_amount          [LIMIT_NUM:-48]       # --- 成交量排名"
    "sort_turnover        [LIMIT_NUM:-48]       # 最新日换手排名"
    # ----------------    ABOVE FIXED SEQUENCE  -------------------
    "get_block_info                             # 查看当前BLOCK"
    "set_block_info                             # 设置当前BLOCK"
    )

    # 存储过程函数文件的最后5行都是注释
    cd $workdir
    head -n -5 $mps_org > $mps_god

    # 为提高效率，可能使用临时表，必要请备份相应文件 call sp_cp_tbl('fr', 'to');
    fn_execute "$@" || return $?
}

  fn_main "$@"
# fn_main 4
