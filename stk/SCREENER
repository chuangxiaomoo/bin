#! /bin/bash
#---------------------------------------------------------------------------
#          FILE: SCREENER.sh
#         USAGE: ./SCREENER.sh
#   DESCRIPTION:
#        AUTHOR: chuangxiaomoo (God helps those who help themselves)
#  ORGANIZATION:
#       CREATED: 2013-12-11 08:46:51 AM
#      REVISION: 1.0
#---------------------------------------------------------------------------

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc


function fn_exclude()
{
    xRDdate=`mysql -N kts<<<"SELECT date from tbl_xRDdate ORDER by date DESC LIMIT 1"`
    exclude=`mysql -N kts <<<"SELECT code from xRD WHERE date>'${xRDdate}' and date<='${END}'"`
    echo -n ${exclude} | tr ' ' , > ${1}
    
}

function fn_dugu9jian()
{
    fn_exclude ${exclude0}

    if [ "${TBL}" = wind ] ; then
        if [ "`cat ${file_wb}`" != ${CURR} ]; then
            echo "wind is out of day. continue to run [./up wind]"
            exit 1
        fi
    fi

    fn_txttbl
    TBL=${TBL:-'cap'}

    echo "
    To visit `mysql -N kts<<<"SELECT count(*) FROM ${TBL}"` codes on table $TBL...
    "

    echo "
    SET @END='$END';
    SET @NUM=${NUM:-100};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_dugu9jian);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    test -n "${1}" && SELECT 0 ${1:-wchng}

    return 0
}

function fn_6maishenjian()
{
    fn_exclude ${exclude1}
    fn_txttbl
    TBL=${TBL:-'cap'}

    echo "
    To visit `mysql -N kts<<<"SELECT count(*) FROM ${TBL}"` codes on table $TBL...
    "

    echo "
    SET @END='$END';
    SET @NUM=${NUM:-100};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_6maishenjian);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    test -n "${1}" && SELECT 6maishenjian
}

function fn_taox_ratio0()
{
   #columns=date_p,date_c,off_p,off_c,tnov_p,tnov_c,avrg_p,avrg_c,ratio
    columns=date_p,off_p,date_c,off_c,tnov_c,avrg_p,avrg_c,ratio,wchng
    columns=${columns:-'*'}
    columns=t.${columns//,/,t.}

    echo ----- COND: $COND -----
    function fn_get_tbl_taox_dive()
    {
        tbl_super_dive="
        SELECT t.code,  ${columns}, c.nmc,c.name 
           FROM ${tablex:-tbl_taox} as t, cap as c 
           WHERE t.code = c.code HAVING 1 ${COND} 
           ORDER by ${1:-ratio} ${ASC:-asc} limit ${LIMIT:-24}
        "
        echo "${tbl_super_dive}"
    }

    fn_get_tbl_taox_dive $1
    mysql $mo -t kts <<< "${tbl_super_dive}" |\
        sed -e '1,3s/----+$/\+/g' -e '$s/----+$/\+/g' -e '2s/    |$/|/g'
    xt_ret ${PIPESTATUS[0]} "${FUNCNAME}" || return $?
}

function fn_taox_ratio()
{
    iEND=${1:-${END}}
    TBL=${TBL:-'cap'}
    NUM=${NUM:-240}        # 需要200%，所以应该比较大

    fn_isdate ${iEND} 
    xt_ret $? "    Usage: #{1} must be date like 2008-08-08" || return $?

    head -n -5 $mps_org > $mps_god
    echo "
    SET @END='$iEND';
    SET @NUM=${NUM};
    SET @FORCE=${FORCE:-0};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('$TBL', @fn_taox_ratio);
    " >> $mps_god # | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    [ "fn_tao5" = ${FUNCNAME[1]} ] || \
    fn_taox_ratio0 ${2:-ratio}
}

function fn_fbi_ratio()
{
    iDT=${1:-${DT}}
    TBL=${TBL:-'cap'}
    NUM=${NUM:-900}        # 30/day

    head -n -5 $mps_org > $mps_god
    echo "
    SET @DT=${iDT};
    SET @NUM=${NUM};
    SET @NMC_RATIO=${NMC_RATIO};
    call sp_visit_tbl('$TBL', @fn_fbi_ratio);
    " >> $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_9jian()
{
    test -n "${1}" && fn_iscode ${1}       
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_cost9 up file_to_table ${code}
    TBL=tbl_cost9 NUM=${NUM:-240} fn_dugu9jian
    SELECT 0
}

function fn_6jian()
{
    test -n "${1}" && fn_iscode ${1}       
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_cost6 up file_to_table ${code}
    daysql="SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC limit 1"
    daysql=${daysql} TBL=tbl_cost6 NUM=${NUM:-240} fn_6maishenjian ${2:-wchng}
}

function fn_flush_code()
{
    echo "
    CREATE TABLE IF NOT EXISTS ${TBL} (
        id          INT PRIMARY key AUTO_INCREMENT NOT NULL,
        code        INT(6) ZEROFILL NOT NULL DEFAULT 0
    );
    TRUNCATE TABLE ${TBL};
    INSERT INTO ${TBL}(code) VALUES(${1});
    " | mysql -N -B kts
    
    return $?
}

function fn_tao()
{
    test -n "${1}" && fn_iscode ${1}       
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_tao1 fn_flush_code ${code}
    TBL=tbl_tao1 NUM=${NUM:-240} fn_taox_ratio ${END} ${2:-ratio}
}

function fn_nmemb_of_10percent()
{
    # percent=5
    turnov200="
    SELECT sum(volume) FROM 
        (SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC LIMIT 200)
        as tbl INTO @sum_vol_200d;
        SELECT round((100*@sum_vol_200d/shares),2) FROM cap WHERE code = ${code};
    " 
    # mysql -N -B kts <<< "${turnov200}" ;exit

    nmemb=`echo "
    SELECT sum(volume) FROM 
        (SELECT * FROM day WHERE code=${code} and date<='${END}' ORDER by date DESC LIMIT 100)
        as tbl INTO @sum_vol;
    SELECT floor(${percent:-10}/(@sum_vol/shares)) FROM cap WHERE code = ${code};
    " | mysql -N -B kts`
    [ "${nmemb}" -ne 0 ] || nmemb=1
    return $?
}


function fn_clr_exitcode()
{
    echo "
     CREATE table IF NOT EXISTS exitcode (
     code   INT(6) ZEROFILL NOT NULL DEFAULT 0
     );
     truncate TABLE exitcode;
    " | mysql kts
    return $?
}

function fn_sql_exitsucc()
{
    return `mysql -N -B kts <<<"SELECT count(code) FROM exitcode"`
}

function fn_tao5()
{
    test -n "${1}" && fn_iscode ${1}       
    xt_ret $? "invalid code[$1]" || return $?

    local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
    TBL=tbl_tao1 fn_flush_code ${code}

    # 强制 nmemb 以改变ratio粒度
    test -n "$nmemb" || fn_nmemb_of_10percent
    xt_ret $? "" || return $?

    ZIZE=${ZIZE:-10}  # 默认 2时为300%，调整以查看更多

    local sql="SELECT date from day WHERE code = ${code} and date<='${END}'"
    dates=(`mysql -N kts <<< "${sql} ORDER by date DESC" | 
                awk -v nmemb=${nmemb} '{if (! (a++%nmemb) ) print $1}'`)

    local size=${#dates[@]}
    let   idx=${size}-1
    local iNUM=${NUM:-300}

    echo "
    code:${code} size:${size} nmemb:${nmemb} iNUM:${iNUM}
    going to list ${ZIZE} recodrs ${dates[$idx]} ~ ${dates[0]} ...
    "

    mysql kts <<<"truncate TABLE tbl_tao5"
    xt_ret $? "Don't worry, this error show when run 1st time"
    fn_clr_exitcode
    xt_ret $? "try create tbl_tao5: SCREENER tao 2" || return $?

    local i=0
    for (( i=0; i<${ZIZE}; i+=1 )); do
        [ "${i}" -eq 0 ] && b4=3 || b4=0
        FORCE=1 TBL=tbl_tao1 NUM=${iNUM} fn_taox_ratio ${dates[$i]} # | grep -B${b4} ${code}
        xt_ret ${PIPESTATUS[0]} "" || return $?

        if ! fn_sql_exitsucc; then
            fn_echo_warn "    so_little_data[$i ${dates[$i]}], try: up day ${code} ${dates[$idx]} 600\n"
            local RETCODE=1
            break
        fi
    done

    [ "fn_bei" = "${call}" ] || \
    SELECT tao5
    xt_ret $? "" || return $?

    col='code,date_p,date_c,off_p,off_c,tnov_p,tnov_c'
    col="${col},avrg_p,avrg_c,ratio,wchng"
    colA="A.${col//,/,A.}"
    echo "
    INSERT INTO tbl_rdiff(${col},cdiff,rdiff,dbrat)
    SELECT ${colA}, (A.avrg_c-B.avrg_c) as cdiff, (A.ratio-B.ratio) as rdiff,
                    100*(2*A.close-(A.avrg_p+A.avrg_c))/(A.avrg_p+A.avrg_c) as dbrat FROM tbl_tao5 A 
    INNER JOIN tbl_tao5 B on(A.id<B.id) GROUP BY A.id;      -- 此处条件应该是 on A.id=B.id+1
    " | mysql -N kts
    xt_ret $? "" || return $?

    return ${RETCODE:-0}
}

function fn_turnov5()
{
    # date<'$CLOSING' 不包括今日：
    # 1. 交易中计算，不会令结果平均时变小
    # 2. 转折日成交量都会大增，此举可提高灵敏度

    if [ "${TOV5:-0}" -eq 0 ]; then
        # tov10/2 在上涨价顶时比 tov5 敏感
        sql="
        SELECT round(sum(d.volume)/cap.shares/2, 3) as nmc_ratio FROM 
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 10)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.2);
        " 
    elif [ "${TOV5:-0}" -eq 1 ]; then
        # tov5 在价底反弹时比 tov10/2 敏感
        sql="
        SELECT round(sum(d.volume)/cap.shares, 3) as nmc_ratio FROM 
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.2);
        " 
    elif [ "${TOV5:-0}" -eq 2 ]; then
        # tov20/2 海龟
        sql="
        SELECT round(sum(d.volume)/cap.shares/2, 3) as nmc_ratio FROM 
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 20)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.4,@irt,.4);
        "
    elif [ "${TOV5:-0}" -eq 5 ]; then
        # min30 -- tov5/5
        sql="
        SELECT round(sum(d.volume)/cap.shares/(5*${TOV_DIVISION:-1}), 3) as nmc_ratio FROM 
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt,.123);
        " 
    elif [ "${TOV5:-0}" -eq 6 ]; then
        # tov10/2 * .618
        sql="
        SELECT round(sum(d.volume)/cap.shares, 3) as nmc_ratio FROM 
        (SELECT * FROM day WHERE code=${code} and date<'$CLOSING' ORDER by date DESC LIMIT 5)
        as d, cap WHERE d.code = cap.code INTO @irt;
        SELECT IF(@irt<.2,@irt*.618,.123);
        " 
    fi
    mysql -N kts<<<"${sql}"
}

function fn_bei()
{
    [ -z "$1" ] && echo "Usage: bei {file|code...}" && exit 1
    [ -f "${1}" ] && lst=(`awk '/^[^#]/{print $1}' ${*} | sort -u`) || lst=(${@})

    echo "
    to visit ${#lst[@]} codes
    "

    # DROP TABLE tbl_tao5;
    # DROP TABLE tbl_tao1;
    # DROP TABLE tbl_taox;
    # DROP TABLE tbl_rdiff;
    # DROP TABLE tbl_fdiff;
    mysql kts <<<"truncate table tbl_rdiff;"
    xt_ret $? "try create tbl_rdiff: SCREENER tao 2" || return $?

    local code=
    for code in ${lst[@]}; do
        #echo "$code" 
        irt=`fn_turnov5 $code`
        ZIZE=${ZIZE:-3} NMC_RATIO=${NMC_RATIO:-${irt}} call=fn_bei fn_tao5 ${code}
    done

    SELECT rdiff
    return $?
}

function fn_wma()
{
    fn_txttbl
    tbl_tov_date=tbl_tov_${END//-/_}

    if mysql kts<<<"SHOW TABLES" | grep -q ${tbl_tov_date}; then
        # 表 ${tbl_tov_date} 存在，且是闭市后构建
        # 表 tbl_mavol520s 是TBL的分析结果，供后续处理分析。
        if [ -f /tmp/tov/${tbl_tov_date} ]; then
            if [ "cap" = "${TBL:-cap}" ]; then
                WMA=`cat ${date_wma} 2>/dev/null`
                if [ "${WMA}" != ${END} ]; then
                    fn_cp_tbl ${tbl_tov_date} tbl_mavol520s;
                    echo ${END} > ${date_wma}      # 不用每次都 fn_cp_tbl tbl_mavol520s
                else
                    echo "    Repeat wma, ignore!"
                fi
            else
                echo "
                DELETE from tbl_mavol520s;
                INSERT INTO tbl_mavol520s SELECT * FROM ${tbl_tov_date}
                            WHERE code in (SELECT code FROM ${TBL});
                " | mysql kts # | tee /dev/stderr
                xt_ret $? "mysql" || return $?
                echo
            fi
            return 0
        fi
    fi

    echo "    build on ${TBL:-cap}..."

    echo "
    SET @END='$END';
    call sp_visit_tbl('${TBL:-cap}', @fn_mavol520s);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?

    if [ "${TBL:-cap}" = "cap" ] ; then
        fn_cp_tbl tbl_mavol520s ${tbl_tov_date}
        xt_ret $? "fn_cp_tbl" || return $?

        # tag a tag, touch file the fisttime after $sec_1500
        sec_1500=$(date +%s -d "${END} 15:00:00")
        sec_curr=$(date +%s)
        # ! must append with a whitespace
        if ! ([ "${END}" = "${CURR}" ] && [ "${sec_curr}" -lt "${sec_1500}" ]); then
            mkdir -p /tmp/tov/
            touch /tmp/tov/${tbl_tov_date}
            echo ${END} > ${date_wma}      # 不用每次都 fn_cp_tbl tbl_mavol520s
        fi
    else
        SELECT wma ${@}
    fi
}

function fn_focus()
{
    cat ${YIST:-'.soptter.sulon'} .soptter.trade | awk '/^[^#]/{print $1}'|sort -u> ${file_focus}
    YIST=${file_focus} LIMIT=99 fn_dugu9jian ${1:-wchng}
}

function fn_auto_nmemb()
{
    [ -z "${NMC_RATIO}" ] && return
    nrat=`mysql -N<<<"SELECT round(100*${NMC_RATIO}, 0)"`

    if [ "${nrat}" -le 30 ]; then
        let nmemb0=150/${nrat}
    else
        fn_echo_fail "
        ERROR: NMC_RATIO[${NMC_RATIO}] must less than .20
        "
        exit
    fi

    nmemb=${nmemb:-${nmemb0}}
    #echo ${nmemb}; exit
    return $?
}

function fn_fbi()
{
    fn_iscode ${code:=$1}
    xt_ret $? "" || return $?

    ZIZE=${ZIZE:-6} nmemb=${nmemb:-1} NMC_RATIO=${NMC_RATIO:-1} fn_bei ${code}
}

function ___fbi()
{
    # 最大日换手为20%，以1%为粒度，可以得出`10min`是一个很好的单位，得日数据25单位
    # 若是日换手为4%，以nmemb=7=30/4   <-- 30 即1日数据组（有效取28）
    # 取mi5的NUM=20，即便是歌尔日换手1.5%，亦可得到10组diff数据
    # NMC_RATIO即tov5
    # nmemb = 1%换手公差时之数据组数 = 30/最大日换手 = 30/(tov5/5) = 150/tov5
    # ZIZE取20，太远时，日成交翻番后，往前的数据会不准确
    # 工作条件: volume >= ZIZE+(2*NMC_RATIO)，否则会报 so_little_data，
    fn_auto_nmemb
    NMC_RATIO=${NMC_RATIO:-.2}
    nmemb=${nmemb:-7}
    ZIZE=${ZIZE:-20}

    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    sql="SELECT max(datetime) FROM fenbi WHERE code=${1}"
    dt=`mysql -N kts <<< "${sql}"`

    # 20140707.14{o|h} or 150123.1122 
    grep -q '\.' <<<"${DT}" && DT=20${DT/./}00
    DT=${DT/o/0000}     # o(o'clock)
    DT=${DT/h/3000}     # h(half-clock)
    DT=${DT:-$dt}
    fn_isdatetime ${DT} 
    xt_ret $? "invalid datetime[$DT]" || return $?

    TBL=tbl_fbi1 fn_flush_code ${code}

    local sql="SELECT datetime from fenbi WHERE code=${code} and datetime<=${DT}"
    dates=(`mysql -N kts <<< "${sql} ORDER by datetime DESC" | 
                awk -v nmemb=${nmemb} '{if (! (a++%nmemb) ) print $1}'`)
    test ${#dates[@]} -ne 0
    xt_ret "${PIPESTATUS[0]}" || return $?

    local size=${#dates[@]}
    let   idx=${size}-1
    local iNUM=${NUM:-900}          # 30/day

    echo "
    size: ${size} nmemb: ${nmemb} iNUM:${iNUM} (hour=nmemb[6])
    going to list ${ZIZE} recodrs ${dates[$idx]} ~ ${dates[0]} ...
    "

    mysql kts <<<"truncate TABLE tbl_fbi5; truncate TABLE tbl_fdiff;"
    xt_ret $? "Don't worry, this error show when run 1st time"
    fn_clr_exitcode
    xt_ret $? "clr exitcode" || return $?

    local i=0
    for (( i=0; i<${ZIZE}; i+=1 )); do
        TBL=tbl_fbi1 NUM=${iNUM} fn_fbi_ratio ${dates[$i]}
        xt_ret ${?} "" || return $?

        if ! fn_sql_exitsucc; then
            tovf=`echo "
            SELECT round(sum(volume)/cap.shares, 2) as tov FROM fenbi,cap 
            WHERE fenbi.code=${code} and fenbi.code=cap.code
            " | mysql kts -N`

            fn_echo_warn "    so_little_data[$i ${dates[$i]}], tov[${tovf}], try: mi5 ${code}\n"
            local RETCODE=1
            break
        fi
    done

    col='code,datetime_p,datetime_c,off_p,off_c,tnov_p,tnov_c'
    col="${col},avrg_p,avrg_c,ratio,wchng"
    colA="A.${col//,/,A.}"
    echo "
    INSERT INTO tbl_fdiff(${col},cdiff,rdiff,dbrat)
    SELECT ${colA}, (A.avrg_c-B.avrg_c) as cdiff, (A.ratio-B.ratio) as rdiff,
                    100*(2*A.close-(A.avrg_p+A.avrg_c))/(A.avrg_p+A.avrg_c) as dbrat FROM tbl_fbi5 A 
    INNER JOIN tbl_fbi5 B on(A.id<B.id) GROUP BY A.id;
    " | mysql -N kts
    xt_ret $? "" || return $?

    [ "${RETCODE:-0}" -eq 0 ] && SELECT fbi
    return ${RETCODE:-0}
}

function fn_acc()
{
    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    irt=`TOV5=2 fn_turnov5 $code`
    cp ${mps_acc} ${mps_god}

    echo "
    SET @END='${END}';
    SET @NUM=${NUM:-500};
    SET @PARTS=${PARTS:-5};
    SET @PPLUS=${PPLUS:-20};
    SET @NMC_RATIO=${NMC_RATIO:-${irt}};
    call sp_visit_code(${code});
    " >> $mps_god
    fn_clr_exitcode
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
    if ! fn_sql_exitsucc; then
        fn_echo_warn "so_little_data"
        exit
    fi

    SELECT acc
}

function fn_act()
{
    PPLUS=${PPLUS:-50} TOV_DIVISION=3 \
    TOV5=5 fn_acf $@
}

function fn_ac5()
{
    PPLUS=${PPLUS:-20} \
    TOV5=5 fn_acf $@
}

function fn_ac6()
{
    TOV5=6 fn_acf $@
}

function fn_acf()
{
    fn_iscode ${code:=$1}
    xt_ret $? "invalid code[$1]" || return $?

    cp ${mps_acf} ${mps_god}

    sql="SELECT max(datetime) FROM fenbi WHERE code=${1}"
    dt=`mysql -N kts <<< "${sql}"`

    # 20140707.14{o|h} or 150123.1122 
    grep -q '\.' <<<"${DT}" && DT=20${DT/./}00
    DT=${DT/o/0000}     # o(o'clock)
    DT=${DT/h/3000}     # h(half-clock)
    DT=${DT:-$dt}
    fn_isdatetime ${DT} 
    xt_ret $? "invalid datetime[$DT]" || return $?

    DATE2=`fn_str_2_date ${DT}` 
    irt=`CLOSING=${DATE2} fn_turnov5 $code`

    echo "
    SET @DT='${DT}';
    SET @PARTS=${PARTS:-20};
    SET @PPLUS=${PPLUS:-5};
    SET @NMC_RATIO=${NMC_RATIO:-${irt}};
    call sp_visit_code(${code});
    " >> $mps_god # | tee -a $mps_god
    fn_clr_exitcode
    mysql $mo kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
    if ! fn_sql_exitsucc; then
        fn_echo_warn "so_little_data"
        exit
    fi

    SELECT acf
}

function fn_ma5D20()
{
    fn_txttbl
    if ! mysql kts<<<"SHOW TABLES" | grep -q 'tbl_ma240'; then
        echo -e "\n    error: tbl_ma240 not exist\n"
        exit 1
    fi

    echo "
    SET @END='$END';
    call sp_visit_tbl('${TBL:-cap}', @fn_ma5D20);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
}

function fn_ma240()
{
    fn_txttbl
    echo "
    --  ${FUNCNAME} ...
    SET @END='$END';
    call sp_visit_tbl('${TBL:-cap}', @fn_ma60x2x4);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    SELECT ma240 ${@}
}


# start end turnov tpd rat15 rat210 gap2max

function fn_hilo()
{
    fn_exclude ${exclude2}
    fn_txttbl

    if [ -n "${1}" ]; then
        fn_iscode ${1}       
        xt_ret $? "invalid code[$1]" || return $?

        local code=`sed 's/^0*//g' <<< $1 | xargs printf "%06d"`
        up file_to_table ${code}
    else
        if [ -z "${YIST}" ]; then
            echo "Usage: YIST=xxx SCREENER hilo code..." 
            exit
        fi
    fi

    echo "
    SET @END='$END';
    SET @NUM=${NUM:-20};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('${TBL:-zxg}', @fn_hilo);
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_lohi()
{
    case $1 in
    e)
        mysql -N kts<<< "SELECT end,num FROM ( SELECT DISTINCT end,num FROM mat_lohi ) as t"
        exit
        ;;
    d)
        END=`mysql -N kts <<< "SELECT date from day WHERE code=900001 ORDER by date DESC LIMIT ${2:-0},1"`
        mysql -N kts<<< "DELETE FROM mat_lohi WHERE end='${END}'"
        fn_echo_succ "DELETE ${END} FROM mat_lohi succ!"
        exit
        ;;
    l)
        echo "     0  ${END}"
        echo "
        SELECT date from day WHERE code=900001 ORDER by date DESC LIMIT ${LIMIT:-1},10
        " | mysql -N kts | cat -n
        exit
        ;;
    [0-9]*~[0-9]*)
        sta=${1%%~*}
        end=${1##*~}
        local i
        for (( i=${sta}; i<=${end}; i+=1 )); do
            SCREENER lohi ${i}
            xt_ret $? "error or interupted" || exit
        done
        exit
        ;;
    [0-9]*)
        END=`mysql -N kts <<< "SELECT date from day WHERE code=900001 ORDER by date DESC LIMIT ${1:-0},1"`
        ;;
    *)
        echo "
        SCREENER lohi <param>
            d num: del date of index num
            exist: exist dates
            list : dates list with num
            n    : 0 is latest
            0~9  : 指定生成范围
        "
        exit
        ;;
    esac

    fn_exclude ${exclude2}
    fn_txttbl

    iEND=${END:-${PREV}}
    iNUM=${NUM:-8}
    if [ -z "${YIST}" ]; then
        echo "
        TRUNCATE TABLE zxg;
        INSERT INTO zxg(code) SELECT code FROM day WHERE date='${iEND}' and code<765432;
        " | mysql kts
        sql_insert_mat_lohi="
        INSERT INTO mat_lohi(end,num,code,date1,date2,off,high,low,lohi,scale,zYi,volume,mavol5)
            SELECT  '${iEND}',${iNUM},code,date1,date2,off,high,low,lohi,scale,zYi,volume,mavol5 FROM tbl_lohi;"
        # --------------------------------------------------------------- 记得修改正面的 tbl_lohi
    fi

    sqls="SELECT count(id) FROM mat_lohi WHERE end='${iEND}' and num=${iNUM} LIMIT 1;"
    count=`mysql -N kts <<< "${sqls}"`
    xt_ret $? "" || return $?

    if [ "${count:-0}" -gt 0 ]; then
        fn_echo_warn "${iEND}:${iNUM} exist, copy it"
        echo "
        TRUNCATE TABLE tbl_lohi;
        INSERT INTO tbl_lohi(code,date1,date2,off,high,low,lohi,scale,zYi,volume,mavol5)
                     SELECT  code,date1,date2,off,high,low,lohi,scale,zYi,volume,mavol5 FROM mat_lohi WHERE end='${iEND}' and num=${iNUM};

        " | mysql kts
        return 0
    fi

    fn_echo_succ "    build lohi on ${iEND}..."

    echo "
    SET @END='$iEND';
    SET @NUM=${iNUM};
    SET @NMC_RATIO=${NMC_RATIO:-1};
    call sp_visit_tbl('${TBL:-zxg}', @fn_lohi);
    ${sql_insert_mat_lohi}
    " | tee -a $mps_god
    mysql $mo -t kts <<< "source $mps_god"
    xt_ret $? "${FUNCNAME}" || return $?
}

function fn_main()
{
    # END 非空赋值不要移植到dbank 
    CURR=`fn_maxdate`
    END=${END:-${CURR}}
    PREV=`fn_get_prev`
    [ `date +%H%M%S` -gt 150000 ] && CLOSING=${END} || CLOSING=${PREV}

    fn_isdate ${END}
    xt_ret $? "invalid END[$2]" || return $?

    cmdlist=(
    "dugu9jian          [print]               # NUM=61 .NMC end.close analyze"
    "6maishenjian       [print]               # NUM=61 min(close) sort by #{COL}"
    "9jian              code [field]          # #{NUM}日，个股成本分析"
    "6jian              code [field]          # #{NUM}日，个股成本分析"
    "nouse              [field]               # "
    "focus              [field]               # #{YIST:-.soptter.trade}->zxg and 9jian"
    "hilo               code...               # #{YIST}下跌幅度计算"
    "lohi               code...               # #{YIST}下跌幅度计算"
    "act                code                  # 2 hour 曲线陡峭"
    "ac5                code                  # 5 hour"
    "ac6                code                  # 3 day TOV5 * .618"
    "acf                code                  # 5 day TOV5 {0|1|2}~{tov10/2, tov5, tov20/2}"
    "acc                code                  # 10day NMC_RATIO=tov10 Acceleration day"
    "bei                {code...|file}        # 完整换手 ZIZE=6 nmemb=1 NMC_RATIO=100%"
    "fbi                code                  # 完整换手 bei的个例 "
    "wma                [field]               # mavol520s's别名 其ma是wchng"
    "ma5D20             [field]               # ma240局部"
    "ma240              [field]               # ma240整体:5B25+ma60x2x4"
    )

    # SCREENER的宗旨，弃子取势
    # 存储过程函数文件的最后5行都是注释
    cd $workdir
    head -n -5 $mps_org > $mps_god

    # 为提高效率，可能使用临时表，调试时备份可使用 call sp_cp_tbl('fr', 'to');
    fn_execute "$@" || return $?
}

fn_main "$@"
# fn_main 4
