#! /bin/bash -
#---------------------------------------------------------------------------
#       CREATED: 2013-11-12 10:29:02 CST
#---------------------------------------------------------------------------
. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc

function fn_parser_load()
{
    sed -e 1d -e 's/://g' ${fenbi_raw1} | 
    awk -v code=${code} -v date=${date//-/} '{
        printf "%s\t%s%s\t%s\t%s\t%.2f\n", code,date,$1,$2,$4,$5/100
    }' > ${cache}

    test `wc -l <${cache}` -gt 200 
    xt_ret $? "Ignore empty file of ${date}" || {
        cp ${cache} ${cache}.${date}
        return 0
    }

    echo "
    DROP TABLE IF EXISTS tmpfb;
    CREATE TABLE tmpfb (
        code        INT(6)          ZEROFILL NOT NULL, 
        datetime    bigint(14)      NOT NULL, 
        trade       DECIMAL(6,2)    NOT NULL,
        volume      DECIMAL(10,2)   NOT NULL,
        amount      DECIMAL(12,2)   NOT NULL,
        INDEX(code,datetime)
    );

    LOAD DATA LOCAL INFILE '${cache}' INTO TABLE tmpfb;
    INSERT INTO fenbi(code, datetime, trade, volume, amount)
      SELECT code,datetime,trade,sum(volume),sum(amount) FROM 
        (SELECT *,round(datetime%1000000/${mod_fb},0) as grp from tmpfb ORDER by datetime DESC) 
            as newfb GROUP by grp;
    " | mysql -t kts 
}

function fn_do_once()
{
    sina='http://market.finance.sina.com.cn/downxls.php?'
    [ ${code:0:1} -eq 6 ] && sec=sh || sec=sz

    echo download ${code} on ${date}
    $WGET "${sina}date=${date}&symbol=${sec}${code}" -O ${fenbi_raw1} 2>/dev/null
    xt_ret $? "timeout" || return $?

    fn_parser_load
    xt_ret $? "" || return $?
}


function fn_do_scope()
{
    today=`date +%F`
    sql="SELECT max(datetime) FROM fenbi WHERE code=${code}"
    datetime=`mysql -N kts <<< "${sql}"`
    fmaxdate=`fn_str_2_date ${datetime}`
    # echo ${datetime}

    maxtime=${datetime#????????}
    if [ "${maxtime}" != NULL ] && [ "${maxtime}" -lt 145700 ]; then
        mintime=${datetime%??????}000000
        sql="DELETE FROM fenbi WHERE datetime>${mintime}"
        mysql -N kts <<< "${sql}"
        fn_echo_warn "incomplete fenbi data cleared forcely, re-run"
        exit
    fi

    [ -n "${datetime}" ]
    xt_ret $? "Try create kts.fenbi and tmpfb mannually" || return $?

    if [ "${datetime}" != NULL ] && [ -n "${PREV}" ]; then
        fn_is_digit ${PREV}
        xt_ret $? "" || return $?
        sql="SELECT min(datetime) FROM fenbi WHERE code=${code}"
        min_dt=`mysql -N kts <<< "${sql}"`
        fmindate=`fn_str_2_date ${min_dt}`
        # echo ${datetime}
        sql="
        SELECT date FROM (SELECT date FROM day 
         WHERE code=${code} and date<'${fmindate}' ORDER by date DESC LIMIT ${PREV})
         as tbl ORDER by date ASC"
    elif [ "${datetime}" = NULL ]; then
        sql="
        SELECT date FROM (SELECT date FROM day 
         WHERE code=${code} ORDER by date DESC LIMIT ${NUM:-34})
         as tbl ORDER by date ASC"
    else
        [ `date +%H%M%S` -gt 153000 ] && equal='='
        sql="SELECT date FROM day WHERE code=${code} and date>'${fmaxdate}' and date<${equal}'${today}';"
    fi

    echo "${sql}"

    dates=(`mysql -N kts <<< "${sql}"`)

    if [ ${#dates[@]} -eq 0 ]; then
        echo "It's latest of ${code}, do fenbi to today"
    fi

    local i
    for (( i=0; i<${#dates[@]}; i+=1 )); do
        date=${dates[$i]} fn_do_once
    done

    return $?
}


function fn_main()
{
    code=${1}
    fn_iscode ${code}
    xt_ret $? "Usage: [END=d] [PREV=n] mi5 code" || return $?

    # volume以手为单位，最终数据倍数是day中的100倍


    if [ "${END}" ]; then
        fn_isdate ${END} 
        xt_ret $? "invalid END[$2]" || return $?
        date=${END} fn_do_once
        xt_ret $? "" || return $?
    else
        fn_do_scope
        xt_ret $? "sina" || return $?
    fi


    fn_echo_succ "DL and load fenbi of ${code} succ!"
    
}

fn_main $@

