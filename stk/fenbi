#! /bin/bash -
#  CREATED: 2014-08-13 23:39:33

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc


# 下载分笔数据
function fn_down_eastmoney_fb()
{
    [ ${1:0:1} -eq 6 ] && sec=1 || sec=2
    # sina的分笔粒度是最小的，分笔数据3家对比详见：
    mkdir -p `dirname $fenbi_raw`

    host="http://hqdigi2.eastmoney.com/EM_Quote2010NumericApplication/CompatiblePage.aspx?"
    para="Type=OB&stk=${1}${sec}&Reference=xml&limit=0&page="

    page_cnt=`$W3M -dump "$host${para}1" 2>/dev/null | head -1 | awk -F"[:,]" '{print $2}'`
    [ -z "$page_cnt" ] && echo "error: null page_cnt" && exit

    > $fenbi_raw
    local i
    for (( i=1; i<=$page_cnt; i++ )); do
         url=$host${para}$i
         $W3M -dump "$url" 2>/dev/null >> $fenbi_raw
         xt_ret $? "NETWORK" || return $?
    done

    sed -i '/jsTimeSharingData/d' $fenbi_raw
    cat $fenbi_raw | tr -d '[' | tr -d ']};' | sed 's/","/\n/g'  | tr -d '"' > ${fenbi_ripe}
}

function fn_get_url()
{
    # fenbi只能下载当天数据 & 每次最多输出1000条记录
    # http://webstock.quote.hermes.hexun.com/a/deal?code=szse000002&start=20140813151000&number=-10&callback=callback
    url0="http://webstock.quote.hermes.hexun.com/a/deal?"
    sec=szse 
    # 上证指数sse000001
    if [ ${1:0:1} -eq 6 ] || [ $1 = "000001" ] || [ $1 = "000902" ]; then
        sec=sse
    fi
    echo "${url0}code=${sec}${1}&start=${2}&number=1000"
}

function fn_hexun()
{
    code=$1

    >${buffer}
    [ "${dt}" -lt ${datetime9} ]
    xt_ret $? "Latest@${dt}>${datetime9}" || return 0

    # 防止在macd(F5)时，1分钟有两个记录
    if [ "${dt}" -gt ${datetime0} ]; then
        sql="
        DELETE FROM fenbi WHERE code=${code} and datetime=${dt};
        SELECT max(datetime) FROM fenbi WHERE code=${code};
        "
        dt=`mysql -N kts <<< "${sql}"`
    fi

   #[ "${dt}" -lt ${datetime0} ] && dt=${datetime0}

    while :; do
        url=`fn_get_url ${code} ${dt}`

        echo ${url};
        ${W3M} -dump "${url}" > ${fenbi_raw}
        xt_ret $? "timeout" || return $?

        cat ${fenbi_raw} | sed -n '/\[\[/,$p' |
            sed  -e '1s/^.*\[\[/[[/' -e '$s/]].*$/]]/' > ${fenbi_ripe}

        [ "`stat -c%s $fenbi_ripe`" -gt 80 ]
        xt_ret $? "no data" || return 0
        
        # 2015-03-17 中国平安amount($3)不准，使用($2*$4)/10000替代
        cat ${fenbi_ripe} | JSON.sh -b |
            awk -v code=$code '{
                printf "%s\t%s\t%.2f\t%.2f\t%.2f\n", 
                code,$1,$2/100,$4/100,($2*$4)/10000
        }' | sed "/${dt}/D" >${cache} 
        xt_ret $? "" || return $?

        cat ${cache} >> ${buffer}
        dt=`tail -1 ${cache} | awk '{print $2}'`
        end=`tail -1 /dev/shm/fenbi/raw | awk -F',' '{print $12}'`
        if [ "${dt}" -ge ${end} ]; then
            if [ "${code}" -ge 600000 ]; then   # 沪市尾盘乃自由竞价
                sed -i '$s/1459..\>/150030/' ${buffer}
            fi
            break
        fi

        # exit # uncomment to w3m once
    done

    true && {
        flock 20
        echo "
        TRUNCATE TABLE tmpfb;
        LOAD DATA LOCAL INFILE '${buffer}' INTO TABLE tmpfb;
        INSERT INTO fenbi(code, datetime, trade, volume, amount)
          SELECT code,datetime,trade,sum(volume),sum(amount) FROM 
            (SELECT *,TRUNCATE(datetime%1000000/${mod_fbi},0) as grp from tmpfb ORDER by datetime DESC) 
                as newfb GROUP by grp ORDER by datetime;
        " | mysql -t kts 
        xt_ret $? "" || return $?
    } 20<>'/dev/shm/fenbi/lock'
}

function fn_fb2day()
{
    fn_iscode ${1} || fn_usage
    sqls="code, TRUNCATE(datetime/1000000,0) as date, sum(volume), sum(amount)"
    sqls="SELECT ${sqls} FROM fenbi WHERE code=$1 GROUP by date ORDER by date DESC limit ${LIMIT:-10}"
    sqls="SELECT * from (${sqls}) as tbl ORDER by date ASC"
    mysql -t kts<<<"${sqls}"

    return $?
}

function fn_fenbi()
{
    # 数据的延时在30s内
    code=${1}
    fn_iscode ${code} || fn_usage

    today=`date +%F`
    sql="SELECT max(datetime) FROM fenbi WHERE code=${code}"
    dt=`mysql -N kts <<< "${sql}"`
    fmaxdate=`fn_str_2_date ${dt}`
    date=`date +%Y%m%d`
    wday=`date +%a`

    if [ "${wday}" = Sat ] || [ "${wday}" = Sun ]; then
        date=`fn_maxdate|sed 's/-//g'`  # weekend
    fi

    datetime0="${date}092500"
    datetime4="${date}112900"
    datetime5="${date}130000"
    datetime7="${date}145700"
    datetime9="${date}150000"
    # ---------------------------------------------------------

    if fn_isindex $code; then
        if [ "${dt}" = NULL ]; then
            echo "down index data first time..."
            dt=${datetime0}
        fi
    else
        if [ "${dt}" = NULL ]; then
            echo "exec [ ./mi5 ${code} ] for NULL database..."
            ./mi5 ${code}
            fn_hexun ${code}
            return $?
        else
            # 第一次执行 fn_hexun
            sql="SELECT date FROM day WHERE code=${code} and date>'${fmaxdate}' and date<'${today}';"
            dates=(`mysql -N kts <<< "${sql}"`)

            if [ ${#dates[@]} -ne 0 ]; then
                echo "There are dates(${dates[@]}) of ${code} absent, trying ./mi5 ${code}..."
                mi5 ${code}         # 可能会有空数据
                fn_hexun ${code}    # 否则会再次执行 fn_hexun
                return $?       
            else
                echo "Going to update data of ${code}"
            fi
        fi
    fi

    # read -p "Type any key to continue, Ctrl-C to interrupt"
    # DELETE FROM  fenbi WHERE datetime > 20150303000000

    fn_hexun $code
    xt_ret $? "DL and load mini-fenbi of ${code} fail!" || return $?
}

function fn_squeeze()
{
    codes=`mysql -N kts<<<'SELECT DISTINCT code FROM fenbi'`
    count0=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    
    local i=
    for i in ${codes}; do
        sqls="SELECT date FROM day WHERE code=${i} ORDER by date DESC LIMIT 40,1"
        date=`mysql -N kts<<<"${sqls}"`
        dt=${date//-/}160000
        fn_isdatetime ${dt}
        xt_ret $? "bad format: ${dt}" || return $?
        sqls="DELETE FROM fenbi WHERE code=${i} and datetime<${dt}"
        mysql -N kts<<<"${sqls}"
        echo squeeze ${i} before ${dt} over
    done

    count1=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    let count2=count0-count1
    fn_echo_succ "squeeze ${count2} records total"
}

function fn_delete()
{
    date=`fn_maxdate`
    dt=${date//-/}000000
#   date_p=`date --date="${date} 10 days ago" +'%F'`
    date_p=`mysql -N kts <<< "SELECT date from day WHERE code = 900001 ORDER by date DESC LIMIT 7,1"`   # 保存8天数据
    dt_p=${date_p//-/}000000

    if fn_iscode ${1}; then
        COND="code=${1}"
    else
        COND="datetime<${dt_p}"     # datetime>${dt} 不清除当天数据
    fi
       
    sqls="DELETE FROM fenbi WHERE ${COND}"
    count0=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    mysql -N kts<<<"${sqls}"
    count1=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    let count2=count0-count1
    fn_echo_succ "${sqls}: ${count2} records cleared"
}

function fn_lscode()
{
    sqls='SELECT DISTINCT code FROM fenbi'
    mysql -t kts<<<${sqls}
    return $?
}

function fn_auto_fb()
{
    codes=`lscode l ${@:-${YIST:-.soptter.macd}}`
    local i=
    for i in ${codes}; do
        mi5 ${i}; fenbi ${i};   # 先由mi5进行清扫，再由fenbi补充
    done
    return $?
}

function fn_usage()
{
    echo "Usage: fenbi code..."
    echo "       fenbi l|lscode"
    echo "       fenbi a|auto_fb"
    echo "       fenbi s|squeeze"
    echo "       fenbi r|realtime code"
    echo "       fenbi r5|real_ac5 code"
    echo "       fenbi fb2day code"
    echo "       fenbi d|delete [code]    # without code, clear 10days ago"
    exit
}

function fn_main()
{
    echo "`date +%T`@${BASH_SOURCE##*/} $@" >> /tmp/kts/dtrace

    case $1 in
    l|lscode)
        fn_lscode
        ;;
    a|auto_fb)
        fn_auto_fb ${@:2}
        ;;
    r|realtime)
        fenbi ${2} && PPLUS=${PPLUS:-5} SCREENER act ${2}
        ;;
    r5|real_ac5)
        fenbi ${2} && PPLUS=${PPLUS:-5} SCREENER ac5 ${2}
        ;;
    s|squeeze)
        fn_squeeze
        ;;
    d|delete)
        fn_delete ${@:2}
        ;;
    f|fb2day)
        fn_fb2day ${@:2}
        ;;
    *)
        for i in ${@:-''}; do
            fn_fenbi $i && fn_echo_succ "DL and load mini-fenbi of ${code} succ!"
        done
        ;;
    esac

    return $?
}

fn_main $@
