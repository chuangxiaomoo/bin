#! /bin/bash -
#  CREATED: 2014-08-13 23:39:33

. `dirname ${0}`/'dbank' || { echo "dbank err" && exit; }
. /etc/common.rc


# 下载分笔数据
function fn_down_eastmoney_fb()
{
    [ ${1:0:1} -eq 6 ] && sec=1 || sec=2
    # sina的分笔粒度是最小的，分笔数据3家对比详见：
    mkdir -p `dirname $fenbi_raw`

    host="http://hqdigi2.eastmoney.com/EM_Quote2010NumericApplication/CompatiblePage.aspx?"
    para="Type=OB&stk=${1}${sec}&Reference=xml&limit=0&page="

    page_cnt=`$W3M -dump "$host${para}1" 2>/dev/null | head -1 | awk -F"[:,]" '{print $2}'`
    [ -z "$page_cnt" ] && echo "error: null page_cnt" && exit

    > $fenbi_raw
    local i
    for (( i=1; i<=$page_cnt; i++ )); do
         url=$host${para}$i
         $W3M -dump "$url" 2>/dev/null >> $fenbi_raw
         xt_ret $? "NETWORK" || return $?
    done

    sed -i '/jsTimeSharingData/d' $fenbi_raw
    cat $fenbi_raw | tr -d '[' | tr -d ']};' | sed 's/","/\n/g'  | tr -d '"' > ${fenbi_ripe}
}

function fn_get_url()
{
    # fenbi只能下载当天数据 & 每次最多输出1000条记录
    # http://webstock.quote.hermes.hexun.com/a/deal?code=szse000002&start=20140813151000&number=-10&callback=callback
    url0="http://webstock.quote.hermes.hexun.com/a/deal?"
    sec=szse 
    # 上证指数sse000001
    if [ ${1:0:1} -eq 6 ] || [ $1 = "000001" ] || [ $1 = "000902" ]; then
        sec=sse
    fi
    echo "${url0}code=${sec}${1}&start=${2}&number=${3:-1000}"
}

function fn_code()
{
    code=$1
    fn_iscode ${code} 
    xt_ret $? "${code} is not code" || return $?
    YIST=${chao}.code
    echo $code > ${YIST}

    dates=(`CODE=$code fn_get_date 1 ${2:-3}`)
    #echo ${dates[@]}; exit

    for date in ${dates[@]}; do
        iYMD=`fn_date_2_str ${date}`
        YIST=${YIST} DT=${iYMD}${TIME:-092800} CODE=${code} fenbi lhb
    done
    
    return $?
}

function fn_attention()
{
    fn_echo_warn "\
    1. avrg尽量高       -- 安全系数高
    2. tov<15 nmc<100   -- 安定团结指数, 同时除去高nmc
    3. opri> 3%         -- 向上推高指数
    4. prop尽量低       -- 惜售指数\
    "
    return $?
}

function fn_lhb()
{
    field=$1
    datetime0="${END//-/}092500"
    datetime1="${END//-/}092800"
    datetime3="${END//-/}100000"        # stamp
    datetime9="${END//-/}150000"
    DT=${DT:-${datetime1}}

    YIST=${YIST:-${chao}}
    if [ ! -f "${YIST}" ]; then
        fn_echo_fail 'NULL $YIST'
        exit
    else
        fn_echo_warn "YIST.${YIST}"
    fi
    #fn_echo_blue "END:${END} CURR:${CURR}"

    for code in `cat ${YIST}`; do
        if [ "${END}" = ${CURR} ]; then
            sql="SELECT max(datetime) FROM fenbi WHERE code=${code}"
            maxdt=`mysql -N kts <<< "${sql}"`
            # 最小时间
            # sql="SELECT max(datetime) FROM fenbi WHERE code=${code}"
            # mysql -N kts <<< "${sql}"
            [ "${maxdt/NULL/${datetime0}}" -gt ${DT} ] && continue
            fn_echo_succ "up ${code}>${maxdt}..."
            fenbi ${code}
        else
            END=${END} mi5 ${code}
        fi
    done

    ABBR=f fn_yist
    fn_xtempday ${PREV}
    TBL=e fn_xtempday ${END}
    #echo ${PREV} prev

    tempfb="(SELECT * FROM fenbi WHERE datetime>=$datetime0 and datetime<=${DT} ORDER by datetime DESC)"
   #test_shou='*100'
    RISE="round(100*(f.trade-d.close)/d.close,2)"
    sqls="
    SELECT f.code, max(datetime), f.trade,
        round(sum(f.volume)${test_shou}, 0) as shou,
        ${sql_eTranz}
        ${sql_tov}
        ${sql_avrg}
        round(100*(f.trade-d.close)/d.close, 2) as opri,
        round(sum(f.volume)/(d.volume),2) as prop,
        (round(sum(f.volume)/(d.volume) 
            /IF( abs(${RISE}+${XZZ:-1})<.6, .6, abs(${RISE}+${XZZ:-1})), 2)
            +IF(d.volume/(c.nmc/c.close)>.2, 20,0)
            +IF(${nmcYi0}>${DOOR_nmc}, 100, 0) 
        )*IF( (${RISE}+${XZZ:-1})>0 , 1, -1)  as fire,
        round(100*(e.close-e.yesc)/e.yesc, 2) as apple,
        ${nmcYi0} as nmcYi, c.name
    FROM cap as c, ${tempfb} as f, xtempday as d, e $WHERE f.code=d.code && f.code=c.code && f.code=e.code
    GROUP by f.code
    HAVING ${HAVING:-1} ${COND}
    ORDER by ${field:-fire} ASC
    " 
    mysql ${OPT:-'-t'} kts <<< "${sqls}"
    fn_chao
    return $?
}

function fn_hexun()
{
    code=$1
    num=$2

    >${buffer}
    if [ "${dt}" = NULL ]; then
        fn_echo_line "down index data first time..."
        dt=${datetime0}
    else
        [ "${dt}" -lt ${datetime9} ]
        xt_ret $? "Latest@${dt}>${datetime9}" || return 0
    fi

    # 防止在macd(F5)时，1分钟有两个记录
    if [ "${dt}" -gt ${datetime0} ]; then
        sql="
        DELETE FROM fenbi WHERE code=${code} and datetime=${dt};
        SELECT max(datetime) FROM fenbi WHERE code=${code};
        "
        dt=`mysql -N kts <<< "${sql}"`
    fi

   #[ "${dt}" -lt ${datetime0} ] && dt=${datetime0}

    while :; do
        url=`fn_get_url ${code} ${dt} ${num}`

        echo ${url};
        ${W3M} -dump "${url}" > ${fenbi_raw}
        xt_ret $? "timeout" || return $?

        cat ${fenbi_raw} | sed -n '/\[\[/,$p' |
            sed  -e '1s/^.*\[\[/[[/' -e '$s/]].*$/]]/' > ${fenbi_ripe}

        [ "`stat -c%s $fenbi_ripe`" -gt 80 ]
        xt_ret $? "no data" || return 0
        
        # 2015-03-17 中国平安amount($3)不准，使用($2*$4)/10000替代
        cat ${fenbi_ripe} | JSON.sh -b |
            awk -v code=$code '{
                printf "%s\t%s\t%.2f\t%.2f\t%.2f\n", 
                code,$1,$2/100,$4/100,($2*$4)/10000
        }' | sed "/${dt}/D" >${cache} 
        xt_ret $? "" || return $?

        cat ${cache} >> ${buffer}
        dt=`tail -1 ${cache} | awk '{print $2}'`
        end=`tail -1 /dev/shm/fenbi/raw | awk -F',' '{print $12}'`
        if [ "${dt}" -ge ${end} ]; then
            if [ "${code}" -ge 600000 ]; then   # 沪市尾盘乃自由竞价
                sed -i '$s/1459..\>/150030/' ${buffer}
            fi
            break
        fi

        if [ "${SCOPE60:-0}" -gt 0 ]; then
            break
        fi
    done

    true && {
        flock 20
        echo "
        TRUNCATE TABLE tmpfb;
        LOAD DATA LOCAL INFILE '${buffer}' INTO TABLE tmpfb;
        INSERT INTO fenbi(code, datetime, trade, volume, amount)
          SELECT code,datetime,trade,sum(volume),sum(amount) FROM 
            (SELECT *,TRUNCATE(datetime%1000000/${mod_fbi},0) as grp from tmpfb ORDER by datetime DESC) 
                as newfb GROUP by grp ORDER by datetime;
        " | mysql -t kts 
        xt_ret $? "" || return $?
    } 20<>'/dev/shm/fenbi/lock'
}

function fn_fb2day()
{
    fn_iscode ${1} || fn_usage
    sqls="code, TRUNCATE(datetime/1000000,0) as date, sum(volume), sum(amount)"
    sqls="SELECT ${sqls} FROM fenbi WHERE code=$1 GROUP by date ORDER by date DESC limit ${LIMIT:-10}"
    sqls="SELECT * from (${sqls}) as tbl ORDER by date ASC"
    mysql -t kts<<<"${sqls}"

    return $?
}

function fn_fenbi()
{
    # 数据的延时在30s内
    code=${1}
    fn_iscode ${code} || fn_usage

    today=`date +%F`
    sql="SELECT max(datetime) FROM fenbi WHERE code=${code}"
    dt=`mysql -N kts <<< "${sql}"`
    fmaxdate=`fn_str_2_date ${dt}`
    date=`date +%Y%m%d`
    wday=`date +%a`

    if [ "${wday}" = Sat ] || [ "${wday}" = Sun ]; then
        date=`fn_maxdate|sed 's/-//g'`  # weekend
    fi

    datetime0="${date}092500"
    datetime4="${date}112900"
    datetime5="${date}130000"
    datetime7="${date}145700"
    datetime9="${date}150000"
    # ---------------------------------------------------------

    if fn_isindex $code; then
        if [ "${dt}" = NULL ]; then
            fn_echo_line"down index data first time..."
            dt=${datetime0}
        fi
    else
        if [ "${dt}" = NULL ]; then
            echo "exec [ ./mi5 ${code} ] for NULL database..."
            NUM=2 ./mi5 ${code}                 # 只更新昨天的sina.fenbi数据
            dt=`mysql -N kts <<< "${sql}"`
            fn_hexun ${code}
            return $?
        else
            # 第一次执行 fn_hexun
            sql="SELECT date FROM day WHERE code=${code} and date>'${fmaxdate}' and date<'${today}';"
            dates=(`mysql -N kts <<< "${sql}"`)

            if [ ${#dates[@]} -ne 0 ]; then
                echo "There are dates(${dates[@]}) of ${code} absent, trying ./mi5 ${code}..."
                NUM=2 mi5 ${code}         # 可能会有空数据
                dt=`mysql -N kts <<< "${sql}"`
                fn_hexun ${code}    # 否则会再次执行 fn_hexun
                return $?       
            else
                echo "Going to update data of ${code}"
            fi
        fi
    fi

    # read -p "Type any key to continue, Ctrl-C to interrupt"
    # DELETE FROM  fenbi WHERE datetime > 20150303000000

    fn_hexun $code
    xt_ret $? "DL and load mini-fenbi of ${code} fail!" || return $?
}

function fn_squeeze()
{
    codes=`mysql -N kts<<<'SELECT DISTINCT code FROM fenbi'`
    count0=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    
    local i=
    for i in ${codes}; do
        fn_isindex ${i} && continue
        date=`CODe=${i} fn_get_date 20`   # 20天前
        dt=${date//-/}160000
        fn_isdatetime ${dt}
        xt_ret $? "bad format: ${dt}" || return $?
        sqls="DELETE FROM fenbi WHERE code=${i} and datetime<${dt}"
        mysql -N kts<<<"${sqls}"
        echo squeeze ${i} before ${dt} over
    done

    count1=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    let count2=count0-count1
    fn_echo_succ "squeeze ${count2} records total"
}

function fn_delete()
{
    date=`fn_maxdate`
    dt=${date//-/}000000
#   date_p=`date --date="${date} 10 days ago" +'%F'`
    date_p=`mysql -N kts <<< "SELECT date from day WHERE code = 900001 ORDER by date DESC LIMIT 7,1"`   # 保存8天数据
    dt_p=${date_p//-/}000000

    if fn_iscode ${1}; then
        COND="code=${1}"
    else
        COND="datetime<${dt_p}"     # datetime>${dt} 不清除当天数据
    fi
       
    sqls="DELETE FROM fenbi WHERE ${COND}"
    count0=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    mysql -N kts<<<"${sqls}"
    count1=`mysql -N kts<<<'SELECT count(*) FROM fenbi'`
    let count2=count0-count1
    fn_echo_succ "${sqls}: ${count2} records cleared"
}

function fn_lscode()
{
    sqls='SELECT DISTINCT code FROM fenbi'
    mysql -t kts<<<${sqls}
    return $?
}

function fn_auto_fb()
{
    codes=`lscode l ${@:-${YIST:-.soptter.macd}}`
    local i=
    for i in ${codes}; do
        mi5 ${i}; fenbi ${i};   # 先由mi5进行清扫，再由fenbi补充
    done
    return $?
}

function fn_shou()
{
    field=$1
    sed -i -e '/代码/d' -e '/^$/d' -e 's/S.//g' -e 's/  */\t/g' ${chao}.shou
    echo "
    DROP TABLE IF EXISTS shou;
    CREATE TABLE shou(
        id      int(4) ZEROFILL PRIMARY key AUTO_INCREMENT NOT NULL,
        code    INT(6)  ZEROFILL,
        trade   DECIMAL(6,2) NOT NULL DEFAULT 0,
        shou    INT NOT NULL DEFAULT 0,
        opri    DECIMAL(6,2) NOT NULL DEFAULT 0,
        INDEX(code)
    );

    LOAD DATA LOCAL INFILE '${chao}.shou' INTO 
    TABLE shou(code, trade, shou, opri);
    " | mysql kts

    [ "${DTF}" != ${END} ] && PREV=$END
    fn_xtempday ${PREV}
    fn_echo_warn PREV.${PREV}
    sqls="
    SELECT s.code, s.trade, round(s.shou/100) as shou,
        ${sql_eTranz}
        ${sql_tov}
        ${sql_avrg}
        s.opri,
        round(s.shou/d.volume/100, 2) as prop,

        (abs(
            round((s.shou/100)/d.volume
            /IF( abs(opri+${XZZ:-1})<.6, .6, abs(opri+${XZZ:-1})), 2))
            +IF(d.volume/(c.nmc/c.close)>.2, 20,0)
            +IF(c.nmc>${DOOR_nmc}*10000, 100, 0) 
        )*IF( (opri+${XZZ:-1})>0 , 1, -1)  as fire,
        ${nmcYi0} as nmcYi, c.name
    FROM cap as c, shou as s, xtempday as d $WHERE s.code=d.code && s.code=c.code 
    HAVING ${HAVING:-1} ${COND}
    ORDER by ${field:-fire} ASC
    "
    mysql -t kts <<< "${sqls}"
    fn_chao ${chao}.fenbi
}

#r|realtime)
#    fenbi ${2} && PPLUS=${PPLUS:-5} SCREENER act ${2}
#    ;;
#r5|real_ac5)
#    fenbi ${2} && PPLUS=${PPLUS:-5} SCREENER ac5 ${2}
#    ;;
#   r|realtime  code        # acf 相关
#   r5|real_ac5 code        # acf 相关
#   DTF=${DTF:-}  # 废弃DTF，fenbi 0925需要0930才可以下载
#   END=${END/DTF/${DTF}}   # END=DTF，day在当日无数据时使用，0930前使用
function fn_main()
{
    echo "`date +%T`@${BASH_SOURCE##*/} $@" >> /tmp/kts/dtrace
    [ -n "${DT}" ] && END=`fn_str_2_date ${DT}`

    CURR=`fn_maxdate`
    END=${END:-${CURR}}
    PREV=`fn_get_prev`
    DOOR_nmc=100
    DTF=${DTF:-`date +%F`}
    DTF=${DTF//END/${END}}

    case $1 in
    l|lscode)   fn_lscode           ;;
    a|auto_fb)  fn_auto_fb ${@:2}   ;;
    s|squeeze)  fn_squeeze          ;;
    d|delete)   fn_delete ${@:2}    ;;
    f|fb2day)   fn_fb2day ${@:2}    ;;
    shou)       fn_shou   ${@:2}    ;;
    lhb)        fn_lhb  ${@:2}      ;;
    c|code)     fn_code ${@:2}      ;;
    *)          for i in ${@:-''};  do
                    fn_fenbi $i && fn_echo_succ "DL and load mini-fenbi of ${code} succ!"
                done                ;;
    esac
}

function fn_usage()
{
    echo "
    Usage: fenbi <param>
        l|lscode 
        a|auto_fb 
        s|squeeze               # del 20天前的数据
        f|fb2day  code          #
        d|delete  code          # without code, clear 10days ago 
        lhb      [field]        # YIST列表中的tov
        shou                    # 信息输入 [/tmp/kts/chao.shou] 进行测试 [DTF=END]
        c|code    code [NUM]    # code近{NUM:-3}日换手
    "
    fn_attention; exit
}

fn_main $@
